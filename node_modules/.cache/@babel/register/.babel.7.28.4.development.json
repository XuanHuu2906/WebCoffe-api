<<<<<<< HEAD
{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst cors = require('cors');\nconst mongoose = require('mongoose');\nconst path = require('path');\nrequire('dotenv').config();\n// Restart trigger\n\nconst app = express();\nconst PORT = process.env.PORT || 5002;\n\n// Middleware\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\n\n// Serve static files from uploads directory\napp.use('/uploads', express.static(path.join(__dirname, '../uploads')));\n\n// Database connection\nconst connectDB = async () => {\n  try {\n    console.log('Connecting to MongoDB...');\n    await mongoose.connect(process.env.MONGODB_URI);\n    console.log('MongoDB connected successfully - nodemon restart triggered');\n  } catch (error) {\n    console.error('MongoDB connection failed:', error.message);\n    console.log('\\n=== DATABASE SETUP REQUIRED ===');\n    console.log('MongoDB is not running or not installed.');\n    console.log('To set up MongoDB:');\n    console.log('1. Install MongoDB Community Server from: https://www.mongodb.com/try/download/community');\n    console.log('2. Start MongoDB service');\n    console.log('3. Restart this server');\n    console.log('\\nFor now, the server will continue without database connectivity.');\n    console.log('Some features may not work properly until MongoDB is set up.');\n    console.log('================================\\n');\n  }\n};\n\n// Routes\napp.get('/', (req, res) => {\n  res.json({\n    message: 'DREAM COFFEE API is running!'\n  });\n});\n\n// Import routes\napp.use('/api/products', require('./routes/products'));\napp.use('/api/auth', require('./routes/auth'));\napp.use('/api/orders', require('./routes/orders'));\napp.use('/api/payments', require('./routes/payments'));\napp.use('/api/upload', require('./routes/upload'));\napp.use('/api/admin', require('./routes/admin'));\napp.use('/api/shop', require('./routes/shop'));\napp.use('/api/contact', require('./routes/contact'));\n// app.use('/api/users', require('./routes/users'));\n\n// Error handling middleware\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({\n    message: 'Something went wrong!'\n  });\n});\n\n// 404 handler\napp.use('*', (req, res) => {\n  res.status(404).json({\n    message: 'Route not found'\n  });\n});\n\n// Start server\nconst startServer = async () => {\n  await connectDB();\n  app.listen(PORT, () => {\n    console.log(`Server is running on port ${PORT}`);\n    console.log(`API available at http://localhost:${PORT}`);\n  });\n};\nstartServer(); // restart with port 5002\n// trigger restart\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNvcnMiLCJtb25nb29zZSIsInBhdGgiLCJjb25maWciLCJhcHAiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJzdGF0aWMiLCJqb2luIiwiX19kaXJuYW1lIiwiY29ubmVjdERCIiwiY29uc29sZSIsImxvZyIsImNvbm5lY3QiLCJNT05HT0RCX1VSSSIsImVycm9yIiwibWVzc2FnZSIsImdldCIsInJlcSIsInJlcyIsImVyciIsIm5leHQiLCJzdGFjayIsInN0YXR1cyIsInN0YXJ0U2VydmVyIiwibGlzdGVuIl0sInNvdXJjZVJvb3QiOiJEOlxcY29kZVxcV2ViQ2FmZmVcXGJhY2tlbmRcXHNyY1xcIiwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcbi8vIFJlc3RhcnQgdHJpZ2dlclxuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA1MDAyO1xuXG4vLyBNaWRkbGV3YXJlXG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuXG4vLyBTZXJ2ZSBzdGF0aWMgZmlsZXMgZnJvbSB1cGxvYWRzIGRpcmVjdG9yeVxuYXBwLnVzZSgnL3VwbG9hZHMnLCBleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vdXBsb2FkcycpKSk7XG5cbi8vIERhdGFiYXNlIGNvbm5lY3Rpb25cbmNvbnN0IGNvbm5lY3REQiA9IGFzeW5jICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygnQ29ubmVjdGluZyB0byBNb25nb0RCLi4uJyk7XG4gICAgYXdhaXQgbW9uZ29vc2UuY29ubmVjdChwcm9jZXNzLmVudi5NT05HT0RCX1VSSSk7XG4gICAgY29uc29sZS5sb2coJ01vbmdvREIgY29ubmVjdGVkIHN1Y2Nlc3NmdWxseSAtIG5vZGVtb24gcmVzdGFydCB0cmlnZ2VyZWQnKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdNb25nb0RCIGNvbm5lY3Rpb24gZmFpbGVkOicsIGVycm9yLm1lc3NhZ2UpO1xuICAgIGNvbnNvbGUubG9nKCdcXG49PT0gREFUQUJBU0UgU0VUVVAgUkVRVUlSRUQgPT09Jyk7XG4gICAgY29uc29sZS5sb2coJ01vbmdvREIgaXMgbm90IHJ1bm5pbmcgb3Igbm90IGluc3RhbGxlZC4nKTtcbiAgICBjb25zb2xlLmxvZygnVG8gc2V0IHVwIE1vbmdvREI6Jyk7XG4gICAgY29uc29sZS5sb2coJzEuIEluc3RhbGwgTW9uZ29EQiBDb21tdW5pdHkgU2VydmVyIGZyb206IGh0dHBzOi8vd3d3Lm1vbmdvZGIuY29tL3RyeS9kb3dubG9hZC9jb21tdW5pdHknKTtcbiAgICBjb25zb2xlLmxvZygnMi4gU3RhcnQgTW9uZ29EQiBzZXJ2aWNlJyk7XG4gICAgY29uc29sZS5sb2coJzMuIFJlc3RhcnQgdGhpcyBzZXJ2ZXInKTtcbiAgICBjb25zb2xlLmxvZygnXFxuRm9yIG5vdywgdGhlIHNlcnZlciB3aWxsIGNvbnRpbnVlIHdpdGhvdXQgZGF0YWJhc2UgY29ubmVjdGl2aXR5LicpO1xuICAgIGNvbnNvbGUubG9nKCdTb21lIGZlYXR1cmVzIG1heSBub3Qgd29yayBwcm9wZXJseSB1bnRpbCBNb25nb0RCIGlzIHNldCB1cC4nKTtcbiAgICBjb25zb2xlLmxvZygnPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cXG4nKTtcbiAgfVxufTtcblxuLy8gUm91dGVzXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5qc29uKHsgbWVzc2FnZTogJ0RSRUFNIENPRkZFRSBBUEkgaXMgcnVubmluZyEnIH0pO1xufSk7XG5cbi8vIEltcG9ydCByb3V0ZXNcbmFwcC51c2UoJy9hcGkvcHJvZHVjdHMnLCByZXF1aXJlKCcuL3JvdXRlcy9wcm9kdWN0cycpKTtcbmFwcC51c2UoJy9hcGkvYXV0aCcsIHJlcXVpcmUoJy4vcm91dGVzL2F1dGgnKSk7XG5hcHAudXNlKCcvYXBpL29yZGVycycsIHJlcXVpcmUoJy4vcm91dGVzL29yZGVycycpKTtcbmFwcC51c2UoJy9hcGkvcGF5bWVudHMnLCByZXF1aXJlKCcuL3JvdXRlcy9wYXltZW50cycpKTtcbmFwcC51c2UoJy9hcGkvdXBsb2FkJywgcmVxdWlyZSgnLi9yb3V0ZXMvdXBsb2FkJykpO1xuYXBwLnVzZSgnL2FwaS9hZG1pbicsIHJlcXVpcmUoJy4vcm91dGVzL2FkbWluJykpO1xuYXBwLnVzZSgnL2FwaS9zaG9wJywgcmVxdWlyZSgnLi9yb3V0ZXMvc2hvcCcpKTtcbmFwcC51c2UoJy9hcGkvY29udGFjdCcsIHJlcXVpcmUoJy4vcm91dGVzL2NvbnRhY3QnKSk7XG4vLyBhcHAudXNlKCcvYXBpL3VzZXJzJywgcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcnMnKSk7XG5cbi8vIEVycm9yIGhhbmRsaW5nIG1pZGRsZXdhcmVcbmFwcC51c2UoKGVyciwgcmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc29sZS5lcnJvcihlcnIuc3RhY2spO1xuICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICdTb21ldGhpbmcgd2VudCB3cm9uZyEnIH0pO1xufSk7XG5cbi8vIDQwNCBoYW5kbGVyXG5hcHAudXNlKCcqJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgbWVzc2FnZTogJ1JvdXRlIG5vdCBmb3VuZCcgfSk7XG59KTtcblxuLy8gU3RhcnQgc2VydmVyXG5jb25zdCBzdGFydFNlcnZlciA9IGFzeW5jICgpID0+IHtcbiAgYXdhaXQgY29ubmVjdERCKCk7XG4gIGFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaXMgcnVubmluZyBvbiBwb3J0ICR7UE9SVH1gKTtcbiAgICBjb25zb2xlLmxvZyhgQVBJIGF2YWlsYWJsZSBhdCBodHRwOi8vbG9jYWxob3N0OiR7UE9SVH1gKTtcbiAgfSk7XG59O1xuXG5zdGFydFNlcnZlcigpOy8vIHJlc3RhcnQgd2l0aCBwb3J0IDUwMDJcbi8vIHRyaWdnZXIgcmVzdGFydFxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDbEMsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzVCLE1BQU1FLFFBQVEsR0FBR0YsT0FBTyxDQUFDLFVBQVUsQ0FBQztBQUNwQyxNQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDNUJBLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQ0ksTUFBTSxDQUFDLENBQUM7QUFDMUI7O0FBRUEsTUFBTUMsR0FBRyxHQUFHTixPQUFPLENBQUMsQ0FBQztBQUNyQixNQUFNTyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixJQUFJLElBQUksSUFBSTs7QUFFckM7QUFDQUQsR0FBRyxDQUFDSSxHQUFHLENBQUNSLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDZkksR0FBRyxDQUFDSSxHQUFHLENBQUNWLE9BQU8sQ0FBQ1csSUFBSSxDQUFDLENBQUMsQ0FBQztBQUN2QkwsR0FBRyxDQUFDSSxHQUFHLENBQUNWLE9BQU8sQ0FBQ1ksVUFBVSxDQUFDO0VBQUVDLFFBQVEsRUFBRTtBQUFLLENBQUMsQ0FBQyxDQUFDOztBQUUvQztBQUNBUCxHQUFHLENBQUNJLEdBQUcsQ0FBQyxVQUFVLEVBQUVWLE9BQU8sQ0FBQ2MsTUFBTSxDQUFDVixJQUFJLENBQUNXLElBQUksQ0FBQ0MsU0FBUyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUM7O0FBRXZFO0FBQ0EsTUFBTUMsU0FBUyxHQUFHLE1BQUFBLENBQUEsS0FBWTtFQUM1QixJQUFJO0lBQ0ZDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDBCQUEwQixDQUFDO0lBQ3ZDLE1BQU1oQixRQUFRLENBQUNpQixPQUFPLENBQUNaLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDWSxXQUFXLENBQUM7SUFDL0NILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDREQUE0RCxDQUFDO0VBQzNFLENBQUMsQ0FBQyxPQUFPRyxLQUFLLEVBQUU7SUFDZEosT0FBTyxDQUFDSSxLQUFLLENBQUMsNEJBQTRCLEVBQUVBLEtBQUssQ0FBQ0MsT0FBTyxDQUFDO0lBQzFETCxPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQ0FBbUMsQ0FBQztJQUNoREQsT0FBTyxDQUFDQyxHQUFHLENBQUMsMENBQTBDLENBQUM7SUFDdkRELE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG9CQUFvQixDQUFDO0lBQ2pDRCxPQUFPLENBQUNDLEdBQUcsQ0FBQywwRkFBMEYsQ0FBQztJQUN2R0QsT0FBTyxDQUFDQyxHQUFHLENBQUMsMEJBQTBCLENBQUM7SUFDdkNELE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHdCQUF3QixDQUFDO0lBQ3JDRCxPQUFPLENBQUNDLEdBQUcsQ0FBQyxvRUFBb0UsQ0FBQztJQUNqRkQsT0FBTyxDQUFDQyxHQUFHLENBQUMsOERBQThELENBQUM7SUFDM0VELE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG9DQUFvQyxDQUFDO0VBQ25EO0FBQ0YsQ0FBQzs7QUFFRDtBQUNBYixHQUFHLENBQUNrQixHQUFHLENBQUMsR0FBRyxFQUFFLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQ3pCQSxHQUFHLENBQUNmLElBQUksQ0FBQztJQUFFWSxPQUFPLEVBQUU7RUFBK0IsQ0FBQyxDQUFDO0FBQ3ZELENBQUMsQ0FBQzs7QUFFRjtBQUNBakIsR0FBRyxDQUFDSSxHQUFHLENBQUMsZUFBZSxFQUFFVCxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUN0REssR0FBRyxDQUFDSSxHQUFHLENBQUMsV0FBVyxFQUFFVCxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDOUNLLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLGFBQWEsRUFBRVQsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDbERLLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLGVBQWUsRUFBRVQsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDdERLLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLGFBQWEsRUFBRVQsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDbERLLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLFlBQVksRUFBRVQsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDaERLLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLFdBQVcsRUFBRVQsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQzlDSyxHQUFHLENBQUNJLEdBQUcsQ0FBQyxjQUFjLEVBQUVULE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0FBQ3BEOztBQUVBO0FBQ0FLLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLENBQUNpQixHQUFHLEVBQUVGLEdBQUcsRUFBRUMsR0FBRyxFQUFFRSxJQUFJLEtBQUs7RUFDL0JWLE9BQU8sQ0FBQ0ksS0FBSyxDQUFDSyxHQUFHLENBQUNFLEtBQUssQ0FBQztFQUN4QkgsR0FBRyxDQUFDSSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNuQixJQUFJLENBQUM7SUFBRVksT0FBTyxFQUFFO0VBQXdCLENBQUMsQ0FBQztBQUM1RCxDQUFDLENBQUM7O0FBRUY7QUFDQWpCLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDZSxHQUFHLEVBQUVDLEdBQUcsS0FBSztFQUN6QkEsR0FBRyxDQUFDSSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNuQixJQUFJLENBQUM7SUFBRVksT0FBTyxFQUFFO0VBQWtCLENBQUMsQ0FBQztBQUN0RCxDQUFDLENBQUM7O0FBRUY7QUFDQSxNQUFNUSxXQUFXLEdBQUcsTUFBQUEsQ0FBQSxLQUFZO0VBQzlCLE1BQU1kLFNBQVMsQ0FBQyxDQUFDO0VBQ2pCWCxHQUFHLENBQUMwQixNQUFNLENBQUN6QixJQUFJLEVBQUUsTUFBTTtJQUNyQlcsT0FBTyxDQUFDQyxHQUFHLENBQUMsNkJBQTZCWixJQUFJLEVBQUUsQ0FBQztJQUNoRFcsT0FBTyxDQUFDQyxHQUFHLENBQUMscUNBQXFDWixJQUFJLEVBQUUsQ0FBQztFQUMxRCxDQUFDLENBQUM7QUFDSixDQUFDO0FBRUR3QixXQUFXLENBQUMsQ0FBQyxDQUFDO0FBQ2QiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["express","require","cors","mongoose","path","config","app","PORT","process","env","use","json","urlencoded","extended","static","join","__dirname","connectDB","console","log","connect","MONGODB_URI","error","message","get","req","res","err","next","stack","status","startServer","listen"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\","sources":["index.js"],"sourcesContent":["const express = require('express');\nconst cors = require('cors');\nconst mongoose = require('mongoose');\nconst path = require('path');\nrequire('dotenv').config();\n// Restart trigger\n\nconst app = express();\nconst PORT = process.env.PORT || 5002;\n\n// Middleware\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// Serve static files from uploads directory\napp.use('/uploads', express.static(path.join(__dirname, '../uploads')));\n\n// Database connection\nconst connectDB = async () => {\n  try {\n    console.log('Connecting to MongoDB...');\n    await mongoose.connect(process.env.MONGODB_URI);\n    console.log('MongoDB connected successfully - nodemon restart triggered');\n  } catch (error) {\n    console.error('MongoDB connection failed:', error.message);\n    console.log('\\n=== DATABASE SETUP REQUIRED ===');\n    console.log('MongoDB is not running or not installed.');\n    console.log('To set up MongoDB:');\n    console.log('1. Install MongoDB Community Server from: https://www.mongodb.com/try/download/community');\n    console.log('2. Start MongoDB service');\n    console.log('3. Restart this server');\n    console.log('\\nFor now, the server will continue without database connectivity.');\n    console.log('Some features may not work properly until MongoDB is set up.');\n    console.log('================================\\n');\n  }\n};\n\n// Routes\napp.get('/', (req, res) => {\n  res.json({ message: 'DREAM COFFEE API is running!' });\n});\n\n// Import routes\napp.use('/api/products', require('./routes/products'));\napp.use('/api/auth', require('./routes/auth'));\napp.use('/api/orders', require('./routes/orders'));\napp.use('/api/payments', require('./routes/payments'));\napp.use('/api/upload', require('./routes/upload'));\napp.use('/api/admin', require('./routes/admin'));\napp.use('/api/shop', require('./routes/shop'));\napp.use('/api/contact', require('./routes/contact'));\n// app.use('/api/users', require('./routes/users'));\n\n// Error handling middleware\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({ message: 'Something went wrong!' });\n});\n\n// 404 handler\napp.use('*', (req, res) => {\n  res.status(404).json({ message: 'Route not found' });\n});\n\n// Start server\nconst startServer = async () => {\n  await connectDB();\n  app.listen(PORT, () => {\n    console.log(`Server is running on port ${PORT}`);\n    console.log(`API available at http://localhost:${PORT}`);\n  });\n};\n\nstartServer();// restart with port 5002\n// trigger restart\n"],"mappings":"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","ignoreList":[]}},"mtime":1757589081061},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\products.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst Product = require('../models/Product');\nconst router = express.Router();\n\n// Sample products data for seeding (will be moved to database)\n// Products are now stored in MongoDB\n// Use the seedProducts.js script to populate the database with sample data\n\n// @route   GET /api/products\n// @desc    Get all products with optional filtering\n// @access  Public\nrouter.get('/', async (req, res) => {\n  try {\n    const {\n      category,\n      featured,\n      search,\n      page = 1,\n      limit = 10,\n      includeOutOfStock\n    } = req.query;\n\n    // Build query object\n    let query = {};\n\n    // Only filter by inStock if includeOutOfStock is not set to 'true'\n    if (includeOutOfStock !== 'true') {\n      query.inStock = true;\n    }\n    if (category) {\n      query.category = new RegExp(category, 'i');\n    }\n    if (featured === 'true') {\n      query.featured = true;\n    }\n    if (search) {\n      query.$or = [{\n        name: new RegExp(search, 'i')\n      }, {\n        description: new RegExp(search, 'i')\n      }];\n    }\n\n    // Calculate pagination\n    const pageNum = parseInt(page);\n    const limitNum = parseInt(limit);\n    const skip = (pageNum - 1) * limitNum;\n\n    // Execute queries\n    const [products, total] = await Promise.all([Product.find(query).skip(skip).limit(limitNum).sort({\n      createdAt: -1\n    }), Product.countDocuments(query)]);\n    res.json({\n      success: true,\n      data: products,\n      pagination: {\n        current: pageNum,\n        pages: Math.ceil(total / limitNum),\n        total: total\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching products'\n    });\n  }\n});\n\n// @route   GET /api/products/categories\n// @desc    Get all product categories\n// @access  Public\nrouter.get('/categories', async (req, res) => {\n  try {\n    // Return the enum categories from the schema instead of existing data\n    const categories = ['Cà phê', 'Thức uống đậm vị', 'Đồ uống tươi mát', 'Bánh ngọt'];\n    res.json({\n      success: true,\n      data: categories\n    });\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching categories'\n    });\n  }\n});\n\n// @route   GET /api/products/featured\n// @desc    Get featured products\n// @access  Public\nrouter.get('/featured', async (req, res) => {\n  try {\n    const featuredProducts = await Product.find({\n      featured: true,\n      inStock: true\n    });\n    res.json({\n      success: true,\n      data: featuredProducts\n    });\n  } catch (error) {\n    console.error('Error fetching featured products:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching featured products'\n    });\n  }\n});\n\n// @route   GET /api/products/bestsellers\n// @desc    Get best selling products\n// @access  Public\nrouter.get('/bestsellers', async (req, res) => {\n  try {\n    const Order = require('../models/Order');\n\n    // Get top selling products from order data\n    const bestSellers = await Order.aggregate([{\n      $unwind: '$items'\n    }, {\n      $group: {\n        _id: '$items.product',\n        name: {\n          $first: '$items.name'\n        },\n        totalSold: {\n          $sum: '$items.quantity'\n        },\n        totalRevenue: {\n          $sum: {\n            $multiply: ['$items.price', '$items.quantity']\n          }\n        }\n      }\n    }, {\n      $sort: {\n        totalSold: -1\n      }\n    }, {\n      $limit: 6\n    }]);\n\n    // Get full product details for best sellers\n    const productIds = bestSellers.map(item => item._id).filter(id => id);\n    const products = await Product.find({\n      _id: {\n        $in: productIds\n      },\n      inStock: true\n    });\n\n    // Merge sales data with product details\n    const bestSellerProducts = products.map(product => {\n      const salesData = bestSellers.find(item => item._id && item._id.toString() === product._id.toString());\n      return {\n        ...product.toObject(),\n        totalSold: salesData ? salesData.totalSold : 0\n      };\n    });\n\n    // Sort by total sold and limit to 6\n    bestSellerProducts.sort((a, b) => b.totalSold - a.totalSold);\n    res.json({\n      success: true,\n      data: bestSellerProducts.slice(0, 6)\n    });\n  } catch (error) {\n    console.error('Error fetching best sellers:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching best sellers'\n    });\n  }\n});\n\n// @route   GET /api/products/:id\n// @desc    Get single product\n// @access  Public\nrouter.get('/:id', async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: product\n    });\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching product'\n    });\n  }\n});\n\n// @route   POST /api/products\n// @desc    Create new product\n// @access  Private/Admin\nrouter.post('/', async (req, res) => {\n  try {\n    const {\n      name,\n      category,\n      description,\n      price,\n      image,\n      imageUrl,\n      imagePublicId,\n      featured,\n      sizes\n    } = req.body;\n    const productData = {\n      name,\n      category,\n      description,\n      price: parseFloat(price),\n      image,\n      imageUrl,\n      imagePublicId,\n      featured: featured || false,\n      inStock: true,\n      sizes: sizes || [{\n        name: 'Regular',\n        price: parseFloat(price)\n      }]\n    };\n    const newProduct = await Product.create(productData);\n    res.status(201).json({\n      success: true,\n      data: newProduct\n    });\n  } catch (error) {\n    console.error('Error creating product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating product'\n    });\n  }\n});\n\n// @route   PUT /api/products/:id\n// @desc    Update product\n// @access  Private/Admin\nrouter.put('/:id', async (req, res) => {\n  try {\n    const {\n      name,\n      category,\n      description,\n      price,\n      image,\n      imageUrl,\n      imagePublicId,\n      featured,\n      inStock,\n      sizes\n    } = req.body;\n\n    // Get the existing product to check for old image\n    const existingProduct = await Product.findById(req.params.id);\n    if (!existingProduct) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n\n    // If updating with a new Cloudinary image, delete the old one\n    if (imagePublicId && existingProduct.imagePublicId && existingProduct.imagePublicId !== imagePublicId) {\n      try {\n        const {\n          deleteFromCloudinary\n        } = require('../config/cloudinary');\n        await deleteFromCloudinary(existingProduct.imagePublicId);\n      } catch (cloudinaryError) {\n        console.error('Error deleting old image from Cloudinary:', cloudinaryError);\n        // Continue with update even if Cloudinary deletion fails\n      }\n    }\n    const updateData = {};\n    if (name !== undefined) updateData.name = name;\n    if (category !== undefined) updateData.category = category;\n    if (description !== undefined) updateData.description = description;\n    if (price !== undefined) updateData.price = parseFloat(price);\n    if (image !== undefined) updateData.image = image;\n    if (imageUrl !== undefined) updateData.imageUrl = imageUrl;\n    if (imagePublicId !== undefined) updateData.imagePublicId = imagePublicId;\n    if (featured !== undefined) updateData.featured = featured;\n    if (inStock !== undefined) updateData.inStock = inStock;\n    if (sizes !== undefined) updateData.sizes = sizes;\n    const updatedProduct = await Product.findByIdAndUpdate(req.params.id, updateData, {\n      new: true,\n      runValidators: true\n    });\n    res.json({\n      success: true,\n      data: updatedProduct\n    });\n  } catch (error) {\n    console.error('Error updating product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating product'\n    });\n  }\n});\n\n// @route   DELETE /api/products/:id\n// @desc    Delete product\n// @access  Private/Admin\nrouter.delete('/:id', async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n\n    // Delete image from Cloudinary if it exists\n    if (product.imagePublicId) {\n      try {\n        const {\n          deleteFromCloudinary\n        } = require('../config/cloudinary');\n        await deleteFromCloudinary(product.imagePublicId);\n      } catch (cloudinaryError) {\n        console.error('Error deleting image from Cloudinary:', cloudinaryError);\n        // Continue with product deletion even if Cloudinary deletion fails\n      }\n    }\n    const deletedProduct = await Product.findByIdAndDelete(req.params.id);\n    res.json({\n      success: true,\n      data: deletedProduct,\n      message: 'Product deleted successfully'\n    });\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while deleting product'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","Product","router","Router","get","req","res","category","featured","search","page","limit","includeOutOfStock","query","inStock","RegExp","$or","name","description","pageNum","parseInt","limitNum","skip","products","total","Promise","all","find","sort","createdAt","countDocuments","json","success","data","pagination","current","pages","Math","ceil","error","console","status","message","categories","featuredProducts","Order","bestSellers","aggregate","$unwind","$group","_id","$first","totalSold","$sum","totalRevenue","$multiply","$sort","$limit","productIds","map","item","filter","id","$in","bestSellerProducts","product","salesData","toString","toObject","a","b","slice","findById","params","post","price","image","imageUrl","imagePublicId","sizes","body","productData","parseFloat","newProduct","create","put","existingProduct","deleteFromCloudinary","cloudinaryError","updateData","undefined","updatedProduct","findByIdAndUpdate","new","runValidators","delete","deletedProduct","findByIdAndDelete","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["products.js"],"sourcesContent":["const express = require('express');\nconst Product = require('../models/Product');\nconst router = express.Router();\n\n// Sample products data for seeding (will be moved to database)\n// Products are now stored in MongoDB\n// Use the seedProducts.js script to populate the database with sample data\n\n// @route   GET /api/products\n// @desc    Get all products with optional filtering\n// @access  Public\nrouter.get('/', async (req, res) => {\n  try {\n    const { category, featured, search, page = 1, limit = 10, includeOutOfStock } = req.query;\n    \n    // Build query object\n    let query = {};\n    \n    // Only filter by inStock if includeOutOfStock is not set to 'true'\n    if (includeOutOfStock !== 'true') {\n      query.inStock = true;\n    }\n    \n    if (category) {\n      query.category = new RegExp(category, 'i');\n    }\n    \n    if (featured === 'true') {\n      query.featured = true;\n    }\n    \n    if (search) {\n      query.$or = [\n        { name: new RegExp(search, 'i') },\n        { description: new RegExp(search, 'i') }\n      ];\n    }\n    \n    // Calculate pagination\n    const pageNum = parseInt(page);\n    const limitNum = parseInt(limit);\n    const skip = (pageNum - 1) * limitNum;\n    \n    // Execute queries\n    const [products, total] = await Promise.all([\n      Product.find(query)\n        .skip(skip)\n        .limit(limitNum)\n        .sort({ createdAt: -1 }),\n      Product.countDocuments(query)\n    ]);\n    \n    res.json({\n      success: true,\n      data: products,\n      pagination: {\n        current: pageNum,\n        pages: Math.ceil(total / limitNum),\n        total: total\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching products'\n    });\n  }\n});\n\n// @route   GET /api/products/categories\n// @desc    Get all product categories\n// @access  Public\nrouter.get('/categories', async (req, res) => {\n  try {\n    // Return the enum categories from the schema instead of existing data\n    const categories = ['Cà phê', 'Thức uống đậm vị', 'Đồ uống tươi mát', 'Bánh ngọt'];\n    \n    res.json({\n      success: true,\n      data: categories\n    });\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching categories'\n    });\n  }\n});\n\n// @route   GET /api/products/featured\n// @desc    Get featured products\n// @access  Public\nrouter.get('/featured', async (req, res) => {\n  try {\n    const featuredProducts = await Product.find({ featured: true, inStock: true });\n    \n    res.json({\n      success: true,\n      data: featuredProducts\n    });\n  } catch (error) {\n    console.error('Error fetching featured products:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching featured products'\n    });\n  }\n});\n\n// @route   GET /api/products/bestsellers\n// @desc    Get best selling products\n// @access  Public\nrouter.get('/bestsellers', async (req, res) => {\n  try {\n    const Order = require('../models/Order');\n    \n    // Get top selling products from order data\n    const bestSellers = await Order.aggregate([\n      { $unwind: '$items' },\n      {\n        $group: {\n          _id: '$items.product',\n          name: { $first: '$items.name' },\n          totalSold: { $sum: '$items.quantity' },\n          totalRevenue: { $sum: { $multiply: ['$items.price', '$items.quantity'] } }\n        }\n      },\n      { $sort: { totalSold: -1 } },\n      { $limit: 6 }\n    ]);\n    \n    // Get full product details for best sellers\n    const productIds = bestSellers.map(item => item._id).filter(id => id);\n    const products = await Product.find({ \n      _id: { $in: productIds }, \n      inStock: true \n    });\n    \n    // Merge sales data with product details\n    const bestSellerProducts = products.map(product => {\n      const salesData = bestSellers.find(item => \n        item._id && item._id.toString() === product._id.toString()\n      );\n      return {\n        ...product.toObject(),\n        totalSold: salesData ? salesData.totalSold : 0\n      };\n    });\n    \n    // Sort by total sold and limit to 6\n    bestSellerProducts.sort((a, b) => b.totalSold - a.totalSold);\n    \n    res.json({\n      success: true,\n      data: bestSellerProducts.slice(0, 6)\n    });\n  } catch (error) {\n    console.error('Error fetching best sellers:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching best sellers'\n    });\n  }\n});\n\n// @route   GET /api/products/:id\n// @desc    Get single product\n// @access  Public\nrouter.get('/:id', async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    \n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: product\n    });\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching product'\n    });\n  }\n});\n\n// @route   POST /api/products\n// @desc    Create new product\n// @access  Private/Admin\nrouter.post('/', async (req, res) => {\n  try {\n    const { name, category, description, price, image, imageUrl, imagePublicId, featured, sizes } = req.body;\n    \n    const productData = {\n      name,\n      category,\n      description,\n      price: parseFloat(price),\n      image,\n      imageUrl,\n      imagePublicId,\n      featured: featured || false,\n      inStock: true,\n      sizes: sizes || [{ name: 'Regular', price: parseFloat(price) }]\n    };\n    \n    const newProduct = await Product.create(productData);\n    \n    res.status(201).json({\n      success: true,\n      data: newProduct\n    });\n  } catch (error) {\n    console.error('Error creating product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating product'\n    });\n  }\n});\n\n// @route   PUT /api/products/:id\n// @desc    Update product\n// @access  Private/Admin\nrouter.put('/:id', async (req, res) => {\n  try {\n    const { name, category, description, price, image, imageUrl, imagePublicId, featured, inStock, sizes } = req.body;\n    \n    // Get the existing product to check for old image\n    const existingProduct = await Product.findById(req.params.id);\n    if (!existingProduct) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n    \n    // If updating with a new Cloudinary image, delete the old one\n    if (imagePublicId && existingProduct.imagePublicId && existingProduct.imagePublicId !== imagePublicId) {\n      try {\n        const { deleteFromCloudinary } = require('../config/cloudinary');\n        await deleteFromCloudinary(existingProduct.imagePublicId);\n      } catch (cloudinaryError) {\n        console.error('Error deleting old image from Cloudinary:', cloudinaryError);\n        // Continue with update even if Cloudinary deletion fails\n      }\n    }\n    \n    const updateData = {};\n    if (name !== undefined) updateData.name = name;\n    if (category !== undefined) updateData.category = category;\n    if (description !== undefined) updateData.description = description;\n    if (price !== undefined) updateData.price = parseFloat(price);\n    if (image !== undefined) updateData.image = image;\n    if (imageUrl !== undefined) updateData.imageUrl = imageUrl;\n    if (imagePublicId !== undefined) updateData.imagePublicId = imagePublicId;\n    if (featured !== undefined) updateData.featured = featured;\n    if (inStock !== undefined) updateData.inStock = inStock;\n    if (sizes !== undefined) updateData.sizes = sizes;\n    \n    const updatedProduct = await Product.findByIdAndUpdate(\n      req.params.id,\n      updateData,\n      { new: true, runValidators: true }\n    );\n    \n\n    \n    res.json({\n      success: true,\n      data: updatedProduct\n    });\n  } catch (error) {\n    console.error('Error updating product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating product'\n    });\n  }\n});\n\n// @route   DELETE /api/products/:id\n// @desc    Delete product\n// @access  Private/Admin\nrouter.delete('/:id', async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    \n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n    \n    // Delete image from Cloudinary if it exists\n    if (product.imagePublicId) {\n      try {\n        const { deleteFromCloudinary } = require('../config/cloudinary');\n        await deleteFromCloudinary(product.imagePublicId);\n      } catch (cloudinaryError) {\n        console.error('Error deleting image from Cloudinary:', cloudinaryError);\n        // Continue with product deletion even if Cloudinary deletion fails\n      }\n    }\n    \n    const deletedProduct = await Product.findByIdAndDelete(req.params.id);\n    \n    res.json({\n      success: true,\n      data: deletedProduct,\n      message: 'Product deleted successfully'\n    });\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while deleting product'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757524331863},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\Product.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const mongoose = require('mongoose');\nconst productSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Product name is required'],\n    trim: true,\n    maxlength: [100, 'Product name cannot exceed 100 characters']\n  },\n  description: {\n    type: String,\n    required: [true, 'Product description is required'],\n    maxlength: [500, 'Description cannot exceed 500 characters']\n  },\n  price: {\n    type: Number,\n    required: [true, 'Product price is required'],\n    min: [0, 'Price cannot be negative']\n  },\n  category: {\n    type: String,\n    required: [true, 'Product category is required'],\n    enum: ['Cà phê', 'Thức uống đậm vị', 'Đồ uống tươi mát', 'Bánh ngọt'],\n    trim: true\n  },\n  image: {\n    type: String,\n    default: '/images/default-product.jpg'\n  },\n  imageUrl: {\n    type: String,\n    default: null\n  },\n  imagePublicId: {\n    type: String,\n    default: null\n  },\n  inStock: {\n    type: Boolean,\n    default: true\n  },\n  featured: {\n    type: Boolean,\n    default: false\n  },\n  ingredients: [{\n    type: String,\n    trim: true\n  }],\n  nutritionalInfo: {\n    calories: {\n      type: Number,\n      min: 0\n    },\n    protein: {\n      type: Number,\n      min: 0\n    },\n    carbs: {\n      type: Number,\n      min: 0\n    },\n    fat: {\n      type: Number,\n      min: 0\n    }\n  },\n  sizes: [{\n    name: {\n      type: String,\n      required: true\n    },\n    // Small, Medium, Large\n    price: {\n      type: Number,\n      required: true,\n      min: 0\n    },\n    available: {\n      type: Boolean,\n      default: true\n    }\n  }]\n}, {\n  timestamps: true\n});\n\n// Index for better search performance\nproductSchema.index({\n  name: 'text',\n  description: 'text'\n});\nproductSchema.index({\n  category: 1\n});\nproductSchema.index({\n  featured: 1\n});\nproductSchema.index({\n  inStock: 1\n});\nmodule.exports = mongoose.model('Product', productSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJwcm9kdWN0U2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInRyaW0iLCJtYXhsZW5ndGgiLCJkZXNjcmlwdGlvbiIsInByaWNlIiwiTnVtYmVyIiwibWluIiwiY2F0ZWdvcnkiLCJlbnVtIiwiaW1hZ2UiLCJkZWZhdWx0IiwiaW1hZ2VVcmwiLCJpbWFnZVB1YmxpY0lkIiwiaW5TdG9jayIsIkJvb2xlYW4iLCJmZWF0dXJlZCIsImluZ3JlZGllbnRzIiwibnV0cml0aW9uYWxJbmZvIiwiY2Fsb3JpZXMiLCJwcm90ZWluIiwiY2FyYnMiLCJmYXQiLCJzaXplcyIsImF2YWlsYWJsZSIsInRpbWVzdGFtcHMiLCJpbmRleCIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJzb3VyY2VSb290IjoiRDpcXGNvZGVcXFdlYkNhZmZlXFxiYWNrZW5kXFxzcmNcXG1vZGVsc1xcIiwic291cmNlcyI6WyJQcm9kdWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcblxuY29uc3QgcHJvZHVjdFNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBuYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ1Byb2R1Y3QgbmFtZSBpcyByZXF1aXJlZCddLFxuICAgIHRyaW06IHRydWUsXG4gICAgbWF4bGVuZ3RoOiBbMTAwLCAnUHJvZHVjdCBuYW1lIGNhbm5vdCBleGNlZWQgMTAwIGNoYXJhY3RlcnMnXVxuICB9LFxuICBkZXNjcmlwdGlvbjoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogW3RydWUsICdQcm9kdWN0IGRlc2NyaXB0aW9uIGlzIHJlcXVpcmVkJ10sXG4gICAgbWF4bGVuZ3RoOiBbNTAwLCAnRGVzY3JpcHRpb24gY2Fubm90IGV4Y2VlZCA1MDAgY2hhcmFjdGVycyddXG4gIH0sXG4gIHByaWNlOiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ1Byb2R1Y3QgcHJpY2UgaXMgcmVxdWlyZWQnXSxcbiAgICBtaW46IFswLCAnUHJpY2UgY2Fubm90IGJlIG5lZ2F0aXZlJ11cbiAgfSxcbiAgY2F0ZWdvcnk6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IFt0cnVlLCAnUHJvZHVjdCBjYXRlZ29yeSBpcyByZXF1aXJlZCddLFxuICAgIGVudW06IFsnQ8OgIHBow6onLCAnVGjhu6ljIHXhu5FuZyDEkeG6rW0gduG7iycsICfEkOG7kyB14buRbmcgdMawxqFpIG3DoXQnLCAnQsOhbmggbmfhu410J10sXG4gICAgdHJpbTogdHJ1ZVxuICB9LFxuICBpbWFnZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBkZWZhdWx0OiAnL2ltYWdlcy9kZWZhdWx0LXByb2R1Y3QuanBnJ1xuICB9LFxuICBpbWFnZVVybDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBkZWZhdWx0OiBudWxsXG4gIH0sXG4gIGltYWdlUHVibGljSWQ6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgZGVmYXVsdDogbnVsbFxuICB9LFxuICBpblN0b2NrOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiB0cnVlXG4gIH0sXG4gIGZlYXR1cmVkOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9LFxuICBpbmdyZWRpZW50czogW3tcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgdHJpbTogdHJ1ZVxuICB9XSxcbiAgbnV0cml0aW9uYWxJbmZvOiB7XG4gICAgY2Fsb3JpZXM6IHsgdHlwZTogTnVtYmVyLCBtaW46IDAgfSxcbiAgICBwcm90ZWluOiB7IHR5cGU6IE51bWJlciwgbWluOiAwIH0sXG4gICAgY2FyYnM6IHsgdHlwZTogTnVtYmVyLCBtaW46IDAgfSxcbiAgICBmYXQ6IHsgdHlwZTogTnVtYmVyLCBtaW46IDAgfVxuICB9LFxuICBzaXplczogW3tcbiAgICBuYW1lOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSwgLy8gU21hbGwsIE1lZGl1bSwgTGFyZ2VcbiAgICBwcmljZTogeyB0eXBlOiBOdW1iZXIsIHJlcXVpcmVkOiB0cnVlLCBtaW46IDAgfSxcbiAgICBhdmFpbGFibGU6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogdHJ1ZSB9XG4gIH1dXG59LCB7XG4gIHRpbWVzdGFtcHM6IHRydWVcbn0pO1xuXG4vLyBJbmRleCBmb3IgYmV0dGVyIHNlYXJjaCBwZXJmb3JtYW5jZVxucHJvZHVjdFNjaGVtYS5pbmRleCh7IG5hbWU6ICd0ZXh0JywgZGVzY3JpcHRpb246ICd0ZXh0JyB9KTtcbnByb2R1Y3RTY2hlbWEuaW5kZXgoeyBjYXRlZ29yeTogMSB9KTtcbnByb2R1Y3RTY2hlbWEuaW5kZXgoeyBmZWF0dXJlZDogMSB9KTtcbnByb2R1Y3RTY2hlbWEuaW5kZXgoeyBpblN0b2NrOiAxIH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdQcm9kdWN0JywgcHJvZHVjdFNjaGVtYSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFFcEMsTUFBTUMsYUFBYSxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBTSxDQUFDO0VBQ3hDQyxJQUFJLEVBQUU7SUFDSkMsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSwwQkFBMEIsQ0FBQztJQUM1Q0MsSUFBSSxFQUFFLElBQUk7SUFDVkMsU0FBUyxFQUFFLENBQUMsR0FBRyxFQUFFLDJDQUEyQztFQUM5RCxDQUFDO0VBQ0RDLFdBQVcsRUFBRTtJQUNYTCxJQUFJLEVBQUVDLE1BQU07SUFDWkMsUUFBUSxFQUFFLENBQUMsSUFBSSxFQUFFLGlDQUFpQyxDQUFDO0lBQ25ERSxTQUFTLEVBQUUsQ0FBQyxHQUFHLEVBQUUsMENBQTBDO0VBQzdELENBQUM7RUFDREUsS0FBSyxFQUFFO0lBQ0xOLElBQUksRUFBRU8sTUFBTTtJQUNaTCxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsMkJBQTJCLENBQUM7SUFDN0NNLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSwwQkFBMEI7RUFDckMsQ0FBQztFQUNEQyxRQUFRLEVBQUU7SUFDUlQsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSw4QkFBOEIsQ0FBQztJQUNoRFEsSUFBSSxFQUFFLENBQUMsUUFBUSxFQUFFLGtCQUFrQixFQUFFLGtCQUFrQixFQUFFLFdBQVcsQ0FBQztJQUNyRVAsSUFBSSxFQUFFO0VBQ1IsQ0FBQztFQUNEUSxLQUFLLEVBQUU7SUFDTFgsSUFBSSxFQUFFQyxNQUFNO0lBQ1pXLE9BQU8sRUFBRTtFQUNYLENBQUM7RUFDREMsUUFBUSxFQUFFO0lBQ1JiLElBQUksRUFBRUMsTUFBTTtJQUNaVyxPQUFPLEVBQUU7RUFDWCxDQUFDO0VBQ0RFLGFBQWEsRUFBRTtJQUNiZCxJQUFJLEVBQUVDLE1BQU07SUFDWlcsT0FBTyxFQUFFO0VBQ1gsQ0FBQztFQUNERyxPQUFPLEVBQUU7SUFDUGYsSUFBSSxFQUFFZ0IsT0FBTztJQUNiSixPQUFPLEVBQUU7RUFDWCxDQUFDO0VBQ0RLLFFBQVEsRUFBRTtJQUNSakIsSUFBSSxFQUFFZ0IsT0FBTztJQUNiSixPQUFPLEVBQUU7RUFDWCxDQUFDO0VBQ0RNLFdBQVcsRUFBRSxDQUFDO0lBQ1psQixJQUFJLEVBQUVDLE1BQU07SUFDWkUsSUFBSSxFQUFFO0VBQ1IsQ0FBQyxDQUFDO0VBQ0ZnQixlQUFlLEVBQUU7SUFDZkMsUUFBUSxFQUFFO01BQUVwQixJQUFJLEVBQUVPLE1BQU07TUFBRUMsR0FBRyxFQUFFO0lBQUUsQ0FBQztJQUNsQ2EsT0FBTyxFQUFFO01BQUVyQixJQUFJLEVBQUVPLE1BQU07TUFBRUMsR0FBRyxFQUFFO0lBQUUsQ0FBQztJQUNqQ2MsS0FBSyxFQUFFO01BQUV0QixJQUFJLEVBQUVPLE1BQU07TUFBRUMsR0FBRyxFQUFFO0lBQUUsQ0FBQztJQUMvQmUsR0FBRyxFQUFFO01BQUV2QixJQUFJLEVBQUVPLE1BQU07TUFBRUMsR0FBRyxFQUFFO0lBQUU7RUFDOUIsQ0FBQztFQUNEZ0IsS0FBSyxFQUFFLENBQUM7SUFDTnpCLElBQUksRUFBRTtNQUFFQyxJQUFJLEVBQUVDLE1BQU07TUFBRUMsUUFBUSxFQUFFO0lBQUssQ0FBQztJQUFFO0lBQ3hDSSxLQUFLLEVBQUU7TUFBRU4sSUFBSSxFQUFFTyxNQUFNO01BQUVMLFFBQVEsRUFBRSxJQUFJO01BQUVNLEdBQUcsRUFBRTtJQUFFLENBQUM7SUFDL0NpQixTQUFTLEVBQUU7TUFBRXpCLElBQUksRUFBRWdCLE9BQU87TUFBRUosT0FBTyxFQUFFO0lBQUs7RUFDNUMsQ0FBQztBQUNILENBQUMsRUFBRTtFQUNEYyxVQUFVLEVBQUU7QUFDZCxDQUFDLENBQUM7O0FBRUY7QUFDQTdCLGFBQWEsQ0FBQzhCLEtBQUssQ0FBQztFQUFFNUIsSUFBSSxFQUFFLE1BQU07RUFBRU0sV0FBVyxFQUFFO0FBQU8sQ0FBQyxDQUFDO0FBQzFEUixhQUFhLENBQUM4QixLQUFLLENBQUM7RUFBRWxCLFFBQVEsRUFBRTtBQUFFLENBQUMsQ0FBQztBQUNwQ1osYUFBYSxDQUFDOEIsS0FBSyxDQUFDO0VBQUVWLFFBQVEsRUFBRTtBQUFFLENBQUMsQ0FBQztBQUNwQ3BCLGFBQWEsQ0FBQzhCLEtBQUssQ0FBQztFQUFFWixPQUFPLEVBQUU7QUFBRSxDQUFDLENBQUM7QUFFbkNhLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHbEMsUUFBUSxDQUFDbUMsS0FBSyxDQUFDLFNBQVMsRUFBRWpDLGFBQWEsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["mongoose","require","productSchema","Schema","name","type","String","required","trim","maxlength","description","price","Number","min","category","enum","image","default","imageUrl","imagePublicId","inStock","Boolean","featured","ingredients","nutritionalInfo","calories","protein","carbs","fat","sizes","available","timestamps","index","module","exports","model"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\models\\","sources":["Product.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst productSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Product name is required'],\n    trim: true,\n    maxlength: [100, 'Product name cannot exceed 100 characters']\n  },\n  description: {\n    type: String,\n    required: [true, 'Product description is required'],\n    maxlength: [500, 'Description cannot exceed 500 characters']\n  },\n  price: {\n    type: Number,\n    required: [true, 'Product price is required'],\n    min: [0, 'Price cannot be negative']\n  },\n  category: {\n    type: String,\n    required: [true, 'Product category is required'],\n    enum: ['Cà phê', 'Thức uống đậm vị', 'Đồ uống tươi mát', 'Bánh ngọt'],\n    trim: true\n  },\n  image: {\n    type: String,\n    default: '/images/default-product.jpg'\n  },\n  imageUrl: {\n    type: String,\n    default: null\n  },\n  imagePublicId: {\n    type: String,\n    default: null\n  },\n  inStock: {\n    type: Boolean,\n    default: true\n  },\n  featured: {\n    type: Boolean,\n    default: false\n  },\n  ingredients: [{\n    type: String,\n    trim: true\n  }],\n  nutritionalInfo: {\n    calories: { type: Number, min: 0 },\n    protein: { type: Number, min: 0 },\n    carbs: { type: Number, min: 0 },\n    fat: { type: Number, min: 0 }\n  },\n  sizes: [{\n    name: { type: String, required: true }, // Small, Medium, Large\n    price: { type: Number, required: true, min: 0 },\n    available: { type: Boolean, default: true }\n  }]\n}, {\n  timestamps: true\n});\n\n// Index for better search performance\nproductSchema.index({ name: 'text', description: 'text' });\nproductSchema.index({ category: 1 });\nproductSchema.index({ featured: 1 });\nproductSchema.index({ inStock: 1 });\n\nmodule.exports = mongoose.model('Product', productSchema);"],"mappings":"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","ignoreList":[]}},"mtime":1757433503379},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst jwt = require('jsonwebtoken');\nconst User = require('../models/User');\nconst {\n  protect\n} = require('../middleware/auth');\n\n// Generate JWT Token\nconst generateToken = userId => {\n  return jwt.sign({\n    userId\n  }, process.env.JWT_SECRET || 'fallback_secret', {\n    expiresIn: process.env.JWT_EXPIRE || '30d'\n  });\n};\n\n// @route   POST /api/auth/register\n// @desc    Register a new user\n// @access  Public\nrouter.post('/register', async (req, res) => {\n  try {\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      phone,\n      role\n    } = req.body;\n\n    // Check if user already exists\n    const existingUser = await User.findOne({\n      email: email.toLowerCase().trim()\n    });\n    if (existingUser) {\n      return res.status(400).json({\n        success: false,\n        message: 'User already exists with this email'\n      });\n    }\n\n    // Create new user (password will be hashed automatically by the User model)\n    const newUser = new User({\n      firstName,\n      lastName,\n      email: email.toLowerCase().trim(),\n      password,\n      phone,\n      role: role || 'customer'\n    });\n    await newUser.save();\n\n    // Generate token\n    const token = generateToken(newUser._id);\n\n    // Remove password from response\n    const userResponse = {\n      _id: newUser._id,\n      firstName: newUser.firstName,\n      lastName: newUser.lastName,\n      email: newUser.email,\n      phone: newUser.phone,\n      role: newUser.role,\n      createdAt: newUser.createdAt\n    };\n    res.status(201).json({\n      success: true,\n      token,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Registration error:', error);\n\n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n\n    // Handle duplicate key error\n    if (error.code === 11000) {\n      return res.status(400).json({\n        success: false,\n        message: 'User already exists with this email'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error during registration'\n    });\n  }\n});\n\n// @route   POST /api/auth/login\n// @desc    Login user\n// @access  Public\nrouter.post('/login', async (req, res) => {\n  try {\n    const {\n      email,\n      password\n    } = req.body;\n\n    // Find user by email (include password for comparison)\n    const user = await User.findOne({\n      email: email.toLowerCase().trim()\n    }).select('+password');\n    if (!user) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid credentials'\n      });\n    }\n\n    // Check if user is active\n    if (!user.isActive) {\n      return res.status(401).json({\n        success: false,\n        message: 'Account is deactivated'\n      });\n    }\n\n    // Check password using the model method\n    const isMatch = await user.comparePassword(password);\n    if (!isMatch) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid credentials'\n      });\n    }\n\n    // Generate token\n    const token = generateToken(user._id);\n\n    // Remove password from response\n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      createdAt: user.createdAt\n    };\n    res.json({\n      success: true,\n      token,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Login error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error during login'\n    });\n  }\n});\n\n// @route   GET /api/auth/me\n// @desc    Get current user\n// @access  Private\nrouter.get('/me', protect, async (req, res) => {\n  try {\n    // req.user is set by the auth middleware\n    const user = await User.findById(req.user._id);\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n\n    // Check if user is active\n    if (!user.isActive) {\n      return res.status(401).json({\n        success: false,\n        message: 'Account is deactivated'\n      });\n    }\n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      createdAt: user.createdAt\n    };\n    res.json({\n      success: true,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Get user error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   PUT /api/auth/profile\n// @desc    Update user profile\n// @access  Private\nrouter.put('/profile', protect, async (req, res) => {\n  try {\n    const {\n      firstName,\n      lastName,\n      email,\n      phone,\n      address,\n      preferences\n    } = req.body;\n\n    // Find the current user\n    const user = await User.findById(req.user._id);\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n\n    // Check if email is being changed and if it already exists\n    if (email && email.toLowerCase().trim() !== user.email) {\n      const existingUser = await User.findOne({\n        email: email.toLowerCase().trim(),\n        _id: {\n          $ne: user._id\n        }\n      });\n      if (existingUser) {\n        return res.status(400).json({\n          success: false,\n          message: 'Email already exists'\n        });\n      }\n    }\n\n    // Update user fields\n    if (firstName) user.firstName = firstName;\n    if (lastName) user.lastName = lastName;\n    if (email) user.email = email.toLowerCase().trim();\n    if (phone) user.phone = phone;\n    if (address) {\n      user.address = {\n        ...user.address,\n        ...address\n      };\n    }\n    if (preferences) {\n      user.preferences = {\n        ...user.preferences,\n        ...preferences\n      };\n    }\n    await user.save();\n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      address: user.address,\n      preferences: user.preferences,\n      createdAt: user.createdAt,\n      updatedAt: user.updatedAt\n    };\n    res.json({\n      success: true,\n      message: 'Profile updated successfully',\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Profile update error:', error);\n\n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n\n    // Handle duplicate key error\n    if (error.code === 11000) {\n      return res.status(400).json({\n        success: false,\n        message: 'Email already exists'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error during profile update'\n    });\n  }\n});\n\n// @route   PUT /api/auth/password\n// @desc    Change user password\n// @access  Private\nrouter.put('/password', protect, async (req, res) => {\n  try {\n    const {\n      currentPassword,\n      newPassword\n    } = req.body;\n    if (!currentPassword || !newPassword) {\n      return res.status(400).json({\n        success: false,\n        message: 'Current password and new password are required'\n      });\n    }\n    if (newPassword.length < 6) {\n      return res.status(400).json({\n        success: false,\n        message: 'New password must be at least 6 characters long'\n      });\n    }\n\n    // Find the current user with password\n    const user = await User.findById(req.user._id).select('+password');\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n\n    // Check current password\n    const isMatch = await user.comparePassword(currentPassword);\n    if (!isMatch) {\n      return res.status(400).json({\n        success: false,\n        message: 'Current password is incorrect'\n      });\n    }\n\n    // Update password (will be hashed automatically by the User model)\n    user.password = newPassword;\n    await user.save();\n    res.json({\n      success: true,\n      message: 'Password updated successfully'\n    });\n  } catch (error) {\n    console.error('Password update error:', error);\n\n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error during password update'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","jwt","User","protect","generateToken","userId","sign","process","env","JWT_SECRET","expiresIn","JWT_EXPIRE","post","req","res","firstName","lastName","email","password","phone","role","body","existingUser","findOne","toLowerCase","trim","status","json","success","message","newUser","save","token","_id","userResponse","createdAt","user","error","console","name","messages","Object","values","errors","map","err","join","code","select","isActive","isMatch","comparePassword","loyaltyPoints","get","findById","put","address","preferences","$ne","updatedAt","currentPassword","newPassword","length","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["auth.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst jwt = require('jsonwebtoken');\nconst User = require('../models/User');\nconst { protect } = require('../middleware/auth');\n\n// Generate JWT Token\nconst generateToken = (userId) => {\n  return jwt.sign({ userId }, process.env.JWT_SECRET || 'fallback_secret', {\n    expiresIn: process.env.JWT_EXPIRE || '30d'\n  });\n};\n\n// @route   POST /api/auth/register\n// @desc    Register a new user\n// @access  Public\nrouter.post('/register', async (req, res) => {\n  try {\n    const { firstName, lastName, email, password, phone, role } = req.body;\n    \n    // Check if user already exists\n    const existingUser = await User.findOne({ email: email.toLowerCase().trim() });\n    if (existingUser) {\n      return res.status(400).json({\n        success: false,\n        message: 'User already exists with this email'\n      });\n    }\n    \n    // Create new user (password will be hashed automatically by the User model)\n    const newUser = new User({\n      firstName,\n      lastName,\n      email: email.toLowerCase().trim(),\n      password,\n      phone,\n      role: role || 'customer'\n    });\n    \n    await newUser.save();\n    \n    // Generate token\n    const token = generateToken(newUser._id);\n    \n    // Remove password from response\n    const userResponse = {\n      _id: newUser._id,\n      firstName: newUser.firstName,\n      lastName: newUser.lastName,\n      email: newUser.email,\n      phone: newUser.phone,\n      role: newUser.role,\n      createdAt: newUser.createdAt\n    };\n    \n    res.status(201).json({\n      success: true,\n      token,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Registration error:', error);\n    \n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n    \n    // Handle duplicate key error\n    if (error.code === 11000) {\n      return res.status(400).json({\n        success: false,\n        message: 'User already exists with this email'\n      });\n    }\n    \n    res.status(500).json({\n      success: false,\n      message: 'Server error during registration'\n    });\n  }\n});\n\n// @route   POST /api/auth/login\n// @desc    Login user\n// @access  Public\nrouter.post('/login', async (req, res) => {\n  try {\n    const { email, password } = req.body;\n    \n    // Find user by email (include password for comparison)\n    const user = await User.findOne({ email: email.toLowerCase().trim() }).select('+password');\n    if (!user) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid credentials'\n      });\n    }\n    \n    // Check if user is active\n    if (!user.isActive) {\n      return res.status(401).json({\n        success: false,\n        message: 'Account is deactivated'\n      });\n    }\n    \n    // Check password using the model method\n    const isMatch = await user.comparePassword(password);\n    if (!isMatch) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid credentials'\n      });\n    }\n    \n    // Generate token\n    const token = generateToken(user._id);\n    \n    // Remove password from response\n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      createdAt: user.createdAt\n    };\n    \n    res.json({\n      success: true,\n      token,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Login error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error during login'\n    });\n  }\n});\n\n// @route   GET /api/auth/me\n// @desc    Get current user\n// @access  Private\nrouter.get('/me', protect, async (req, res) => {\n  try {\n    // req.user is set by the auth middleware\n    const user = await User.findById(req.user._id);\n    \n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n    \n    // Check if user is active\n    if (!user.isActive) {\n      return res.status(401).json({\n        success: false,\n        message: 'Account is deactivated'\n      });\n    }\n    \n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      createdAt: user.createdAt\n    };\n    \n    res.json({\n      success: true,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Get user error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   PUT /api/auth/profile\n// @desc    Update user profile\n// @access  Private\nrouter.put('/profile', protect, async (req, res) => {\n  try {\n    const { firstName, lastName, email, phone, address, preferences } = req.body;\n    \n    // Find the current user\n    const user = await User.findById(req.user._id);\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n    \n    // Check if email is being changed and if it already exists\n    if (email && email.toLowerCase().trim() !== user.email) {\n      const existingUser = await User.findOne({ \n        email: email.toLowerCase().trim(),\n        _id: { $ne: user._id }\n      });\n      if (existingUser) {\n        return res.status(400).json({\n          success: false,\n          message: 'Email already exists'\n        });\n      }\n    }\n    \n    // Update user fields\n    if (firstName) user.firstName = firstName;\n    if (lastName) user.lastName = lastName;\n    if (email) user.email = email.toLowerCase().trim();\n    if (phone) user.phone = phone;\n    if (address) {\n      user.address = {\n        ...user.address,\n        ...address\n      };\n    }\n    if (preferences) {\n      user.preferences = {\n        ...user.preferences,\n        ...preferences\n      };\n    }\n    \n    await user.save();\n    \n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      address: user.address,\n      preferences: user.preferences,\n      createdAt: user.createdAt,\n      updatedAt: user.updatedAt\n    };\n    \n    res.json({\n      success: true,\n      message: 'Profile updated successfully',\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Profile update error:', error);\n    \n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n    \n    // Handle duplicate key error\n    if (error.code === 11000) {\n      return res.status(400).json({\n        success: false,\n        message: 'Email already exists'\n      });\n    }\n    \n    res.status(500).json({\n      success: false,\n      message: 'Server error during profile update'\n    });\n  }\n});\n\n// @route   PUT /api/auth/password\n// @desc    Change user password\n// @access  Private\nrouter.put('/password', protect, async (req, res) => {\n  try {\n    const { currentPassword, newPassword } = req.body;\n    \n    if (!currentPassword || !newPassword) {\n      return res.status(400).json({\n        success: false,\n        message: 'Current password and new password are required'\n      });\n    }\n    \n    if (newPassword.length < 6) {\n      return res.status(400).json({\n        success: false,\n        message: 'New password must be at least 6 characters long'\n      });\n    }\n    \n    // Find the current user with password\n    const user = await User.findById(req.user._id).select('+password');\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n    \n    // Check current password\n    const isMatch = await user.comparePassword(currentPassword);\n    if (!isMatch) {\n      return res.status(400).json({\n        success: false,\n        message: 'Current password is incorrect'\n      });\n    }\n    \n    // Update password (will be hashed automatically by the User model)\n    user.password = newPassword;\n    await user.save();\n    \n    res.json({\n      success: true,\n      message: 'Password updated successfully'\n    });\n  } catch (error) {\n    console.error('Password update error:', error);\n    \n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n    \n    res.status(500).json({\n      success: false,\n      message: 'Server error during password update'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1756225536247},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\User.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst userSchema = new mongoose.Schema({\n  firstName: {\n    type: String,\n    required: [true, 'First name is required'],\n    trim: true,\n    maxlength: [50, 'First name cannot exceed 50 characters']\n  },\n  lastName: {\n    type: String,\n    required: [true, 'Last name is required'],\n    trim: true,\n    maxlength: [50, 'Last name cannot exceed 50 characters']\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    unique: true,\n    lowercase: true,\n    trim: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email']\n  },\n  password: {\n    type: String,\n    required: [true, 'Password is required'],\n    minlength: [6, 'Password must be at least 6 characters'],\n    select: false // Don't include password in queries by default\n  },\n  phone: {\n    type: String,\n    trim: true,\n    match: [/^\\d{10}$/, 'Please enter a valid phone number']\n  },\n  address: {\n    street: {\n      type: String,\n      trim: true\n    },\n    city: {\n      type: String,\n      trim: true\n    },\n    state: {\n      type: String,\n      trim: true\n    },\n    zipCode: {\n      type: String,\n      trim: true\n    },\n    country: {\n      type: String,\n      trim: true,\n      default: 'USA'\n    }\n  },\n  role: {\n    type: String,\n    enum: ['customer', 'admin'],\n    default: 'customer'\n  },\n  isActive: {\n    type: Boolean,\n    default: true\n  },\n  preferences: {\n    newsletter: {\n      type: Boolean,\n      default: false\n    },\n    notifications: {\n      type: Boolean,\n      default: true\n    }\n  },\n  loyaltyPoints: {\n    type: Number,\n    default: 0,\n    min: 0\n  }\n}, {\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n});\n\n// Virtual for full name\nuserSchema.virtual('name').get(function () {\n  return `${this.firstName} ${this.lastName}`;\n});\n\n// Index for better performance\nuserSchema.index({\n  email: 1\n});\nuserSchema.index({\n  role: 1\n});\n\n// Hash password before saving\nuserSchema.pre('save', async function (next) {\n  // Only hash the password if it has been modified (or is new)\n  if (!this.isModified('password')) return next();\n  try {\n    // Hash password with cost of 12\n    const hashedPassword = await bcrypt.hash(this.password, 12);\n    this.password = hashedPassword;\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Instance method to check password\nuserSchema.methods.comparePassword = async function (candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Instance method to get full name\nuserSchema.methods.getFullName = function () {\n  return `${this.firstName} ${this.lastName}`;\n};\nmodule.exports = mongoose.model('User', userSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["mongoose","require","bcrypt","userSchema","Schema","firstName","type","String","required","trim","maxlength","lastName","email","unique","lowercase","match","password","minlength","select","phone","address","street","city","state","zipCode","country","default","role","enum","isActive","Boolean","preferences","newsletter","notifications","loyaltyPoints","Number","min","timestamps","toJSON","virtuals","toObject","virtual","get","index","pre","next","isModified","hashedPassword","hash","error","methods","comparePassword","candidatePassword","compare","getFullName","module","exports","model"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\models\\","sources":["User.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\nconst userSchema = new mongoose.Schema({\n  firstName: {\n    type: String,\n    required: [true, 'First name is required'],\n    trim: true,\n    maxlength: [50, 'First name cannot exceed 50 characters']\n  },\n  lastName: {\n    type: String,\n    required: [true, 'Last name is required'],\n    trim: true,\n    maxlength: [50, 'Last name cannot exceed 50 characters']\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    unique: true,\n    lowercase: true,\n    trim: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email']\n  },\n  password: {\n    type: String,\n    required: [true, 'Password is required'],\n    minlength: [6, 'Password must be at least 6 characters'],\n    select: false // Don't include password in queries by default\n  },\n  phone: {\n    type: String,\n    trim: true,\n    match: [/^\\d{10}$/, 'Please enter a valid phone number']\n  },\n  address: {\n    street: { type: String, trim: true },\n    city: { type: String, trim: true },\n    state: { type: String, trim: true },\n    zipCode: { type: String, trim: true },\n    country: { type: String, trim: true, default: 'USA' }\n  },\n  role: {\n    type: String,\n    enum: ['customer', 'admin'],\n    default: 'customer'\n  },\n  isActive: {\n    type: Boolean,\n    default: true\n  },\n  preferences: {\n    newsletter: { type: Boolean, default: false },\n    notifications: { type: Boolean, default: true }\n  },\n  loyaltyPoints: {\n    type: Number,\n    default: 0,\n    min: 0\n  }\n}, {\n  timestamps: true,\n  toJSON: { virtuals: true },\n  toObject: { virtuals: true }\n});\n\n// Virtual for full name\nuserSchema.virtual('name').get(function() {\n  return `${this.firstName} ${this.lastName}`;\n});\n\n// Index for better performance\nuserSchema.index({ email: 1 });\nuserSchema.index({ role: 1 });\n\n// Hash password before saving\nuserSchema.pre('save', async function(next) {\n  // Only hash the password if it has been modified (or is new)\n  if (!this.isModified('password')) return next();\n  \n  try {\n    // Hash password with cost of 12\n    const hashedPassword = await bcrypt.hash(this.password, 12);\n    this.password = hashedPassword;\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Instance method to check password\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Instance method to get full name\nuserSchema.methods.getFullName = function() {\n  return `${this.firstName} ${this.lastName}`;\n};\n\nmodule.exports = mongoose.model('User', userSchema);"],"mappings":"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","ignoreList":[]}},"mtime":1757523841233},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\middleware\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\middleware\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const jwt = require('jsonwebtoken');\nconst User = require('../models/User');\n\n// Middleware to protect routes\nconst protect = async (req, res, next) => {\n  try {\n    let token;\n\n    // Check for token in Authorization header\n    if (req.headers.authorization && req.headers.authorization.startsWith('Bearer')) {\n      token = req.headers.authorization.split(' ')[1];\n    }\n\n    // Make sure token exists\n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n    try {\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n      // Get user from token\n      const user = await User.findById(decoded.userId);\n      if (!user) {\n        return res.status(401).json({\n          success: false,\n          message: 'User not found'\n        });\n      }\n      if (!user.isActive) {\n        return res.status(401).json({\n          success: false,\n          message: 'User account is deactivated'\n        });\n      }\n      req.user = user;\n      next();\n    } catch (error) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n  } catch (error) {\n    console.error('Auth middleware error:', error);\n    return res.status(500).json({\n      success: false,\n      message: 'Server error in authentication'\n    });\n  }\n};\n\n// Middleware to check if user is admin\nconst authorize = (...roles) => {\n  return (req, res, next) => {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n    if (!roles.includes(req.user.role)) {\n      return res.status(403).json({\n        success: false,\n        message: `User role ${req.user.role} is not authorized to access this route`\n      });\n    }\n    next();\n  };\n};\n\n// Middleware to check if user owns the resource or is admin\nconst authorizeOwnerOrAdmin = (req, res, next) => {\n  if (!req.user) {\n    return res.status(401).json({\n      success: false,\n      message: 'Not authorized to access this route'\n    });\n  }\n\n  // Allow if user is admin or owns the resource\n  if (req.user.role === 'admin' || req.user._id.toString() === req.params.userId) {\n    next();\n  } else {\n    return res.status(403).json({\n      success: false,\n      message: 'Not authorized to access this resource'\n    });\n  }\n};\nmodule.exports = {\n  protect,\n  authorize,\n  authorizeOwnerOrAdmin\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiVXNlciIsInByb3RlY3QiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInN0YXJ0c1dpdGgiLCJzcGxpdCIsInN0YXR1cyIsImpzb24iLCJzdWNjZXNzIiwibWVzc2FnZSIsImRlY29kZWQiLCJ2ZXJpZnkiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsInVzZXIiLCJmaW5kQnlJZCIsInVzZXJJZCIsImlzQWN0aXZlIiwiZXJyb3IiLCJjb25zb2xlIiwiYXV0aG9yaXplIiwicm9sZXMiLCJpbmNsdWRlcyIsInJvbGUiLCJhdXRob3JpemVPd25lck9yQWRtaW4iLCJfaWQiLCJ0b1N0cmluZyIsInBhcmFtcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkQ6XFxjb2RlXFxXZWJDYWZmZVxcYmFja2VuZFxcc3JjXFxtaWRkbGV3YXJlXFwiLCJzb3VyY2VzIjpbImF1dGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5jb25zdCBVc2VyID0gcmVxdWlyZSgnLi4vbW9kZWxzL1VzZXInKTtcblxuLy8gTWlkZGxld2FyZSB0byBwcm90ZWN0IHJvdXRlc1xuY29uc3QgcHJvdGVjdCA9IGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICB0cnkge1xuICAgIGxldCB0b2tlbjtcblxuICAgIC8vIENoZWNrIGZvciB0b2tlbiBpbiBBdXRob3JpemF0aW9uIGhlYWRlclxuICAgIGlmIChyZXEuaGVhZGVycy5hdXRob3JpemF0aW9uICYmIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3RhcnRzV2l0aCgnQmVhcmVyJykpIHtcbiAgICAgIHRva2VuID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbi5zcGxpdCgnICcpWzFdO1xuICAgIH1cblxuICAgIC8vIE1ha2Ugc3VyZSB0b2tlbiBleGlzdHNcbiAgICBpZiAoIXRva2VuKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ05vdCBhdXRob3JpemVkIHRvIGFjY2VzcyB0aGlzIHJvdXRlJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIC8vIFZlcmlmeSB0b2tlblxuICAgICAgY29uc3QgZGVjb2RlZCA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQpO1xuICAgICAgXG4gICAgICAvLyBHZXQgdXNlciBmcm9tIHRva2VuXG4gICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kQnlJZChkZWNvZGVkLnVzZXJJZCk7XG4gICAgICBcbiAgICAgIGlmICghdXNlcikge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIG1lc3NhZ2U6ICdVc2VyIG5vdCBmb3VuZCdcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghdXNlci5pc0FjdGl2ZSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIG1lc3NhZ2U6ICdVc2VyIGFjY291bnQgaXMgZGVhY3RpdmF0ZWQnXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXEudXNlciA9IHVzZXI7XG4gICAgICBuZXh0KCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnTm90IGF1dGhvcml6ZWQgdG8gYWNjZXNzIHRoaXMgcm91dGUnXG4gICAgICB9KTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQXV0aCBtaWRkbGV3YXJlIGVycm9yOicsIGVycm9yKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBtZXNzYWdlOiAnU2VydmVyIGVycm9yIGluIGF1dGhlbnRpY2F0aW9uJ1xuICAgIH0pO1xuICB9XG59O1xuXG4vLyBNaWRkbGV3YXJlIHRvIGNoZWNrIGlmIHVzZXIgaXMgYWRtaW5cbmNvbnN0IGF1dGhvcml6ZSA9ICguLi5yb2xlcykgPT4ge1xuICByZXR1cm4gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgaWYgKCFyZXEudXNlcikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdOb3QgYXV0aG9yaXplZCB0byBhY2Nlc3MgdGhpcyByb3V0ZSdcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICghcm9sZXMuaW5jbHVkZXMocmVxLnVzZXIucm9sZSkpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMykuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiBgVXNlciByb2xlICR7cmVxLnVzZXIucm9sZX0gaXMgbm90IGF1dGhvcml6ZWQgdG8gYWNjZXNzIHRoaXMgcm91dGVgXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBuZXh0KCk7XG4gIH07XG59O1xuXG4vLyBNaWRkbGV3YXJlIHRvIGNoZWNrIGlmIHVzZXIgb3ducyB0aGUgcmVzb3VyY2Ugb3IgaXMgYWRtaW5cbmNvbnN0IGF1dGhvcml6ZU93bmVyT3JBZG1pbiA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZiAoIXJlcS51c2VyKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogJ05vdCBhdXRob3JpemVkIHRvIGFjY2VzcyB0aGlzIHJvdXRlJ1xuICAgIH0pO1xuICB9XG5cbiAgLy8gQWxsb3cgaWYgdXNlciBpcyBhZG1pbiBvciBvd25zIHRoZSByZXNvdXJjZVxuICBpZiAocmVxLnVzZXIucm9sZSA9PT0gJ2FkbWluJyB8fCByZXEudXNlci5faWQudG9TdHJpbmcoKSA9PT0gcmVxLnBhcmFtcy51c2VySWQpIHtcbiAgICBuZXh0KCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogJ05vdCBhdXRob3JpemVkIHRvIGFjY2VzcyB0aGlzIHJlc291cmNlJ1xuICAgIH0pO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcHJvdGVjdCxcbiAgYXV0aG9yaXplLFxuICBhdXRob3JpemVPd25lck9yQWRtaW5cbn07Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDbkMsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsZ0JBQWdCLENBQUM7O0FBRXRDO0FBQ0EsTUFBTUUsT0FBTyxHQUFHLE1BQUFBLENBQU9DLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEtBQUs7RUFDeEMsSUFBSTtJQUNGLElBQUlDLEtBQUs7O0lBRVQ7SUFDQSxJQUFJSCxHQUFHLENBQUNJLE9BQU8sQ0FBQ0MsYUFBYSxJQUFJTCxHQUFHLENBQUNJLE9BQU8sQ0FBQ0MsYUFBYSxDQUFDQyxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUU7TUFDL0VILEtBQUssR0FBR0gsR0FBRyxDQUFDSSxPQUFPLENBQUNDLGFBQWEsQ0FBQ0UsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqRDs7SUFFQTtJQUNBLElBQUksQ0FBQ0osS0FBSyxFQUFFO01BQ1YsT0FBT0YsR0FBRyxDQUFDTyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztR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","map":{"version":3,"names":["jwt","require","User","protect","req","res","next","token","headers","authorization","startsWith","split","status","json","success","message","decoded","verify","process","env","JWT_SECRET","user","findById","userId","isActive","error","console","authorize","roles","includes","role","authorizeOwnerOrAdmin","_id","toString","params","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\middleware\\","sources":["auth.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst User = require('../models/User');\n\n// Middleware to protect routes\nconst protect = async (req, res, next) => {\n  try {\n    let token;\n\n    // Check for token in Authorization header\n    if (req.headers.authorization && req.headers.authorization.startsWith('Bearer')) {\n      token = req.headers.authorization.split(' ')[1];\n    }\n\n    // Make sure token exists\n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n\n    try {\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n      \n      // Get user from token\n      const user = await User.findById(decoded.userId);\n      \n      if (!user) {\n        return res.status(401).json({\n          success: false,\n          message: 'User not found'\n        });\n      }\n\n      if (!user.isActive) {\n        return res.status(401).json({\n          success: false,\n          message: 'User account is deactivated'\n        });\n      }\n\n      req.user = user;\n      next();\n    } catch (error) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n  } catch (error) {\n    console.error('Auth middleware error:', error);\n    return res.status(500).json({\n      success: false,\n      message: 'Server error in authentication'\n    });\n  }\n};\n\n// Middleware to check if user is admin\nconst authorize = (...roles) => {\n  return (req, res, next) => {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n\n    if (!roles.includes(req.user.role)) {\n      return res.status(403).json({\n        success: false,\n        message: `User role ${req.user.role} is not authorized to access this route`\n      });\n    }\n\n    next();\n  };\n};\n\n// Middleware to check if user owns the resource or is admin\nconst authorizeOwnerOrAdmin = (req, res, next) => {\n  if (!req.user) {\n    return res.status(401).json({\n      success: false,\n      message: 'Not authorized to access this route'\n    });\n  }\n\n  // Allow if user is admin or owns the resource\n  if (req.user.role === 'admin' || req.user._id.toString() === req.params.userId) {\n    next();\n  } else {\n    return res.status(403).json({\n      success: false,\n      message: 'Not authorized to access this resource'\n    });\n  }\n};\n\nmodule.exports = {\n  protect,\n  authorize,\n  authorizeOwnerOrAdmin\n};"],"mappings":"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","ignoreList":[]}},"mtime":1756225535435},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\orders.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst Order = require('../models/Order');\nconst Product = require('../models/Product');\nconst {\n  protect: auth\n} = require('../middleware/auth');\n\n// @route   GET /api/orders\n// @desc    Get all orders for authenticated user\n// @access  Private\nrouter.get('/', auth, async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const skip = (page - 1) * limit;\n    const status = req.query.status;\n\n    // Build query\n    const query = {\n      customer: req.user.id\n    };\n    if (status && status !== 'all') {\n      query.status = status;\n    }\n\n    // Get orders with pagination\n    const orders = await Order.find(query).populate('items.product', 'name category image').sort({\n      createdAt: -1\n    }).skip(skip).limit(limit);\n\n    // Get total count for pagination\n    const total = await Order.countDocuments(query);\n    res.json({\n      success: true,\n      data: orders,\n      pagination: {\n        current: page,\n        pages: Math.ceil(total / limit),\n        total\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching orders'\n    });\n  }\n});\n\n// @route   GET /api/orders/:id\n// @desc    Get single order by ID\n// @access  Private\nrouter.get('/:id', auth, async (req, res) => {\n  try {\n    const order = await Order.findOne({\n      _id: req.params.id,\n      customer: req.user.id\n    }).populate('items.product', 'name category image description');\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: order\n    });\n  } catch (error) {\n    console.error('Error fetching order:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order'\n    });\n  }\n});\n\n// @route   POST /api/orders\n// @desc    Create new order\n// @access  Private\nrouter.post('/', auth, async (req, res) => {\n  try {\n    const {\n      items,\n      orderType,\n      paymentMethod,\n      deliveryAddress,\n      notes\n    } = req.body;\n\n    // Validate required fields\n    if (!items || !Array.isArray(items) || items.length === 0) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order must contain at least one item'\n      });\n    }\n    if (!orderType || !['pickup', 'delivery', 'dine-in'].includes(orderType)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid order type is required'\n      });\n    }\n    if (!paymentMethod || !['cash', 'card', 'digital_wallet', 'momo', 'vnpay'].includes(paymentMethod)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid payment method is required'\n      });\n    }\n\n    // Validate delivery address for delivery orders\n    if (orderType === 'delivery') {\n      if (!deliveryAddress || !deliveryAddress.street || !deliveryAddress.city) {\n        return res.status(400).json({\n          success: false,\n          message: 'Delivery address is required for delivery orders'\n        });\n      }\n    }\n\n    // Validate and calculate order totals\n    let subtotal = 0;\n    const validatedItems = [];\n    for (const item of items) {\n      // Validate product exists\n      const product = await Product.findById(item.product);\n      if (!product) {\n        return res.status(400).json({\n          success: false,\n          message: `Product with ID ${item.product} not found`\n        });\n      }\n\n      // Validate quantity\n      if (!item.quantity || item.quantity < 1) {\n        return res.status(400).json({\n          success: false,\n          message: 'Item quantity must be at least 1'\n        });\n      }\n\n      // Calculate item price (base price or size-specific price)\n      let itemPrice = product.price;\n      if (item.size && product.sizes && product.sizes.length > 0) {\n        const sizeOption = product.sizes.find(s => s.name === item.size);\n        if (sizeOption) {\n          itemPrice = sizeOption.price;\n        }\n      }\n      const itemTotal = itemPrice * item.quantity;\n      subtotal += itemTotal;\n      validatedItems.push({\n        product: product._id,\n        name: product.name,\n        price: itemPrice,\n        quantity: item.quantity,\n        size: item.size || 'Regular',\n        customizations: item.customizations || []\n      });\n    }\n\n    // Calculate tax (8% for example)\n    const tax = subtotal * 0.08;\n    const total = subtotal + tax;\n\n    // Generate unique order number\n    const orderNumber = `ORD-${Date.now()}-${Math.random().toString(36).substr(2, 4).toUpperCase()}`;\n\n    // Create order\n    const order = new Order({\n      orderNumber,\n      customer: req.user.id,\n      items: validatedItems,\n      subtotal,\n      tax,\n      total,\n      orderType,\n      paymentMethod,\n      deliveryAddress: orderType === 'delivery' ? deliveryAddress : undefined,\n      notes: notes || '',\n      loyaltyPointsEarned: Math.floor(total * 0.1) // 10% of total as points\n    });\n    await order.save();\n\n    // Populate the order before sending response\n    await order.populate('items.product', 'name category image');\n    res.status(201).json({\n      success: true,\n      data: order,\n      message: 'Order created successfully'\n    });\n  } catch (error) {\n    console.error('Error creating order:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating order'\n    });\n  }\n});\n\n// @route   PUT /api/orders/:id/status\n// @desc    Update order status (for admin use)\n// @access  Private\nrouter.put('/:id/status', auth, async (req, res) => {\n  try {\n    const {\n      status\n    } = req.body;\n    const validStatuses = ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'];\n    if (!status || !validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid status is required'\n      });\n    }\n    const order = await Order.findById(req.params.id);\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if user owns the order or is admin (for now, allow user to cancel their own orders)\n    if (order.customer.toString() !== req.user.id && status !== 'cancelled') {\n      return res.status(403).json({\n        success: false,\n        message: 'Not authorized to update this order'\n      });\n    }\n\n    // Only allow cancellation if order is still pending or confirmed\n    if (status === 'cancelled' && !['pending', 'confirmed'].includes(order.status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order cannot be cancelled at this stage'\n      });\n    }\n    order.status = status;\n    if (status === 'completed') {\n      order.actualCompletionTime = new Date();\n    }\n    await order.save();\n    res.json({\n      success: true,\n      data: order,\n      message: 'Order status updated successfully'\n    });\n  } catch (error) {\n    console.error('Error updating order status:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating order status'\n    });\n  }\n});\n\n// @route   DELETE /api/orders/:id\n// @desc    Cancel/Delete order (only if pending)\n// @access  Private\nrouter.delete('/:id', auth, async (req, res) => {\n  try {\n    const order = await Order.findOne({\n      _id: req.params.id,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Only allow deletion if order is pending\n    if (order.status !== 'pending') {\n      return res.status(400).json({\n        success: false,\n        message: 'Only pending orders can be cancelled'\n      });\n    }\n    order.status = 'cancelled';\n    await order.save();\n    res.json({\n      success: true,\n      message: 'Order cancelled successfully'\n    });\n  } catch (error) {\n    console.error('Error cancelling order:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while cancelling order'\n    });\n  }\n});\n\n// @route   GET /api/orders/stats/summary\n// @desc    Get order statistics for user\n// @access  Private\nrouter.get('/stats/summary', auth, async (req, res) => {\n  try {\n    const userId = req.user.id;\n\n    // Get order counts by status\n    const statusCounts = await Order.aggregate([{\n      $match: {\n        customer: mongoose.Types.ObjectId(userId)\n      }\n    }, {\n      $group: {\n        _id: '$status',\n        count: {\n          $sum: 1\n        }\n      }\n    }]);\n\n    // Get total spent\n    const totalSpent = await Order.aggregate([{\n      $match: {\n        customer: mongoose.Types.ObjectId(userId),\n        status: {\n          $in: ['completed', 'ready']\n        }\n      }\n    }, {\n      $group: {\n        _id: null,\n        total: {\n          $sum: '$total'\n        }\n      }\n    }]);\n\n    // Get recent orders count (last 30 days)\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    const recentOrdersCount = await Order.countDocuments({\n      customer: userId,\n      createdAt: {\n        $gte: thirtyDaysAgo\n      }\n    });\n\n    // Get loyalty points\n    const loyaltyPoints = await Order.aggregate([{\n      $match: {\n        customer: mongoose.Types.ObjectId(userId)\n      }\n    }, {\n      $group: {\n        _id: null,\n        earned: {\n          $sum: '$loyaltyPointsEarned'\n        },\n        used: {\n          $sum: '$loyaltyPointsUsed'\n        }\n      }\n    }]);\n    res.json({\n      success: true,\n      data: {\n        statusCounts: statusCounts.reduce((acc, item) => {\n          acc[item._id] = item.count;\n          return acc;\n        }, {}),\n        totalSpent: totalSpent[0]?.total || 0,\n        recentOrdersCount,\n        loyaltyPoints: {\n          earned: loyaltyPoints[0]?.earned || 0,\n          used: loyaltyPoints[0]?.used || 0,\n          available: (loyaltyPoints[0]?.earned || 0) - (loyaltyPoints[0]?.used || 0)\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching order statistics:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order statistics'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","Order","Product","protect","auth","get","req","res","page","parseInt","query","limit","skip","status","customer","user","id","orders","find","populate","sort","createdAt","total","countDocuments","json","success","data","pagination","current","pages","Math","ceil","error","console","message","order","findOne","_id","params","name","post","items","orderType","paymentMethod","deliveryAddress","notes","body","Array","isArray","length","includes","street","city","subtotal","validatedItems","item","product","findById","quantity","itemPrice","price","size","sizes","sizeOption","s","itemTotal","push","customizations","tax","orderNumber","Date","now","random","toString","substr","toUpperCase","undefined","loyaltyPointsEarned","floor","save","put","validStatuses","actualCompletionTime","delete","userId","statusCounts","aggregate","$match","mongoose","Types","ObjectId","$group","count","$sum","totalSpent","$in","thirtyDaysAgo","setDate","getDate","recentOrdersCount","$gte","loyaltyPoints","earned","used","reduce","acc","available","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["orders.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Order = require('../models/Order');\nconst Product = require('../models/Product');\nconst { protect: auth } = require('../middleware/auth');\n\n// @route   GET /api/orders\n// @desc    Get all orders for authenticated user\n// @access  Private\nrouter.get('/', auth, async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const skip = (page - 1) * limit;\n    const status = req.query.status;\n\n    // Build query\n    const query = { customer: req.user.id };\n    if (status && status !== 'all') {\n      query.status = status;\n    }\n\n    // Get orders with pagination\n    const orders = await Order.find(query)\n      .populate('items.product', 'name category image')\n      .sort({ createdAt: -1 })\n      .skip(skip)\n      .limit(limit);\n\n    // Get total count for pagination\n    const total = await Order.countDocuments(query);\n\n    res.json({\n      success: true,\n      data: orders,\n      pagination: {\n        current: page,\n        pages: Math.ceil(total / limit),\n        total\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching orders'\n    });\n  }\n});\n\n// @route   GET /api/orders/:id\n// @desc    Get single order by ID\n// @access  Private\nrouter.get('/:id', auth, async (req, res) => {\n  try {\n    const order = await Order.findOne({\n      _id: req.params.id,\n      customer: req.user.id\n    }).populate('items.product', 'name category image description');\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: order\n    });\n  } catch (error) {\n    console.error('Error fetching order:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order'\n    });\n  }\n});\n\n// @route   POST /api/orders\n// @desc    Create new order\n// @access  Private\nrouter.post('/', auth, async (req, res) => {\n  try {\n    const {\n      items,\n      orderType,\n      paymentMethod,\n      deliveryAddress,\n      notes\n    } = req.body;\n\n    // Validate required fields\n    if (!items || !Array.isArray(items) || items.length === 0) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order must contain at least one item'\n      });\n    }\n\n    if (!orderType || !['pickup', 'delivery', 'dine-in'].includes(orderType)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid order type is required'\n      });\n    }\n\n    if (!paymentMethod || !['cash', 'card', 'digital_wallet', 'momo', 'vnpay'].includes(paymentMethod)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid payment method is required'\n      });\n    }\n\n    // Validate delivery address for delivery orders\n    if (orderType === 'delivery') {\n      if (!deliveryAddress || !deliveryAddress.street || !deliveryAddress.city) {\n        return res.status(400).json({\n          success: false,\n          message: 'Delivery address is required for delivery orders'\n        });\n      }\n    }\n\n    // Validate and calculate order totals\n    let subtotal = 0;\n    const validatedItems = [];\n\n    for (const item of items) {\n      // Validate product exists\n      const product = await Product.findById(item.product);\n      if (!product) {\n        return res.status(400).json({\n          success: false,\n          message: `Product with ID ${item.product} not found`\n        });\n      }\n\n      // Validate quantity\n      if (!item.quantity || item.quantity < 1) {\n        return res.status(400).json({\n          success: false,\n          message: 'Item quantity must be at least 1'\n        });\n      }\n\n      // Calculate item price (base price or size-specific price)\n      let itemPrice = product.price;\n      if (item.size && product.sizes && product.sizes.length > 0) {\n        const sizeOption = product.sizes.find(s => s.name === item.size);\n        if (sizeOption) {\n          itemPrice = sizeOption.price;\n        }\n      }\n\n      const itemTotal = itemPrice * item.quantity;\n      subtotal += itemTotal;\n\n      validatedItems.push({\n        product: product._id,\n        name: product.name,\n        price: itemPrice,\n        quantity: item.quantity,\n        size: item.size || 'Regular',\n        customizations: item.customizations || []\n      });\n    }\n\n    // Calculate tax (8% for example)\n    const tax = subtotal * 0.08;\n    const total = subtotal + tax;\n\n    // Generate unique order number\n    const orderNumber = `ORD-${Date.now()}-${Math.random().toString(36).substr(2, 4).toUpperCase()}`;\n\n    // Create order\n    const order = new Order({\n      orderNumber,\n      customer: req.user.id,\n      items: validatedItems,\n      subtotal,\n      tax,\n      total,\n      orderType,\n      paymentMethod,\n      deliveryAddress: orderType === 'delivery' ? deliveryAddress : undefined,\n      notes: notes || '',\n      loyaltyPointsEarned: Math.floor(total * 0.1) // 10% of total as points\n    });\n\n    await order.save();\n\n    // Populate the order before sending response\n    await order.populate('items.product', 'name category image');\n\n    res.status(201).json({\n      success: true,\n      data: order,\n      message: 'Order created successfully'\n    });\n  } catch (error) {\n    console.error('Error creating order:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating order'\n    });\n  }\n});\n\n// @route   PUT /api/orders/:id/status\n// @desc    Update order status (for admin use)\n// @access  Private\nrouter.put('/:id/status', auth, async (req, res) => {\n  try {\n    const { status } = req.body;\n    const validStatuses = ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'];\n\n    if (!status || !validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid status is required'\n      });\n    }\n\n    const order = await Order.findById(req.params.id);\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if user owns the order or is admin (for now, allow user to cancel their own orders)\n    if (order.customer.toString() !== req.user.id && status !== 'cancelled') {\n      return res.status(403).json({\n        success: false,\n        message: 'Not authorized to update this order'\n      });\n    }\n\n    // Only allow cancellation if order is still pending or confirmed\n    if (status === 'cancelled' && !['pending', 'confirmed'].includes(order.status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order cannot be cancelled at this stage'\n      });\n    }\n\n    order.status = status;\n    if (status === 'completed') {\n      order.actualCompletionTime = new Date();\n    }\n\n    await order.save();\n\n    res.json({\n      success: true,\n      data: order,\n      message: 'Order status updated successfully'\n    });\n  } catch (error) {\n    console.error('Error updating order status:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating order status'\n    });\n  }\n});\n\n// @route   DELETE /api/orders/:id\n// @desc    Cancel/Delete order (only if pending)\n// @access  Private\nrouter.delete('/:id', auth, async (req, res) => {\n  try {\n    const order = await Order.findOne({\n      _id: req.params.id,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Only allow deletion if order is pending\n    if (order.status !== 'pending') {\n      return res.status(400).json({\n        success: false,\n        message: 'Only pending orders can be cancelled'\n      });\n    }\n\n    order.status = 'cancelled';\n    await order.save();\n\n    res.json({\n      success: true,\n      message: 'Order cancelled successfully'\n    });\n  } catch (error) {\n    console.error('Error cancelling order:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while cancelling order'\n    });\n  }\n});\n\n// @route   GET /api/orders/stats/summary\n// @desc    Get order statistics for user\n// @access  Private\nrouter.get('/stats/summary', auth, async (req, res) => {\n  try {\n    const userId = req.user.id;\n\n    // Get order counts by status\n    const statusCounts = await Order.aggregate([\n      { $match: { customer: mongoose.Types.ObjectId(userId) } },\n      { $group: { _id: '$status', count: { $sum: 1 } } }\n    ]);\n\n    // Get total spent\n    const totalSpent = await Order.aggregate([\n      { \n        $match: { \n          customer: mongoose.Types.ObjectId(userId),\n          status: { $in: ['completed', 'ready'] }\n        } \n      },\n      { $group: { _id: null, total: { $sum: '$total' } } }\n    ]);\n\n    // Get recent orders count (last 30 days)\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    \n    const recentOrdersCount = await Order.countDocuments({\n      customer: userId,\n      createdAt: { $gte: thirtyDaysAgo }\n    });\n\n    // Get loyalty points\n    const loyaltyPoints = await Order.aggregate([\n      { $match: { customer: mongoose.Types.ObjectId(userId) } },\n      { \n        $group: { \n          _id: null, \n          earned: { $sum: '$loyaltyPointsEarned' },\n          used: { $sum: '$loyaltyPointsUsed' }\n        } \n      }\n    ]);\n\n    res.json({\n      success: true,\n      data: {\n        statusCounts: statusCounts.reduce((acc, item) => {\n          acc[item._id] = item.count;\n          return acc;\n        }, {}),\n        totalSpent: totalSpent[0]?.total || 0,\n        recentOrdersCount,\n        loyaltyPoints: {\n          earned: loyaltyPoints[0]?.earned || 0,\n          used: loyaltyPoints[0]?.used || 0,\n          available: (loyaltyPoints[0]?.earned || 0) - (loyaltyPoints[0]?.used || 0)\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching order statistics:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order statistics'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1756971338295},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\Order.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const mongoose = require('mongoose');\nconst orderItemSchema = new mongoose.Schema({\n  product: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Product',\n    required: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  price: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  quantity: {\n    type: Number,\n    required: true,\n    min: 1\n  },\n  size: {\n    type: String,\n    default: 'Regular'\n  },\n  customizations: [{\n    type: String,\n    trim: true\n  }]\n});\nconst orderSchema = new mongoose.Schema({\n  orderNumber: {\n    type: String,\n    unique: true,\n    required: true\n  },\n  customer: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  items: [orderItemSchema],\n  subtotal: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  tax: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  total: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  status: {\n    type: String,\n    enum: ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'],\n    default: 'pending'\n  },\n  orderType: {\n    type: String,\n    enum: ['pickup', 'delivery', 'dine-in'],\n    required: true\n  },\n  paymentMethod: {\n    type: String,\n    enum: ['cash', 'card', 'digital_wallet', 'momo', 'vnpay'],\n    required: true\n  },\n  paymentStatus: {\n    type: String,\n    enum: ['pending', 'paid', 'failed', 'refunded'],\n    default: 'pending'\n  },\n  // MoMo payment transaction details\n  momoTransaction: {\n    requestId: String,\n    transId: String,\n    payUrl: String,\n    deeplink: String,\n    qrCodeUrl: String,\n    resultCode: Number,\n    message: String,\n    responseTime: String,\n    payType: String\n  },\n  deliveryAddress: {\n    street: String,\n    city: String,\n    state: String,\n    zipCode: String,\n    instructions: String\n  },\n  estimatedTime: {\n    type: Date\n  },\n  actualCompletionTime: {\n    type: Date\n  },\n  notes: {\n    type: String,\n    maxlength: 500\n  },\n  loyaltyPointsEarned: {\n    type: Number,\n    default: 0,\n    min: 0\n  },\n  loyaltyPointsUsed: {\n    type: Number,\n    default: 0,\n    min: 0\n  },\n  // Promotional code information\n  promoCode: {\n    code: String,\n    type: String,\n    value: Number,\n    description: String\n  },\n  discount: {\n    type: Number,\n    default: 0,\n    min: 0\n  }\n}, {\n  timestamps: true\n});\n\n// Index for better performance\norderSchema.index({\n  customer: 1\n});\norderSchema.index({\n  orderNumber: 1\n});\norderSchema.index({\n  status: 1\n});\norderSchema.index({\n  createdAt: -1\n});\n\n// Generate order number before saving\norderSchema.pre('save', async function (next) {\n  if (this.isNew) {\n    const date = new Date();\n    const dateStr = date.toISOString().slice(0, 10).replace(/-/g, '');\n    const randomNum = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\n    this.orderNumber = `WC${dateStr}${randomNum}`;\n  }\n  next();\n});\n\n// Calculate estimated completion time\norderSchema.methods.calculateEstimatedTime = function () {\n  const baseTime = 15; // 15 minutes base time\n  const itemTime = this.items.reduce((total, item) => total + item.quantity * 2, 0);\n  const estimatedMinutes = baseTime + itemTime;\n  const moment = require('moment-timezone');\n  const nowVN = moment.tz('Asia/Ho_Chi_Minh');\n  this.estimatedTime = nowVN.add(estimatedMinutes, 'minutes').toDate();\n  return this.estimatedTime;\n};\nmodule.exports = mongoose.model('Order', orderSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["mongoose","require","orderItemSchema","Schema","product","type","Types","ObjectId","ref","required","name","String","price","Number","min","quantity","size","default","customizations","trim","orderSchema","orderNumber","unique","customer","items","subtotal","tax","total","status","enum","orderType","paymentMethod","paymentStatus","momoTransaction","requestId","transId","payUrl","deeplink","qrCodeUrl","resultCode","message","responseTime","payType","deliveryAddress","street","city","state","zipCode","instructions","estimatedTime","Date","actualCompletionTime","notes","maxlength","loyaltyPointsEarned","loyaltyPointsUsed","promoCode","code","value","description","discount","timestamps","index","createdAt","pre","next","isNew","date","dateStr","toISOString","slice","replace","randomNum","Math","floor","random","toString","padStart","methods","calculateEstimatedTime","baseTime","itemTime","reduce","item","estimatedMinutes","moment","nowVN","tz","add","toDate","module","exports","model"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\models\\","sources":["Order.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst orderItemSchema = new mongoose.Schema({\n  product: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Product',\n    required: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  price: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  quantity: {\n    type: Number,\n    required: true,\n    min: 1\n  },\n  size: {\n    type: String,\n    default: 'Regular'\n  },\n  customizations: [{\n    type: String,\n    trim: true\n  }]\n});\n\nconst orderSchema = new mongoose.Schema({\n  orderNumber: {\n    type: String,\n    unique: true,\n    required: true\n  },\n  customer: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  items: [orderItemSchema],\n  subtotal: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  tax: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  total: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  status: {\n    type: String,\n    enum: ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'],\n    default: 'pending'\n  },\n  orderType: {\n    type: String,\n    enum: ['pickup', 'delivery', 'dine-in'],\n    required: true\n  },\n  paymentMethod: {\n    type: String,\n    enum: ['cash', 'card', 'digital_wallet', 'momo', 'vnpay'],\n    required: true\n  },\n  paymentStatus: {\n    type: String,\n    enum: ['pending', 'paid', 'failed', 'refunded'],\n    default: 'pending'\n  },\n  // MoMo payment transaction details\n  momoTransaction: {\n    requestId: String,\n    transId: String,\n    payUrl: String,\n    deeplink: String,\n    qrCodeUrl: String,\n    resultCode: Number,\n    message: String,\n    responseTime: String,\n    payType: String\n  },\n  deliveryAddress: {\n    street: String,\n    city: String,\n    state: String,\n    zipCode: String,\n    instructions: String\n  },\n  estimatedTime: {\n    type: Date\n  },\n  actualCompletionTime: {\n    type: Date\n  },\n  notes: {\n    type: String,\n    maxlength: 500\n  },\n  loyaltyPointsEarned: {\n    type: Number,\n    default: 0,\n    min: 0\n  },\n  loyaltyPointsUsed: {\n    type: Number,\n    default: 0,\n    min: 0\n  },\n  // Promotional code information\n  promoCode: {\n    code: String,\n    type: String,\n    value: Number,\n    description: String\n  },\n  discount: {\n    type: Number,\n    default: 0,\n    min: 0\n  }\n}, {\n  timestamps: true\n});\n\n// Index for better performance\norderSchema.index({ customer: 1 });\norderSchema.index({ orderNumber: 1 });\norderSchema.index({ status: 1 });\norderSchema.index({ createdAt: -1 });\n\n// Generate order number before saving\norderSchema.pre('save', async function(next) {\n  if (this.isNew) {\n    const date = new Date();\n    const dateStr = date.toISOString().slice(0, 10).replace(/-/g, '');\n    const randomNum = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\n    this.orderNumber = `WC${dateStr}${randomNum}`;\n  }\n  next();\n});\n\n// Calculate estimated completion time\norderSchema.methods.calculateEstimatedTime = function() {\n  const baseTime = 15; // 15 minutes base time\n  const itemTime = this.items.reduce((total, item) => total + (item.quantity * 2), 0);\n  const estimatedMinutes = baseTime + itemTime;\n  \n  const moment = require('moment-timezone');\n  const nowVN = moment.tz('Asia/Ho_Chi_Minh');\n  this.estimatedTime = nowVN.add(estimatedMinutes, 'minutes').toDate();\n  return this.estimatedTime;\n};\n\nmodule.exports = mongoose.model('Order', orderSchema);"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,eAAe,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EAC1CC,OAAO,EAAE;IACPC,IAAI,EAAEL,QAAQ,CAACG,MAAM,CAACG,KAAK,CAACC,QAAQ;IACpCC,GAAG,EAAE,SAAS;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDC,IAAI,EAAE;IACJL,IAAI,EAAEM,MAAM;IACZF,QAAQ,EAAE;EACZ,CAAC;EACDG,KAAK,EAAE;IACLP,IAAI,EAAEQ,MAAM;IACZJ,QAAQ,EAAE,IAAI;IACdK,GAAG,EAAE;EACP,CAAC;EACDC,QAAQ,EAAE;IACRV,IAAI,EAAEQ,MAAM;IACZJ,QAAQ,EAAE,IAAI;IACdK,GAAG,EAAE;EACP,CAAC;EACDE,IAAI,EAAE;IACJX,IAAI,EAAEM,MAAM;IACZM,OAAO,EAAE;EACX,CAAC;EACDC,cAAc,EAAE,CAAC;IACfb,IAAI,EAAEM,MAAM;IACZQ,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG,IAAIpB,QAAQ,CAACG,MAAM,CAAC;EACtCkB,WAAW,EAAE;IACXhB,IAAI,EAAEM,MAAM;IACZW,MAAM,EAAE,IAAI;IACZb,QAAQ,EAAE;EACZ,CAAC;EACDc,QAAQ,EAAE;IACRlB,IAAI,EAAEL,QAAQ,CAACG,MAAM,CAACG,KAAK,CAACC,QAAQ;IACpCC,GAAG,EAAE,MAAM;IACXC,QAAQ,EAAE;EACZ,CAAC;EACDe,KAAK,EAAE,CAACtB,eAAe,CAAC;EACxBuB,QAAQ,EAAE;IACRpB,IAAI,EAAEQ,MAAM;IACZJ,QAAQ,EAAE,IAAI;IACdK,GAAG,EAAE;EACP,CAAC;EACDY,GAAG,EAAE;IACHrB,IAAI,EAAEQ,MAAM;IACZJ,QAAQ,EAAE,IAAI;IACdK,GAAG,EAAE;EACP,CAAC;EACDa,KAAK,EAAE;IACLtB,IAAI,EAAEQ,MAAM;IACZJ,QAAQ,EAAE,IAAI;IACdK,GAAG,EAAE;EACP,CAAC;EACDc,MAAM,EAAE;IACNvB,IAAI,EAAEM,MAAM;IACZkB,IAAI,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC;IAC9EZ,OAAO,EAAE;EACX,CAAC;EACDa,SAAS,EAAE;IACTzB,IAAI,EAAEM,MAAM;IACZkB,IAAI,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC;IACvCpB,QAAQ,EAAE;EACZ,CAAC;EACDsB,aAAa,EAAE;IACb1B,IAAI,EAAEM,MAAM;IACZkB,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,EAAE,OAAO,CAAC;IACzDpB,QAAQ,EAAE;EACZ,CAAC;EACDuB,aAAa,EAAE;IACb3B,IAAI,EAAEM,MAAM;IACZkB,IAAI,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC;IAC/CZ,OAAO,EAAE;EACX,CAAC;EACD;EACAgB,eAAe,EAAE;IACfC,SAAS,EAAEvB,MAAM;IACjBwB,OAAO,EAAExB,MAAM;IACfyB,MAAM,EAAEzB,MAAM;IACd0B,QAAQ,EAAE1B,MAAM;IAChB2B,SAAS,EAAE3B,MAAM;IACjB4B,UAAU,EAAE1B,MAAM;IAClB2B,OAAO,EAAE7B,MAAM;IACf8B,YAAY,EAAE9B,MAAM;IACpB+B,OAAO,EAAE/B;EACX,CAAC;EACDgC,eAAe,EAAE;IACfC,MAAM,EAAEjC,MAAM;IACdkC,IAAI,EAAElC,MAAM;IACZmC,KAAK,EAAEnC,MAAM;IACboC,OAAO,EAAEpC,MAAM;IACfqC,YAAY,EAAErC;EAChB,CAAC;EACDsC,aAAa,EAAE;IACb5C,IAAI,EAAE6C;EACR,CAAC;EACDC,oBAAoB,EAAE;IACpB9C,IAAI,EAAE6C;EACR,CAAC;EACDE,KAAK,EAAE;IACL/C,IAAI,EAAEM,MAAM;IACZ0C,SAAS,EAAE;EACb,CAAC;EACDC,mBAAmB,EAAE;IACnBjD,IAAI,EAAEQ,MAAM;IACZI,OAAO,EAAE,CAAC;IACVH,GAAG,EAAE;EACP,CAAC;EACDyC,iBAAiB,EAAE;IACjBlD,IAAI,EAAEQ,MAAM;IACZI,OAAO,EAAE,CAAC;IACVH,GAAG,EAAE;EACP,CAAC;EACD;EACA0C,SAAS,EAAE;IACTC,IAAI,EAAE9C,MAAM;IACZN,IAAI,EAAEM,MAAM;IACZ+C,KAAK,EAAE7C,MAAM;IACb8C,WAAW,EAAEhD;EACf,CAAC;EACDiD,QAAQ,EAAE;IACRvD,IAAI,EAAEQ,MAAM;IACZI,OAAO,EAAE,CAAC;IACVH,GAAG,EAAE;EACP;AACF,CAAC,EAAE;EACD+C,UAAU,EAAE;AACd,CAAC,CAAC;;AAEF;AACAzC,WAAW,CAAC0C,KAAK,CAAC;EAAEvC,QAAQ,EAAE;AAAE,CAAC,CAAC;AAClCH,WAAW,CAAC0C,KAAK,CAAC;EAAEzC,WAAW,EAAE;AAAE,CAAC,CAAC;AACrCD,WAAW,CAAC0C,KAAK,CAAC;EAAElC,MAAM,EAAE;AAAE,CAAC,CAAC;AAChCR,WAAW,CAAC0C,KAAK,CAAC;EAAEC,SAAS,EAAE,CAAC;AAAE,CAAC,CAAC;;AAEpC;AACA3C,WAAW,CAAC4C,GAAG,CAAC,MAAM,EAAE,gBAAeC,IAAI,EAAE;EAC3C,IAAI,IAAI,CAACC,KAAK,EAAE;IACd,MAAMC,IAAI,GAAG,IAAIjB,IAAI,CAAC,CAAC;IACvB,MAAMkB,OAAO,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IACjE,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC9E,IAAI,CAACxD,WAAW,GAAG,KAAK+C,OAAO,GAAGI,SAAS,EAAE;EAC/C;EACAP,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACA7C,WAAW,CAAC0D,OAAO,CAACC,sBAAsB,GAAG,YAAW;EACtD,MAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;EACrB,MAAMC,QAAQ,GAAG,IAAI,CAACzD,KAAK,CAAC0D,MAAM,CAAC,CAACvD,KAAK,EAAEwD,IAAI,KAAKxD,KAAK,GAAIwD,IAAI,CAACpE,QAAQ,GAAG,CAAE,EAAE,CAAC,CAAC;EACnF,MAAMqE,gBAAgB,GAAGJ,QAAQ,GAAGC,QAAQ;EAE5C,MAAMI,MAAM,GAAGpF,OAAO,CAAC,iBAAiB,CAAC;EACzC,MAAMqF,KAAK,GAAGD,MAAM,CAACE,EAAE,CAAC,kBAAkB,CAAC;EAC3C,IAAI,CAACtC,aAAa,GAAGqC,KAAK,CAACE,GAAG,CAACJ,gBAAgB,EAAE,SAAS,CAAC,CAACK,MAAM,CAAC,CAAC;EACpE,OAAO,IAAI,CAACxC,aAAa;AAC3B,CAAC;AAEDyC,MAAM,CAACC,OAAO,GAAG3F,QAAQ,CAAC4F,KAAK,CAAC,OAAO,EAAExE,WAAW,CAAC","ignoreList":[]}},"mtime":1757590253594},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\payments.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst Order = require('../models/Order');\nconst momoService = require('../services/momoService');\nconst vnpayConfig = require('../config/vnpay');\nconst {\n  protect: auth\n} = require('../middleware/auth');\nconst moment = require('moment-timezone');\n\n// @route   POST /api/payments/momo/create\n// @desc    Create MoMo payment request\n// @access  Private\nrouter.post('/momo/create', auth, async (req, res) => {\n  try {\n    const {\n      orderId,\n      amount,\n      orderInfo\n    } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Validate amount\n    if (amount <= 0 || amount > 50000000) {\n      // MoMo limit is 50M VND\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid payment amount'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // Create MoMo payment request\n    const paymentResult = await momoService.createPayment({\n      orderId,\n      amount: Math.round(amount),\n      // Ensure amount is integer\n      orderInfo: orderInfo || `Payment for DREAM COFFEE order ${orderId}`,\n      extraData: JSON.stringify({\n        userId: req.user.id,\n        orderNumber: orderId\n      })\n    });\n    if (!paymentResult.success) {\n      return res.status(500).json({\n        success: false,\n        message: 'Failed to create MoMo payment',\n        error: paymentResult.error\n      });\n    }\n\n    // Update order with MoMo transaction details\n    order.momoTransaction = {\n      requestId: paymentResult.requestId,\n      payUrl: paymentResult.data.payUrl,\n      deeplink: paymentResult.data.deeplink,\n      qrCodeUrl: paymentResult.data.qrCodeUrl,\n      resultCode: paymentResult.data.resultCode,\n      message: paymentResult.data.message\n    };\n    await order.save();\n    res.json({\n      success: true,\n      data: {\n        payUrl: paymentResult.data.payUrl,\n        deeplink: paymentResult.data.deeplink,\n        qrCodeUrl: paymentResult.data.qrCodeUrl,\n        requestId: paymentResult.requestId,\n        orderId: orderId,\n        amount: amount\n      },\n      message: 'MoMo payment created successfully'\n    });\n  } catch (error) {\n    console.error('MoMo payment creation error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating MoMo payment'\n    });\n  }\n});\n\n// @route   POST /api/payments/momo/callback\n// @desc    Handle MoMo payment callback (IPN)\n// @access  Public\nrouter.post('/momo/callback', async (req, res) => {\n  try {\n    console.log('MoMo callback received:', req.body);\n    const {\n      partnerCode,\n      orderId,\n      requestId,\n      amount,\n      orderInfo,\n      orderType,\n      transId,\n      resultCode,\n      message,\n      payType,\n      responseTime,\n      extraData,\n      signature\n    } = req.body;\n\n    // Verify callback signature\n    const isValidSignature = momoService.verifyCallback(req.body);\n    if (!isValidSignature) {\n      console.error('Invalid MoMo callback signature');\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid signature'\n      });\n    }\n\n    // Find the order\n    const order = await Order.findOne({\n      orderNumber: orderId\n    });\n    if (!order) {\n      console.error(`Order not found for MoMo callback: ${orderId}`);\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Update order with transaction details\n    order.momoTransaction = {\n      ...order.momoTransaction,\n      transId,\n      resultCode: parseInt(resultCode),\n      message,\n      responseTime,\n      payType\n    };\n\n    // Update payment status based on result code\n    if (resultCode === '0') {\n      // Payment successful\n      order.paymentStatus = 'paid';\n      order.status = 'confirmed';\n      console.log(`MoMo payment successful for order: ${orderId}`);\n    } else {\n      // Payment failed\n      order.paymentStatus = 'failed';\n      console.log(`MoMo payment failed for order: ${orderId}, code: ${resultCode}`);\n    }\n    await order.save();\n\n    // Respond to MoMo\n    res.json({\n      success: true,\n      message: 'Callback processed successfully'\n    });\n  } catch (error) {\n    console.error('MoMo callback processing error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while processing callback'\n    });\n  }\n});\n\n// @route   GET /api/payments/momo/status/:orderId\n// @desc    Check MoMo payment status\n// @access  Private\nrouter.get('/momo/status/:orderId', auth, async (req, res) => {\n  try {\n    const {\n      orderId\n    } = req.params;\n\n    // Find the order\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Return payment status\n    res.json({\n      success: true,\n      data: {\n        orderId: order.orderNumber,\n        paymentStatus: order.paymentStatus,\n        orderStatus: order.status,\n        momoTransaction: order.momoTransaction,\n        amount: order.total\n      }\n    });\n  } catch (error) {\n    console.error('Payment status check error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while checking payment status'\n    });\n  }\n});\n\n// @route   POST /api/payments/momo/return\n// @desc    Handle MoMo payment return URL\n// @access  Public\nrouter.get('/momo/return', async (req, res) => {\n  try {\n    const {\n      partnerCode,\n      orderId,\n      requestId,\n      amount,\n      orderInfo,\n      orderType,\n      transId,\n      resultCode,\n      message,\n      payType,\n      responseTime,\n      extraData,\n      signature\n    } = req.query;\n    console.log('MoMo return URL accessed:', req.query);\n\n    // Verify signature\n    const isValidSignature = momoService.verifyCallback(req.query);\n    if (!isValidSignature) {\n      return res.redirect(`${process.env.FRONTEND_URL}/payment/error?message=Invalid signature`);\n    }\n\n    // Redirect based on payment result\n    if (resultCode === '0') {\n      // Payment successful\n      res.redirect(`${process.env.FRONTEND_URL}/payment/success?orderId=${orderId}&transId=${transId}`);\n    } else {\n      // Payment failed\n      res.redirect(`${process.env.FRONTEND_URL}/payment/error?orderId=${orderId}&message=${encodeURIComponent(message)}`);\n    }\n  } catch (error) {\n    console.error('MoMo return URL error:', error);\n    res.redirect(`${process.env.FRONTEND_URL}/payment/error?message=Processing error`);\n  }\n});\n\n// @route   POST /api/payments/vnpay/create\n// @desc    Create VNPay payment request\n// @access  Private\nrouter.post('/vnpay/create', auth, async (req, res) => {\n  try {\n    const {\n      orderId,\n      amount,\n      orderInfo,\n      bankCode\n    } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Validate amount\n    if (amount <= 0 || amount > 500000000) {\n      // VNPay limit is 500M VND\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid payment amount'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // Get client IP address\n    const ipAddr = req.headers['x-forwarded-for'] || req.connection.remoteAddress || req.socket.remoteAddress || (req.connection.socket ? req.connection.socket.remoteAddress : null) || '127.0.0.1';\n\n    // Debug: Log the parameters being sent to VNPay\n    console.log('VNPay Payment Parameters:', {\n      orderId,\n      amount,\n      orderInfo: orderInfo || `Thanh toan don hang ${orderId}`,\n      ipAddr,\n      bankCode\n    });\n\n    // Create payment URL\n    try {\n      const paymentUrl = vnpayConfig.createPaymentUrl(orderId, amount, orderInfo || `Thanh toan don hang ${orderId}`, ipAddr, bankCode);\n      console.log('Generated VNPay URL:', paymentUrl);\n\n      // Update order with payment method\n      await Order.findByIdAndUpdate(order._id, {\n        paymentMethod: 'vnpay',\n        paymentStatus: 'pending'\n      });\n      res.json({\n        success: true,\n        message: 'VNPay payment URL created successfully',\n        data: {\n          paymentUrl,\n          orderId,\n          amount\n        }\n      });\n    } catch (vnpayError) {\n      console.error('VNPay URL creation error:', vnpayError.message);\n      return res.status(400).json({\n        success: false,\n        message: 'Failed to create payment URL: ' + vnpayError.message\n      });\n    }\n  } catch (error) {\n    console.error('VNPay create payment error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error',\n      error: process.env.NODE_ENV === 'development' ? error.message : undefined\n    });\n  }\n});\n\n// @route   GET /api/payments/vnpay/return\n// @desc    Handle VNPay return URL\n// @access  Public\nrouter.get('/vnpay/return', async (req, res) => {\n  try {\n    const vnp_Params = req.query;\n    const orderId = vnp_Params.vnp_TxnRef;\n    const responseCode = vnp_Params.vnp_ResponseCode;\n    const transactionNo = vnp_Params.vnp_TransactionNo;\n    const amount = vnp_Params.vnp_Amount / 100; // Convert from VND cents\n\n    // Verify the return URL\n    const isValidSignature = vnpayConfig.verifyReturnUrl(vnp_Params);\n    if (!isValidSignature) {\n      return res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Invalid signature`);\n    }\n\n    // Find the order\n    const order = await Order.findOne({\n      orderNumber: orderId\n    });\n    if (!order) {\n      return res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Order not found`);\n    }\n    let paymentStatus = 'failed';\n    let message = vnpayConfig.getPaymentStatus(responseCode);\n    if (responseCode === '00') {\n      paymentStatus = 'paid';\n      // Update order status\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'paid',\n        status: 'confirmed',\n        paymentDetails: {\n          method: 'vnpay',\n          transactionId: transactionNo,\n          amount: amount,\n          responseCode: responseCode,\n          paidAt: moment.tz('Asia/Ho_Chi_Minh').toDate()\n        }\n      });\n    } else {\n      // Update order with failed payment\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'failed',\n        paymentDetails: {\n          method: 'vnpay',\n          responseCode: responseCode,\n          failedAt: moment.tz('Asia/Ho_Chi_Minh').toDate(),\n          failureReason: message\n        }\n      });\n    }\n\n    // Redirect to frontend with result\n    const redirectUrl = `${process.env.FRONTEND_URL}/checkout/result?status=${paymentStatus}&orderId=${orderId}&message=${encodeURIComponent(message)}`;\n    res.redirect(redirectUrl);\n  } catch (error) {\n    console.error('VNPay return URL error:', error);\n    res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Payment processing error`);\n  }\n});\n\n// @route   POST /api/payments/vnpay/ipn\n// @desc    Handle VNPay IPN (Instant Payment Notification)\n// @access  Public\nrouter.post('/vnpay/ipn', async (req, res) => {\n  try {\n    const vnp_Params = req.query;\n    const orderId = vnp_Params.vnp_TxnRef;\n    const responseCode = vnp_Params.vnp_ResponseCode;\n    const transactionNo = vnp_Params.vnp_TransactionNo;\n    const amount = vnp_Params.vnp_Amount / 100;\n\n    // Verify the IPN\n    const isValidSignature = vnpayConfig.verifyReturnUrl(vnp_Params);\n    if (!isValidSignature) {\n      return res.status(400).json({\n        RspCode: '97',\n        Message: 'Invalid signature'\n      });\n    }\n\n    // Find the order\n    const order = await Order.findOne({\n      orderNumber: orderId\n    });\n    if (!order) {\n      return res.status(400).json({\n        RspCode: '01',\n        Message: 'Order not found'\n      });\n    }\n\n    // Check if order amount matches\n    if (Math.abs(order.total - amount) > 1) {\n      // Allow 1 VND difference for rounding\n      return res.status(400).json({\n        RspCode: '04',\n        Message: 'Invalid amount'\n      });\n    }\n    if (responseCode === '00') {\n      // Payment successful\n      if (order.paymentStatus !== 'paid') {\n        await Order.findByIdAndUpdate(order._id, {\n          paymentStatus: 'paid',\n          status: 'confirmed',\n          paymentDetails: {\n            method: 'vnpay',\n            transactionId: transactionNo,\n            amount: amount,\n            responseCode: responseCode,\n            paidAt: new Date()\n          }\n        });\n      }\n      return res.status(200).json({\n        RspCode: '00',\n        Message: 'Success'\n      });\n    } else {\n      // Payment failed\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'failed',\n        paymentDetails: {\n          method: 'vnpay',\n          responseCode: responseCode,\n          failedAt: new Date(),\n          failureReason: vnpayConfig.getPaymentStatus(responseCode)\n        }\n      });\n      return res.status(200).json({\n        RspCode: '00',\n        Message: 'Success'\n      });\n    }\n  } catch (error) {\n    console.error('VNPay IPN error:', error);\n    res.status(500).json({\n      RspCode: '99',\n      Message: 'Internal server error'\n    });\n  }\n});\n\n// @route   GET /api/payments/vnpay/status/:orderId\n// @desc    Get VNPay payment status\n// @access  Private\nrouter.get('/vnpay/status/:orderId', auth, async (req, res) => {\n  try {\n    const {\n      orderId\n    } = req.params;\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: {\n        orderId: order.orderNumber,\n        paymentStatus: order.paymentStatus,\n        paymentMethod: order.paymentMethod,\n        paymentDetails: order.paymentDetails,\n        totalAmount: order.total\n      }\n    });\n  } catch (error) {\n    console.error('Get VNPay status error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error'\n    });\n  }\n});\n\n// @route   POST /api/payments/card/process\n// @desc    Process card payment\n// @access  Private\nrouter.post('/card/process', auth, async (req, res) => {\n  try {\n    const {\n      orderId,\n      amount,\n      cardData\n    } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // In a real implementation, you would:\n    // 1. Validate card details with a payment processor (Stripe, Square, etc.)\n    // 2. Process the actual payment\n    // 3. Handle payment success/failure\n\n    // For demo purposes, we'll simulate a successful payment\n    // In production, NEVER store full card details in your database\n\n    // Simulate payment processing delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Update order with payment details\n    order.paymentStatus = 'paid';\n    order.status = 'confirmed';\n    order.paymentDetails = {\n      method: 'card',\n      lastFour: cardData.lastFour,\n      cardholderName: cardData.cardholderName,\n      paidAt: moment.tz('Asia/Ho_Chi_Minh').toDate(),\n      transactionId: `card_${moment.tz('Asia/Ho_Chi_Minh').valueOf()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n    await order.save();\n    res.json({\n      success: true,\n      message: 'Card payment processed successfully',\n      data: {\n        orderId: order.orderNumber,\n        transactionId: order.paymentDetails.transactionId,\n        amount: amount\n      }\n    });\n  } catch (error) {\n    console.error('Card payment processing error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while processing card payment'\n    });\n  }\n});\n\n// @route   POST /api/payments/cash/confirm\n// @desc    Confirm cash payment order\n// @access  Private\nrouter.post('/cash/confirm', auth, async (req, res) => {\n  try {\n    const {\n      orderId,\n      amount\n    } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already confirmed\n    if (order.status === 'confirmed' || order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already confirmed'\n      });\n    }\n\n    // Update order status for cash payment\n    // Cash orders are confirmed but payment status remains pending until actual payment\n    order.status = 'confirmed';\n    order.paymentDetails = {\n      method: 'cash',\n      confirmedAt: moment.tz('Asia/Ho_Chi_Minh').toDate(),\n      orderType: order.orderType // delivery or pickup\n    };\n    await order.save();\n    res.json({\n      success: true,\n      message: 'Cash payment order confirmed successfully',\n      data: {\n        orderId: order.orderNumber,\n        status: order.status,\n        paymentMethod: 'cash',\n        orderType: order.orderType\n      }\n    });\n  } catch (error) {\n    console.error('Cash payment confirmation error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while confirming cash payment'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","Order","momoService","vnpayConfig","protect","auth","moment","post","req","res","orderId","amount","orderInfo","body","status","json","success","message","order","findOne","orderNumber","customer","user","id","paymentStatus","paymentResult","createPayment","Math","round","extraData","JSON","stringify","userId","error","momoTransaction","requestId","payUrl","data","deeplink","qrCodeUrl","resultCode","save","console","log","partnerCode","orderType","transId","payType","responseTime","signature","isValidSignature","verifyCallback","parseInt","get","params","orderStatus","total","query","redirect","process","env","FRONTEND_URL","encodeURIComponent","bankCode","ipAddr","headers","connection","remoteAddress","socket","paymentUrl","createPaymentUrl","findByIdAndUpdate","_id","paymentMethod","vnpayError","NODE_ENV","undefined","vnp_Params","vnp_TxnRef","responseCode","vnp_ResponseCode","transactionNo","vnp_TransactionNo","vnp_Amount","verifyReturnUrl","getPaymentStatus","paymentDetails","method","transactionId","paidAt","tz","toDate","failedAt","failureReason","redirectUrl","RspCode","Message","abs","Date","totalAmount","cardData","Promise","resolve","setTimeout","lastFour","cardholderName","valueOf","random","toString","substr","confirmedAt","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["payments.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Order = require('../models/Order');\nconst momoService = require('../services/momoService');\nconst vnpayConfig = require('../config/vnpay');\nconst { protect: auth } = require('../middleware/auth');\nconst moment = require('moment-timezone');\n\n// @route   POST /api/payments/momo/create\n// @desc    Create MoMo payment request\n// @access  Private\nrouter.post('/momo/create', auth, async (req, res) => {\n  try {\n    const { orderId, amount, orderInfo } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Validate amount\n    if (amount <= 0 || amount > 50000000) { // MoMo limit is 50M VND\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid payment amount'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // Create MoMo payment request\n    const paymentResult = await momoService.createPayment({\n      orderId,\n      amount: Math.round(amount), // Ensure amount is integer\n      orderInfo: orderInfo || `Payment for DREAM COFFEE order ${orderId}`,\n      extraData: JSON.stringify({\n        userId: req.user.id,\n        orderNumber: orderId\n      })\n    });\n\n    if (!paymentResult.success) {\n      return res.status(500).json({\n        success: false,\n        message: 'Failed to create MoMo payment',\n        error: paymentResult.error\n      });\n    }\n\n    // Update order with MoMo transaction details\n    order.momoTransaction = {\n      requestId: paymentResult.requestId,\n      payUrl: paymentResult.data.payUrl,\n      deeplink: paymentResult.data.deeplink,\n      qrCodeUrl: paymentResult.data.qrCodeUrl,\n      resultCode: paymentResult.data.resultCode,\n      message: paymentResult.data.message\n    };\n    \n    await order.save();\n\n    res.json({\n      success: true,\n      data: {\n        payUrl: paymentResult.data.payUrl,\n        deeplink: paymentResult.data.deeplink,\n        qrCodeUrl: paymentResult.data.qrCodeUrl,\n        requestId: paymentResult.requestId,\n        orderId: orderId,\n        amount: amount\n      },\n      message: 'MoMo payment created successfully'\n    });\n  } catch (error) {\n    console.error('MoMo payment creation error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating MoMo payment'\n    });\n  }\n});\n\n// @route   POST /api/payments/momo/callback\n// @desc    Handle MoMo payment callback (IPN)\n// @access  Public\nrouter.post('/momo/callback', async (req, res) => {\n  try {\n    console.log('MoMo callback received:', req.body);\n\n    const {\n      partnerCode,\n      orderId,\n      requestId,\n      amount,\n      orderInfo,\n      orderType,\n      transId,\n      resultCode,\n      message,\n      payType,\n      responseTime,\n      extraData,\n      signature\n    } = req.body;\n\n    // Verify callback signature\n    const isValidSignature = momoService.verifyCallback(req.body);\n    \n    if (!isValidSignature) {\n      console.error('Invalid MoMo callback signature');\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid signature'\n      });\n    }\n\n    // Find the order\n    const order = await Order.findOne({ orderNumber: orderId });\n    \n    if (!order) {\n      console.error(`Order not found for MoMo callback: ${orderId}`);\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Update order with transaction details\n    order.momoTransaction = {\n      ...order.momoTransaction,\n      transId,\n      resultCode: parseInt(resultCode),\n      message,\n      responseTime,\n      payType\n    };\n\n    // Update payment status based on result code\n    if (resultCode === '0') {\n      // Payment successful\n      order.paymentStatus = 'paid';\n      order.status = 'confirmed';\n      console.log(`MoMo payment successful for order: ${orderId}`);\n    } else {\n      // Payment failed\n      order.paymentStatus = 'failed';\n      console.log(`MoMo payment failed for order: ${orderId}, code: ${resultCode}`);\n    }\n\n    await order.save();\n\n    // Respond to MoMo\n    res.json({\n      success: true,\n      message: 'Callback processed successfully'\n    });\n  } catch (error) {\n    console.error('MoMo callback processing error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while processing callback'\n    });\n  }\n});\n\n// @route   GET /api/payments/momo/status/:orderId\n// @desc    Check MoMo payment status\n// @access  Private\nrouter.get('/momo/status/:orderId', auth, async (req, res) => {\n  try {\n    const { orderId } = req.params;\n\n    // Find the order\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Return payment status\n    res.json({\n      success: true,\n      data: {\n        orderId: order.orderNumber,\n        paymentStatus: order.paymentStatus,\n        orderStatus: order.status,\n        momoTransaction: order.momoTransaction,\n        amount: order.total\n      }\n    });\n  } catch (error) {\n    console.error('Payment status check error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while checking payment status'\n    });\n  }\n});\n\n// @route   POST /api/payments/momo/return\n// @desc    Handle MoMo payment return URL\n// @access  Public\nrouter.get('/momo/return', async (req, res) => {\n  try {\n    const {\n      partnerCode,\n      orderId,\n      requestId,\n      amount,\n      orderInfo,\n      orderType,\n      transId,\n      resultCode,\n      message,\n      payType,\n      responseTime,\n      extraData,\n      signature\n    } = req.query;\n\n    console.log('MoMo return URL accessed:', req.query);\n\n    // Verify signature\n    const isValidSignature = momoService.verifyCallback(req.query);\n    \n    if (!isValidSignature) {\n      return res.redirect(`${process.env.FRONTEND_URL}/payment/error?message=Invalid signature`);\n    }\n\n    // Redirect based on payment result\n    if (resultCode === '0') {\n      // Payment successful\n      res.redirect(`${process.env.FRONTEND_URL}/payment/success?orderId=${orderId}&transId=${transId}`);\n    } else {\n      // Payment failed\n      res.redirect(`${process.env.FRONTEND_URL}/payment/error?orderId=${orderId}&message=${encodeURIComponent(message)}`);\n    }\n  } catch (error) {\n    console.error('MoMo return URL error:', error);\n    res.redirect(`${process.env.FRONTEND_URL}/payment/error?message=Processing error`);\n  }\n});\n\n// @route   POST /api/payments/vnpay/create\n// @desc    Create VNPay payment request\n// @access  Private\nrouter.post('/vnpay/create', auth, async (req, res) => {\n  try {\n    const { orderId, amount, orderInfo, bankCode } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Validate amount\n    if (amount <= 0 || amount > 500000000) { // VNPay limit is 500M VND\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid payment amount'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // Get client IP address\n    const ipAddr = req.headers['x-forwarded-for'] ||\n                   req.connection.remoteAddress ||\n                   req.socket.remoteAddress ||\n                   (req.connection.socket ? req.connection.socket.remoteAddress : null) ||\n                   '127.0.0.1';\n\n    // Debug: Log the parameters being sent to VNPay\n    console.log('VNPay Payment Parameters:', {\n      orderId,\n      amount,\n      orderInfo: orderInfo || `Thanh toan don hang ${orderId}`,\n      ipAddr,\n      bankCode\n    });\n\n    // Create payment URL\n    try {\n      const paymentUrl = vnpayConfig.createPaymentUrl(\n        orderId,\n        amount,\n        orderInfo || `Thanh toan don hang ${orderId}`,\n        ipAddr,\n        bankCode\n      );\n\n      console.log('Generated VNPay URL:', paymentUrl);\n\n      // Update order with payment method\n      await Order.findByIdAndUpdate(order._id, {\n        paymentMethod: 'vnpay',\n        paymentStatus: 'pending'\n      });\n\n      res.json({\n        success: true,\n        message: 'VNPay payment URL created successfully',\n        data: {\n          paymentUrl,\n          orderId,\n          amount\n        }\n      });\n    } catch (vnpayError) {\n      console.error('VNPay URL creation error:', vnpayError.message);\n      return res.status(400).json({\n        success: false,\n        message: 'Failed to create payment URL: ' + vnpayError.message\n      });\n    }\n\n  } catch (error) {\n    console.error('VNPay create payment error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error',\n      error: process.env.NODE_ENV === 'development' ? error.message : undefined\n    });\n  }\n});\n\n// @route   GET /api/payments/vnpay/return\n// @desc    Handle VNPay return URL\n// @access  Public\nrouter.get('/vnpay/return', async (req, res) => {\n  try {\n    const vnp_Params = req.query;\n    const orderId = vnp_Params.vnp_TxnRef;\n    const responseCode = vnp_Params.vnp_ResponseCode;\n    const transactionNo = vnp_Params.vnp_TransactionNo;\n    const amount = vnp_Params.vnp_Amount / 100; // Convert from VND cents\n\n    // Verify the return URL\n    const isValidSignature = vnpayConfig.verifyReturnUrl(vnp_Params);\n\n    if (!isValidSignature) {\n      return res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Invalid signature`);\n    }\n\n    // Find the order\n    const order = await Order.findOne({ orderNumber: orderId });\n    if (!order) {\n      return res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Order not found`);\n    }\n\n    let paymentStatus = 'failed';\n    let message = vnpayConfig.getPaymentStatus(responseCode);\n\n    if (responseCode === '00') {\n      paymentStatus = 'paid';\n      // Update order status\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'paid',\n        status: 'confirmed',\n        paymentDetails: {\n          method: 'vnpay',\n          transactionId: transactionNo,\n          amount: amount,\n          responseCode: responseCode,\n          paidAt: moment.tz('Asia/Ho_Chi_Minh').toDate()\n        }\n      });\n    } else {\n      // Update order with failed payment\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'failed',\n        paymentDetails: {\n          method: 'vnpay',\n          responseCode: responseCode,\n          failedAt: moment.tz('Asia/Ho_Chi_Minh').toDate(),\n          failureReason: message\n        }\n      });\n    }\n\n    // Redirect to frontend with result\n    const redirectUrl = `${process.env.FRONTEND_URL}/checkout/result?status=${paymentStatus}&orderId=${orderId}&message=${encodeURIComponent(message)}`;\n    res.redirect(redirectUrl);\n\n  } catch (error) {\n    console.error('VNPay return URL error:', error);\n    res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Payment processing error`);\n  }\n});\n\n// @route   POST /api/payments/vnpay/ipn\n// @desc    Handle VNPay IPN (Instant Payment Notification)\n// @access  Public\nrouter.post('/vnpay/ipn', async (req, res) => {\n  try {\n    const vnp_Params = req.query;\n    const orderId = vnp_Params.vnp_TxnRef;\n    const responseCode = vnp_Params.vnp_ResponseCode;\n    const transactionNo = vnp_Params.vnp_TransactionNo;\n    const amount = vnp_Params.vnp_Amount / 100;\n\n    // Verify the IPN\n    const isValidSignature = vnpayConfig.verifyReturnUrl(vnp_Params);\n\n    if (!isValidSignature) {\n      return res.status(400).json({ RspCode: '97', Message: 'Invalid signature' });\n    }\n\n    // Find the order\n    const order = await Order.findOne({ orderNumber: orderId });\n    if (!order) {\n      return res.status(400).json({ RspCode: '01', Message: 'Order not found' });\n    }\n\n    // Check if order amount matches\n    if (Math.abs(order.total - amount) > 1) { // Allow 1 VND difference for rounding\n      return res.status(400).json({ RspCode: '04', Message: 'Invalid amount' });\n    }\n\n    if (responseCode === '00') {\n      // Payment successful\n      if (order.paymentStatus !== 'paid') {\n        await Order.findByIdAndUpdate(order._id, {\n          paymentStatus: 'paid',\n          status: 'confirmed',\n          paymentDetails: {\n            method: 'vnpay',\n            transactionId: transactionNo,\n            amount: amount,\n            responseCode: responseCode,\n            paidAt: new Date()\n          }\n        });\n      }\n      return res.status(200).json({ RspCode: '00', Message: 'Success' });\n    } else {\n      // Payment failed\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'failed',\n        paymentDetails: {\n          method: 'vnpay',\n          responseCode: responseCode,\n          failedAt: new Date(),\n          failureReason: vnpayConfig.getPaymentStatus(responseCode)\n        }\n      });\n      return res.status(200).json({ RspCode: '00', Message: 'Success' });\n    }\n\n  } catch (error) {\n    console.error('VNPay IPN error:', error);\n    res.status(500).json({ RspCode: '99', Message: 'Internal server error' });\n  }\n});\n\n// @route   GET /api/payments/vnpay/status/:orderId\n// @desc    Get VNPay payment status\n// @access  Private\nrouter.get('/vnpay/status/:orderId', auth, async (req, res) => {\n  try {\n    const { orderId } = req.params;\n\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: {\n        orderId: order.orderNumber,\n        paymentStatus: order.paymentStatus,\n        paymentMethod: order.paymentMethod,\n        paymentDetails: order.paymentDetails,\n        totalAmount: order.total\n      }\n    });\n\n  } catch (error) {\n    console.error('Get VNPay status error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error'\n    });\n  }\n});\n\n// @route   POST /api/payments/card/process\n// @desc    Process card payment\n// @access  Private\nrouter.post('/card/process', auth, async (req, res) => {\n  try {\n    const { orderId, amount, cardData } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // In a real implementation, you would:\n    // 1. Validate card details with a payment processor (Stripe, Square, etc.)\n    // 2. Process the actual payment\n    // 3. Handle payment success/failure\n    \n    // For demo purposes, we'll simulate a successful payment\n    // In production, NEVER store full card details in your database\n    \n    // Simulate payment processing delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Update order with payment details\n    order.paymentStatus = 'paid';\n    order.status = 'confirmed';\n    order.paymentDetails = {\n      method: 'card',\n      lastFour: cardData.lastFour,\n      cardholderName: cardData.cardholderName,\n      paidAt: moment.tz('Asia/Ho_Chi_Minh').toDate(),\n      transactionId: `card_${moment.tz('Asia/Ho_Chi_Minh').valueOf()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n    \n    await order.save();\n\n    res.json({\n      success: true,\n      message: 'Card payment processed successfully',\n      data: {\n        orderId: order.orderNumber,\n        transactionId: order.paymentDetails.transactionId,\n        amount: amount\n      }\n    });\n  } catch (error) {\n    console.error('Card payment processing error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while processing card payment'\n    });\n  }\n});\n\n// @route   POST /api/payments/cash/confirm\n// @desc    Confirm cash payment order\n// @access  Private\nrouter.post('/cash/confirm', auth, async (req, res) => {\n  try {\n    const { orderId, amount } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already confirmed\n    if (order.status === 'confirmed' || order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already confirmed'\n      });\n    }\n\n    // Update order status for cash payment\n    // Cash orders are confirmed but payment status remains pending until actual payment\n    order.status = 'confirmed';\n    order.paymentDetails = {\n      method: 'cash',\n      confirmedAt: moment.tz('Asia/Ho_Chi_Minh').toDate(),\n      orderType: order.orderType // delivery or pickup\n    };\n    \n    await order.save();\n\n    res.json({\n      success: true,\n      message: 'Cash payment order confirmed successfully',\n      data: {\n        orderId: order.orderNumber,\n        status: order.status,\n        paymentMethod: 'cash',\n        orderType: order.orderType\n      }\n    });\n  } catch (error) {\n    console.error('Cash payment confirmation error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while confirming cash payment'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757590245641},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\services\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\services\\\\momoService.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const crypto = require('crypto');\nconst https = require('https');\nconst moment = require('moment-timezone');\nclass MoMoService {\n  constructor() {\n    // MoMo API configuration - these should be moved to environment variables in production\n    this.config = {\n      accessKey: process.env.MOMO_ACCESS_KEY || 'F8BBA842ECF85',\n      secretKey: process.env.MOMO_SECRET_KEY || 'K951B6PE1waDMi640xX08PD3vg6EkVlz',\n      partnerCode: process.env.MOMO_PARTNER_CODE || 'MOMO',\n      redirectUrl: process.env.MOMO_REDIRECT_URL || 'http://localhost:5173/momo/return',\n      ipnUrl: process.env.MOMO_IPN_URL || 'http://localhost:5003/api/payments/momo/callback',\n      requestType: 'payWithMethod',\n      autoCapture: true,\n      lang: 'vi',\n      endpoint: process.env.MOMO_ENDPOINT || 'https://test-payment.momo.vn/v2/gateway/api/create'\n    };\n  }\n\n  /**\n   * Generate HMAC SHA256 signature for MoMo API\n   * @param {string} rawSignature - Raw signature string\n   * @returns {string} - Generated signature\n   */\n  generateSignature(rawSignature) {\n    return crypto.createHmac('sha256', this.config.secretKey).update(rawSignature).digest('hex');\n  }\n\n  /**\n   * Create MoMo payment request\n   * @param {Object} paymentData - Payment information\n   * @param {string} paymentData.orderId - Order ID\n   * @param {number} paymentData.amount - Payment amount\n   * @param {string} paymentData.orderInfo - Order description\n   * @param {string} paymentData.extraData - Additional data (optional)\n   * @returns {Promise<Object>} - MoMo payment response\n   */\n  async createPayment(paymentData) {\n    try {\n      const {\n        orderId,\n        amount,\n        orderInfo = 'Payment for DREAM COFFEE order',\n        extraData = ''\n      } = paymentData;\n\n      // Generate unique request ID using Vietnam timezone\n      const nowVN = moment.tz('Asia/Ho_Chi_Minh');\n      const timestamp = nowVN.valueOf(); // Get timestamp in milliseconds\n      const requestId = `${this.config.partnerCode}${timestamp}`;\n\n      // Create raw signature string\n      const rawSignature = [`accessKey=${this.config.accessKey}`, `amount=${amount}`, `extraData=${extraData}`, `ipnUrl=${this.config.ipnUrl}`, `orderId=${orderId}`, `orderInfo=${orderInfo}`, `partnerCode=${this.config.partnerCode}`, `redirectUrl=${this.config.redirectUrl}`, `requestId=${requestId}`, `requestType=${this.config.requestType}`].join('&');\n\n      // Generate signature\n      const signature = this.generateSignature(rawSignature);\n\n      // Prepare request body\n      const requestBody = {\n        partnerCode: this.config.partnerCode,\n        partnerName: 'DREAM COFFEE',\n        storeId: 'DreamCoffeeStore',\n        requestId,\n        amount: amount.toString(),\n        orderId,\n        orderInfo,\n        redirectUrl: this.config.redirectUrl,\n        ipnUrl: this.config.ipnUrl,\n        lang: this.config.lang,\n        requestType: this.config.requestType,\n        autoCapture: this.config.autoCapture,\n        extraData,\n        signature\n      };\n      console.log('MoMo Payment Request:', {\n        orderId,\n        amount,\n        requestId,\n        rawSignature\n      });\n\n      // Make request to MoMo API\n      const response = await this.makeHttpsRequest(requestBody);\n      return {\n        success: true,\n        data: response,\n        requestId,\n        orderId\n      };\n    } catch (error) {\n      console.error('MoMo payment creation failed:', error);\n      return {\n        success: false,\n        error: error.message,\n        code: error.code || 'MOMO_ERROR'\n      };\n    }\n  }\n\n  /**\n   * Make HTTPS request to MoMo API\n   * @param {Object} requestBody - Request payload\n   * @returns {Promise<Object>} - API response\n   */\n  makeHttpsRequest(requestBody) {\n    return new Promise((resolve, reject) => {\n      const postData = JSON.stringify(requestBody);\n      const options = {\n        hostname: 'test-payment.momo.vn',\n        port: 443,\n        path: '/v2/gateway/api/create',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Content-Length': Buffer.byteLength(postData)\n        }\n      };\n      const req = https.request(options, res => {\n        let data = '';\n        res.on('data', chunk => {\n          data += chunk;\n        });\n        res.on('end', () => {\n          try {\n            const response = JSON.parse(data);\n            console.log('MoMo API Response:', {\n              status: res.statusCode,\n              resultCode: response.resultCode,\n              message: response.message\n            });\n            if (res.statusCode === 200) {\n              resolve(response);\n            } else {\n              reject(new Error(`HTTP ${res.statusCode}: ${response.message || 'Unknown error'}`));\n            }\n          } catch (parseError) {\n            reject(new Error(`Failed to parse MoMo response: ${parseError.message}`));\n          }\n        });\n      });\n      req.on('error', error => {\n        console.error('MoMo HTTPS request error:', error);\n        reject(new Error(`Network error: ${error.message}`));\n      });\n      req.on('timeout', () => {\n        req.destroy();\n        reject(new Error('Request timeout'));\n      });\n\n      // Set timeout\n      req.setTimeout(30000); // 30 seconds\n\n      // Send request\n      req.write(postData);\n      req.end();\n    });\n  }\n\n  /**\n   * Verify MoMo callback signature\n   * @param {Object} callbackData - Callback data from MoMo\n   * @returns {boolean} - Signature verification result\n   */\n  verifyCallback(callbackData) {\n    try {\n      const {\n        partnerCode,\n        orderId,\n        requestId,\n        amount,\n        orderInfo,\n        orderType,\n        transId,\n        resultCode,\n        message,\n        payType,\n        responseTime,\n        extraData,\n        signature\n      } = callbackData;\n\n      // Create raw signature for verification\n      const rawSignature = [`accessKey=${this.config.accessKey}`, `amount=${amount}`, `extraData=${extraData}`, `message=${message}`, `orderId=${orderId}`, `orderInfo=${orderInfo}`, `orderType=${orderType}`, `partnerCode=${partnerCode}`, `payType=${payType}`, `requestId=${requestId}`, `responseTime=${responseTime}`, `resultCode=${resultCode}`, `transId=${transId}`].join('&');\n      const expectedSignature = this.generateSignature(rawSignature);\n      return signature === expectedSignature;\n    } catch (error) {\n      console.error('MoMo callback verification failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check payment status\n   * @param {string} orderId - Order ID\n   * @param {string} requestId - Request ID\n   * @returns {Promise<Object>} - Payment status\n   */\n  async checkPaymentStatus(orderId, requestId) {\n    try {\n      // This would typically call MoMo's query API\n      // For now, we'll return a placeholder response\n      return {\n        success: true,\n        resultCode: 0,\n        message: 'Payment status check not implemented yet'\n      };\n    } catch (error) {\n      console.error('Payment status check failed:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n}\nmodule.exports = new MoMoService();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["crypto","require","https","moment","MoMoService","constructor","config","accessKey","process","env","MOMO_ACCESS_KEY","secretKey","MOMO_SECRET_KEY","partnerCode","MOMO_PARTNER_CODE","redirectUrl","MOMO_REDIRECT_URL","ipnUrl","MOMO_IPN_URL","requestType","autoCapture","lang","endpoint","MOMO_ENDPOINT","generateSignature","rawSignature","createHmac","update","digest","createPayment","paymentData","orderId","amount","orderInfo","extraData","nowVN","tz","timestamp","valueOf","requestId","join","signature","requestBody","partnerName","storeId","toString","console","log","response","makeHttpsRequest","success","data","error","message","code","Promise","resolve","reject","postData","JSON","stringify","options","hostname","port","path","method","headers","Buffer","byteLength","req","request","res","on","chunk","parse","status","statusCode","resultCode","Error","parseError","destroy","setTimeout","write","end","verifyCallback","callbackData","orderType","transId","payType","responseTime","expectedSignature","checkPaymentStatus","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\services\\","sources":["momoService.js"],"sourcesContent":["const crypto = require('crypto');\nconst https = require('https');\nconst moment = require('moment-timezone');\n\nclass MoMoService {\n  constructor() {\n    // MoMo API configuration - these should be moved to environment variables in production\n    this.config = {\n      accessKey: process.env.MOMO_ACCESS_KEY || 'F8BBA842ECF85',\n      secretKey: process.env.MOMO_SECRET_KEY || 'K951B6PE1waDMi640xX08PD3vg6EkVlz',\n      partnerCode: process.env.MOMO_PARTNER_CODE || 'MOMO',\n      redirectUrl: process.env.MOMO_REDIRECT_URL || 'http://localhost:5173/momo/return',\n      ipnUrl: process.env.MOMO_IPN_URL || 'http://localhost:5003/api/payments/momo/callback',\n      requestType: 'payWithMethod',\n      autoCapture: true,\n      lang: 'vi',\n      endpoint: process.env.MOMO_ENDPOINT || 'https://test-payment.momo.vn/v2/gateway/api/create'\n    };\n  }\n\n  /**\n   * Generate HMAC SHA256 signature for MoMo API\n   * @param {string} rawSignature - Raw signature string\n   * @returns {string} - Generated signature\n   */\n  generateSignature(rawSignature) {\n    return crypto\n      .createHmac('sha256', this.config.secretKey)\n      .update(rawSignature)\n      .digest('hex');\n  }\n\n  /**\n   * Create MoMo payment request\n   * @param {Object} paymentData - Payment information\n   * @param {string} paymentData.orderId - Order ID\n   * @param {number} paymentData.amount - Payment amount\n   * @param {string} paymentData.orderInfo - Order description\n   * @param {string} paymentData.extraData - Additional data (optional)\n   * @returns {Promise<Object>} - MoMo payment response\n   */\n  async createPayment(paymentData) {\n    try {\n      const {\n        orderId,\n        amount,\n        orderInfo = 'Payment for DREAM COFFEE order',\n        extraData = ''\n      } = paymentData;\n\n      // Generate unique request ID using Vietnam timezone\n      const nowVN = moment.tz('Asia/Ho_Chi_Minh');\n      const timestamp = nowVN.valueOf(); // Get timestamp in milliseconds\n      const requestId = `${this.config.partnerCode}${timestamp}`;\n      \n      // Create raw signature string\n      const rawSignature = [\n        `accessKey=${this.config.accessKey}`,\n        `amount=${amount}`,\n        `extraData=${extraData}`,\n        `ipnUrl=${this.config.ipnUrl}`,\n        `orderId=${orderId}`,\n        `orderInfo=${orderInfo}`,\n        `partnerCode=${this.config.partnerCode}`,\n        `redirectUrl=${this.config.redirectUrl}`,\n        `requestId=${requestId}`,\n        `requestType=${this.config.requestType}`\n      ].join('&');\n\n      // Generate signature\n      const signature = this.generateSignature(rawSignature);\n\n      // Prepare request body\n      const requestBody = {\n        partnerCode: this.config.partnerCode,\n        partnerName: 'DREAM COFFEE',\n        storeId: 'DreamCoffeeStore',\n        requestId,\n        amount: amount.toString(),\n        orderId,\n        orderInfo,\n        redirectUrl: this.config.redirectUrl,\n        ipnUrl: this.config.ipnUrl,\n        lang: this.config.lang,\n        requestType: this.config.requestType,\n        autoCapture: this.config.autoCapture,\n        extraData,\n        signature\n      };\n\n      console.log('MoMo Payment Request:', {\n        orderId,\n        amount,\n        requestId,\n        rawSignature\n      });\n\n      // Make request to MoMo API\n      const response = await this.makeHttpsRequest(requestBody);\n      \n      return {\n        success: true,\n        data: response,\n        requestId,\n        orderId\n      };\n    } catch (error) {\n      console.error('MoMo payment creation failed:', error);\n      return {\n        success: false,\n        error: error.message,\n        code: error.code || 'MOMO_ERROR'\n      };\n    }\n  }\n\n  /**\n   * Make HTTPS request to MoMo API\n   * @param {Object} requestBody - Request payload\n   * @returns {Promise<Object>} - API response\n   */\n  makeHttpsRequest(requestBody) {\n    return new Promise((resolve, reject) => {\n      const postData = JSON.stringify(requestBody);\n      \n      const options = {\n        hostname: 'test-payment.momo.vn',\n        port: 443,\n        path: '/v2/gateway/api/create',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Content-Length': Buffer.byteLength(postData)\n        }\n      };\n\n      const req = https.request(options, (res) => {\n        let data = '';\n        \n        res.on('data', (chunk) => {\n          data += chunk;\n        });\n        \n        res.on('end', () => {\n          try {\n            const response = JSON.parse(data);\n            console.log('MoMo API Response:', {\n              status: res.statusCode,\n              resultCode: response.resultCode,\n              message: response.message\n            });\n            \n            if (res.statusCode === 200) {\n              resolve(response);\n            } else {\n              reject(new Error(`HTTP ${res.statusCode}: ${response.message || 'Unknown error'}`));\n            }\n          } catch (parseError) {\n            reject(new Error(`Failed to parse MoMo response: ${parseError.message}`));\n          }\n        });\n      });\n\n      req.on('error', (error) => {\n        console.error('MoMo HTTPS request error:', error);\n        reject(new Error(`Network error: ${error.message}`));\n      });\n\n      req.on('timeout', () => {\n        req.destroy();\n        reject(new Error('Request timeout'));\n      });\n\n      // Set timeout\n      req.setTimeout(30000); // 30 seconds\n      \n      // Send request\n      req.write(postData);\n      req.end();\n    });\n  }\n\n  /**\n   * Verify MoMo callback signature\n   * @param {Object} callbackData - Callback data from MoMo\n   * @returns {boolean} - Signature verification result\n   */\n  verifyCallback(callbackData) {\n    try {\n      const {\n        partnerCode,\n        orderId,\n        requestId,\n        amount,\n        orderInfo,\n        orderType,\n        transId,\n        resultCode,\n        message,\n        payType,\n        responseTime,\n        extraData,\n        signature\n      } = callbackData;\n\n      // Create raw signature for verification\n      const rawSignature = [\n        `accessKey=${this.config.accessKey}`,\n        `amount=${amount}`,\n        `extraData=${extraData}`,\n        `message=${message}`,\n        `orderId=${orderId}`,\n        `orderInfo=${orderInfo}`,\n        `orderType=${orderType}`,\n        `partnerCode=${partnerCode}`,\n        `payType=${payType}`,\n        `requestId=${requestId}`,\n        `responseTime=${responseTime}`,\n        `resultCode=${resultCode}`,\n        `transId=${transId}`\n      ].join('&');\n\n      const expectedSignature = this.generateSignature(rawSignature);\n      \n      return signature === expectedSignature;\n    } catch (error) {\n      console.error('MoMo callback verification failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check payment status\n   * @param {string} orderId - Order ID\n   * @param {string} requestId - Request ID\n   * @returns {Promise<Object>} - Payment status\n   */\n  async checkPaymentStatus(orderId, requestId) {\n    try {\n      // This would typically call MoMo's query API\n      // For now, we'll return a placeholder response\n      return {\n        success: true,\n        resultCode: 0,\n        message: 'Payment status check not implemented yet'\n      };\n    } catch (error) {\n      console.error('Payment status check failed:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n}\n\nmodule.exports = new MoMoService();"],"mappings":"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","ignoreList":[]}},"mtime":1757590229097},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\config\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\config\\\\vnpay.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const crypto = require('crypto');\nconst moment = require('moment-timezone');\nclass VNPayConfig {\n  constructor() {\n    this.vnp_TmnCode = process.env.VNP_TMNCODE;\n    this.vnp_HashSecret = process.env.VNP_HASHSECRET;\n    this.vnp_Url = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html';\n    this.vnp_ReturnUrl = process.env.VNP_RETURN_URL;\n    this.vnp_IpnUrl = process.env.VNP_IPN_URL || `${process.env.VNP_RETURN_URL}/ipn`;\n    this.vnp_Version = '2.1.0';\n    this.vnp_Command = 'pay';\n    this.vnp_CurrCode = 'VND';\n    this.vnp_Locale = 'vn';\n  }\n\n  // Sort object by key\n  sortObject(obj) {\n    let sorted = {};\n    let str = [];\n    let key;\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        str.push(encodeURIComponent(key));\n      }\n    }\n    str.sort();\n    for (key = 0; key < str.length; key++) {\n      sorted[str[key]] = encodeURIComponent(obj[str[key]]).replace(/%20/g, \"+\");\n    }\n    return sorted;\n  }\n\n  // Create payment URL\n  createPaymentUrl(orderId, amount, orderInfo, ipAddr, bankCode = '') {\n    // Validate required parameters\n    if (!orderId || !amount || !orderInfo || !ipAddr) {\n      throw new Error('Missing required parameters for VNPay payment');\n    }\n\n    // Validate amount (must be positive integer)\n    const amountInt = parseInt(amount);\n    if (isNaN(amountInt) || amountInt <= 0) {\n      throw new Error('Invalid amount for VNPay payment');\n    }\n\n    // Validate orderId format (alphanumeric only, max 100 chars)\n    if (!/^[a-zA-Z0-9]+$/.test(orderId) || orderId.length > 100) {\n      throw new Error('Invalid orderId format for VNPay payment');\n    }\n\n    // Use Vietnam timezone for consistent time handling in production\n    const nowVN = moment.tz('Asia/Ho_Chi_Minh');\n    const vnp_CreateDate = nowVN.format('YYYYMMDDHHmmss');\n    const vnp_ExpireDate = nowVN.clone().add(15, 'minutes').format('YYYYMMDDHHmmss');\n\n    // Clean orderInfo to remove special characters and limit length\n    const cleanOrderInfo = orderInfo.replace(/[^a-zA-Z0-9\\s]/g, '').trim().substring(0, 255);\n    let vnp_Params = {\n      vnp_Version: this.vnp_Version,\n      vnp_Command: this.vnp_Command,\n      vnp_TmnCode: this.vnp_TmnCode,\n      vnp_Locale: this.vnp_Locale,\n      vnp_CurrCode: this.vnp_CurrCode,\n      vnp_TxnRef: orderId,\n      vnp_OrderInfo: cleanOrderInfo,\n      vnp_OrderType: 'other',\n      vnp_Amount: amountInt * 100,\n      // VNPay requires amount in VND cents\n      vnp_ReturnUrl: this.vnp_ReturnUrl,\n      vnp_IpAddr: ipAddr,\n      vnp_CreateDate: vnp_CreateDate,\n      vnp_ExpireDate: vnp_ExpireDate\n    };\n    if (bankCode) {\n      vnp_Params.vnp_BankCode = bankCode;\n    }\n    vnp_Params = this.sortObject(vnp_Params);\n    const qs = require('qs');\n    const signData = qs.stringify(vnp_Params, {\n      encode: false\n    });\n    const hmac = crypto.createHmac('sha512', this.vnp_HashSecret);\n    const signed = hmac.update(Buffer.from(signData, 'utf-8')).digest('hex');\n    vnp_Params.vnp_SecureHash = signed;\n    return this.vnp_Url + '?' + qs.stringify(vnp_Params, {\n      encode: false\n    });\n  }\n\n  // Verify return URL\n  verifyReturnUrl(vnp_Params) {\n    const secureHash = vnp_Params.vnp_SecureHash;\n    delete vnp_Params.vnp_SecureHash;\n    delete vnp_Params.vnp_SecureHashType;\n    const sortedParams = this.sortObject(vnp_Params);\n    const qs = require('qs');\n    const signData = qs.stringify(sortedParams, {\n      encode: false\n    });\n    const hmac = crypto.createHmac('sha512', this.vnp_HashSecret);\n    const signed = hmac.update(Buffer.from(signData, 'utf-8')).digest('hex');\n    return secureHash === signed;\n  }\n\n  // Format date for VNPay\n  formatDate(date) {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const seconds = String(date.getSeconds()).padStart(2, '0');\n    return `${year}${month}${day}${hours}${minutes}${seconds}`;\n  }\n\n  // Get payment status message\n  getPaymentStatus(responseCode) {\n    const statusMap = {\n      '00': 'Giao dịch thành công',\n      '07': 'Trừ tiền thành công. Giao dịch bị nghi ngờ (liên quan tới lừa đảo, giao dịch bất thường).',\n      '09': 'Giao dịch không thành công do: Thẻ/Tài khoản của khách hàng chưa đăng ký dịch vụ InternetBanking tại ngân hàng.',\n      '10': 'Giao dịch không thành công do: Khách hàng xác thực thông tin thẻ/tài khoản không đúng quá 3 lần',\n      '11': 'Giao dịch không thành công do: Đã hết hạn chờ thanh toán. Xin quý khách vui lòng thực hiện lại giao dịch.',\n      '12': 'Giao dịch không thành công do: Thẻ/Tài khoản của khách hàng bị khóa.',\n      '13': 'Giao dịch không thành công do Quý khách nhập sai mật khẩu xác thực giao dịch (OTP). Xin quý khách vui lòng thực hiện lại giao dịch.',\n      '24': 'Giao dịch không thành công do: Khách hàng hủy giao dịch',\n      '51': 'Giao dịch không thành công do: Tài khoản của quý khách không đủ số dư để thực hiện giao dịch.',\n      '65': 'Giao dịch không thành công do: Tài khoản của Quý khách đã vượt quá hạn mức giao dịch trong ngày.',\n      '75': 'Ngân hàng thanh toán đang bảo trì.',\n      '79': 'Giao dịch không thành công do: KH nhập sai mật khẩu thanh toán quá số lần quy định. Xin quý khách vui lòng thực hiện lại giao dịch',\n      '99': 'Các lỗi khác (lỗi còn lại, không có trong danh sách mã lỗi đã liệt kê)'\n    };\n    return statusMap[responseCode] || 'Lỗi không xác định';\n  }\n}\nmodule.exports = new VNPayConfig();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["crypto","require","moment","VNPayConfig","constructor","vnp_TmnCode","process","env","VNP_TMNCODE","vnp_HashSecret","VNP_HASHSECRET","vnp_Url","vnp_ReturnUrl","VNP_RETURN_URL","vnp_IpnUrl","VNP_IPN_URL","vnp_Version","vnp_Command","vnp_CurrCode","vnp_Locale","sortObject","obj","sorted","str","key","hasOwnProperty","push","encodeURIComponent","sort","length","replace","createPaymentUrl","orderId","amount","orderInfo","ipAddr","bankCode","Error","amountInt","parseInt","isNaN","test","nowVN","tz","vnp_CreateDate","format","vnp_ExpireDate","clone","add","cleanOrderInfo","trim","substring","vnp_Params","vnp_TxnRef","vnp_OrderInfo","vnp_OrderType","vnp_Amount","vnp_IpAddr","vnp_BankCode","qs","signData","stringify","encode","hmac","createHmac","signed","update","Buffer","from","digest","vnp_SecureHash","verifyReturnUrl","secureHash","vnp_SecureHashType","sortedParams","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getPaymentStatus","responseCode","statusMap","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\config\\","sources":["vnpay.js"],"sourcesContent":["const crypto = require('crypto');\nconst moment = require('moment-timezone');\n\nclass VNPayConfig {\n  constructor() {\n    this.vnp_TmnCode = process.env.VNP_TMNCODE;\n    this.vnp_HashSecret = process.env.VNP_HASHSECRET;\n    this.vnp_Url = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html';\n    this.vnp_ReturnUrl = process.env.VNP_RETURN_URL;\n    this.vnp_IpnUrl = process.env.VNP_IPN_URL || `${process.env.VNP_RETURN_URL}/ipn`;\n    this.vnp_Version = '2.1.0';\n    this.vnp_Command = 'pay';\n    this.vnp_CurrCode = 'VND';\n    this.vnp_Locale = 'vn';\n  }\n\n  // Sort object by key\n  sortObject(obj) {\n    let sorted = {};\n    let str = [];\n    let key;\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        str.push(encodeURIComponent(key));\n      }\n    }\n    str.sort();\n    for (key = 0; key < str.length; key++) {\n      sorted[str[key]] = encodeURIComponent(obj[str[key]]).replace(/%20/g, \"+\");\n    }\n    return sorted;\n  }\n\n  // Create payment URL\n  createPaymentUrl(orderId, amount, orderInfo, ipAddr, bankCode = '') {\n    // Validate required parameters\n    if (!orderId || !amount || !orderInfo || !ipAddr) {\n      throw new Error('Missing required parameters for VNPay payment');\n    }\n\n    // Validate amount (must be positive integer)\n    const amountInt = parseInt(amount);\n    if (isNaN(amountInt) || amountInt <= 0) {\n      throw new Error('Invalid amount for VNPay payment');\n    }\n\n    // Validate orderId format (alphanumeric only, max 100 chars)\n    if (!/^[a-zA-Z0-9]+$/.test(orderId) || orderId.length > 100) {\n      throw new Error('Invalid orderId format for VNPay payment');\n    }\n\n    // Use Vietnam timezone for consistent time handling in production\n    const nowVN = moment.tz('Asia/Ho_Chi_Minh');\n    const vnp_CreateDate = nowVN.format('YYYYMMDDHHmmss');\n    const vnp_ExpireDate = nowVN.clone().add(15, 'minutes').format('YYYYMMDDHHmmss');\n\n    // Clean orderInfo to remove special characters and limit length\n    const cleanOrderInfo = orderInfo.replace(/[^a-zA-Z0-9\\s]/g, '').trim().substring(0, 255);\n\n    let vnp_Params = {\n      vnp_Version: this.vnp_Version,\n      vnp_Command: this.vnp_Command,\n      vnp_TmnCode: this.vnp_TmnCode,\n      vnp_Locale: this.vnp_Locale,\n      vnp_CurrCode: this.vnp_CurrCode,\n      vnp_TxnRef: orderId,\n      vnp_OrderInfo: cleanOrderInfo,\n      vnp_OrderType: 'other',\n      vnp_Amount: amountInt * 100, // VNPay requires amount in VND cents\n      vnp_ReturnUrl: this.vnp_ReturnUrl,\n      vnp_IpAddr: ipAddr,\n      vnp_CreateDate: vnp_CreateDate,\n      vnp_ExpireDate: vnp_ExpireDate\n    };\n\n    if (bankCode) {\n      vnp_Params.vnp_BankCode = bankCode;\n    }\n\n    vnp_Params = this.sortObject(vnp_Params);\n\n    const qs = require('qs');\n    const signData = qs.stringify(vnp_Params, { encode: false });\n    const hmac = crypto.createHmac('sha512', this.vnp_HashSecret);\n    const signed = hmac.update(Buffer.from(signData, 'utf-8')).digest('hex');\n    vnp_Params.vnp_SecureHash = signed;\n\n    return this.vnp_Url + '?' + qs.stringify(vnp_Params, { encode: false });\n  }\n\n  // Verify return URL\n  verifyReturnUrl(vnp_Params) {\n    const secureHash = vnp_Params.vnp_SecureHash;\n    delete vnp_Params.vnp_SecureHash;\n    delete vnp_Params.vnp_SecureHashType;\n\n    const sortedParams = this.sortObject(vnp_Params);\n    \n    const qs = require('qs');\n    const signData = qs.stringify(sortedParams, { encode: false });\n    const hmac = crypto.createHmac('sha512', this.vnp_HashSecret);\n    const signed = hmac.update(Buffer.from(signData, 'utf-8')).digest('hex');\n\n    return secureHash === signed;\n  }\n\n  // Format date for VNPay\n  formatDate(date) {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const seconds = String(date.getSeconds()).padStart(2, '0');\n    return `${year}${month}${day}${hours}${minutes}${seconds}`;\n  }\n\n  // Get payment status message\n  getPaymentStatus(responseCode) {\n    const statusMap = {\n      '00': 'Giao dịch thành công',\n      '07': 'Trừ tiền thành công. Giao dịch bị nghi ngờ (liên quan tới lừa đảo, giao dịch bất thường).',\n      '09': 'Giao dịch không thành công do: Thẻ/Tài khoản của khách hàng chưa đăng ký dịch vụ InternetBanking tại ngân hàng.',\n      '10': 'Giao dịch không thành công do: Khách hàng xác thực thông tin thẻ/tài khoản không đúng quá 3 lần',\n      '11': 'Giao dịch không thành công do: Đã hết hạn chờ thanh toán. Xin quý khách vui lòng thực hiện lại giao dịch.',\n      '12': 'Giao dịch không thành công do: Thẻ/Tài khoản của khách hàng bị khóa.',\n      '13': 'Giao dịch không thành công do Quý khách nhập sai mật khẩu xác thực giao dịch (OTP). Xin quý khách vui lòng thực hiện lại giao dịch.',\n      '24': 'Giao dịch không thành công do: Khách hàng hủy giao dịch',\n      '51': 'Giao dịch không thành công do: Tài khoản của quý khách không đủ số dư để thực hiện giao dịch.',\n      '65': 'Giao dịch không thành công do: Tài khoản của Quý khách đã vượt quá hạn mức giao dịch trong ngày.',\n      '75': 'Ngân hàng thanh toán đang bảo trì.',\n      '79': 'Giao dịch không thành công do: KH nhập sai mật khẩu thanh toán quá số lần quy định. Xin quý khách vui lòng thực hiện lại giao dịch',\n      '99': 'Các lỗi khác (lỗi còn lại, không có trong danh sách mã lỗi đã liệt kê)'\n    };\n    return statusMap[responseCode] || 'Lỗi không xác định';\n  }\n}\n\nmodule.exports = new VNPayConfig();"],"mappings":"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","ignoreList":[]}},"mtime":1757590214224},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\upload.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst multer = require('multer');\nconst {\n  uploadToCloudinary\n} = require('../config/cloudinary');\nconst router = express.Router();\n\n// Configure multer for memory storage\nconst storage = multer.memoryStorage();\n\n// File filter for images only\nconst fileFilter = (req, file, cb) => {\n  if (file.mimetype.startsWith('image/')) {\n    cb(null, true);\n  } else {\n    cb(new Error('Only image files are allowed!'), false);\n  }\n};\n\n// Configure multer\nconst upload = multer({\n  storage: storage,\n  fileFilter: fileFilter,\n  limits: {\n    fileSize: 5 * 1024 * 1024 // 5MB limit\n  }\n});\n\n// @route   POST /api/upload/image\n// @desc    Upload image to Cloudinary\n// @access  Public (can be made private later)\nrouter.post('/image', upload.single('image'), async (req, res) => {\n  try {\n    if (!req.file) {\n      return res.status(400).json({\n        success: false,\n        message: 'No image file provided'\n      });\n    }\n\n    // Upload to Cloudinary\n    const result = await uploadToCloudinary(req.file.buffer, {\n      folder: 'webcaffe/products',\n      transformation: [{\n        width: 800,\n        height: 600,\n        crop: 'fill',\n        quality: 'auto'\n      }, {\n        format: 'webp'\n      }]\n    });\n    res.json({\n      success: true,\n      data: {\n        imageUrl: result.url,\n        imagePublicId: result.publicId,\n        width: result.width,\n        height: result.height,\n        format: result.format\n      },\n      message: 'Image uploaded successfully'\n    });\n  } catch (error) {\n    console.error('Error uploading image:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Failed to upload image',\n      error: error.message\n    });\n  }\n});\n\n// @route   DELETE /api/upload/image/:publicId\n// @desc    Delete uploaded image from Cloudinary\n// @access  Private/Admin\nrouter.delete('/image/:publicId', async (req, res) => {\n  try {\n    const {\n      deleteFromCloudinary\n    } = require('../config/cloudinary');\n    const publicId = req.params.publicId;\n\n    // Delete from Cloudinary\n    const result = await deleteFromCloudinary(publicId);\n    if (result.result === 'ok') {\n      res.json({\n        success: true,\n        message: 'Image deleted successfully'\n      });\n    } else {\n      res.status(404).json({\n        success: false,\n        message: 'Image not found or already deleted'\n      });\n    }\n  } catch (error) {\n    console.error('Error deleting image:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while deleting image'\n    });\n  }\n});\n\n// Error handling middleware for multer\nrouter.use((error, req, res, next) => {\n  if (error instanceof multer.MulterError) {\n    if (error.code === 'LIMIT_FILE_SIZE') {\n      return res.status(400).json({\n        success: false,\n        message: 'File too large. Maximum size is 5MB.'\n      });\n    }\n  }\n  if (error.message) {\n    return res.status(400).json({\n      success: false,\n      message: error.message\n    });\n  }\n  next(error);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","multer","uploadToCloudinary","router","Router","storage","memoryStorage","fileFilter","req","file","cb","mimetype","startsWith","Error","upload","limits","fileSize","post","single","res","status","json","success","message","result","buffer","folder","transformation","width","height","crop","quality","format","data","imageUrl","url","imagePublicId","publicId","error","console","delete","deleteFromCloudinary","params","use","next","MulterError","code","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["upload.js"],"sourcesContent":["const express = require('express');\nconst multer = require('multer');\nconst { uploadToCloudinary } = require('../config/cloudinary');\nconst router = express.Router();\n\n// Configure multer for memory storage\nconst storage = multer.memoryStorage();\n\n// File filter for images only\nconst fileFilter = (req, file, cb) => {\n  if (file.mimetype.startsWith('image/')) {\n    cb(null, true);\n  } else {\n    cb(new Error('Only image files are allowed!'), false);\n  }\n};\n\n// Configure multer\nconst upload = multer({\n  storage: storage,\n  fileFilter: fileFilter,\n  limits: {\n    fileSize: 5 * 1024 * 1024, // 5MB limit\n  },\n});\n\n// @route   POST /api/upload/image\n// @desc    Upload image to Cloudinary\n// @access  Public (can be made private later)\nrouter.post('/image', upload.single('image'), async (req, res) => {\n  try {\n    if (!req.file) {\n      return res.status(400).json({\n        success: false,\n        message: 'No image file provided'\n      });\n    }\n\n    // Upload to Cloudinary\n    const result = await uploadToCloudinary(req.file.buffer, {\n      folder: 'webcaffe/products',\n      transformation: [\n        { width: 800, height: 600, crop: 'fill', quality: 'auto' },\n        { format: 'webp' }\n      ]\n    });\n\n    res.json({\n      success: true,\n      data: {\n        imageUrl: result.url,\n        imagePublicId: result.publicId,\n        width: result.width,\n        height: result.height,\n        format: result.format\n      },\n      message: 'Image uploaded successfully'\n    });\n  } catch (error) {\n    console.error('Error uploading image:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Failed to upload image',\n      error: error.message\n    });\n  }\n});\n\n// @route   DELETE /api/upload/image/:publicId\n// @desc    Delete uploaded image from Cloudinary\n// @access  Private/Admin\nrouter.delete('/image/:publicId', async (req, res) => {\n  try {\n    const { deleteFromCloudinary } = require('../config/cloudinary');\n    const publicId = req.params.publicId;\n\n    // Delete from Cloudinary\n    const result = await deleteFromCloudinary(publicId);\n\n    if (result.result === 'ok') {\n      res.json({\n        success: true,\n        message: 'Image deleted successfully'\n      });\n    } else {\n      res.status(404).json({\n        success: false,\n        message: 'Image not found or already deleted'\n      });\n    }\n  } catch (error) {\n    console.error('Error deleting image:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while deleting image'\n    });\n  }\n});\n\n// Error handling middleware for multer\nrouter.use((error, req, res, next) => {\n  if (error instanceof multer.MulterError) {\n    if (error.code === 'LIMIT_FILE_SIZE') {\n      return res.status(400).json({\n        success: false,\n        message: 'File too large. Maximum size is 5MB.'\n      });\n    }\n  }\n  \n  if (error.message) {\n    return res.status(400).json({\n      success: false,\n      message: error.message\n    });\n  }\n  \n  next(error);\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757433504901},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\config\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\config\\\\cloudinary.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const cloudinary = require('cloudinary').v2;\n\n// Configure Cloudinary\ncloudinary.config({\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET\n});\n\n// Upload image to Cloudinary\nconst uploadToCloudinary = (buffer, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const uploadOptions = {\n      resource_type: 'image',\n      folder: 'webcaffe/products',\n      transformation: [{\n        width: 800,\n        height: 600,\n        crop: 'fill',\n        quality: 'auto'\n      }, {\n        format: 'webp'\n      }],\n      ...options\n    };\n    cloudinary.uploader.upload_stream(uploadOptions, (error, result) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve({\n          url: result.secure_url,\n          publicId: result.public_id,\n          width: result.width,\n          height: result.height,\n          format: result.format\n        });\n      }\n    }).end(buffer);\n  });\n};\n\n// Delete image from Cloudinary\nconst deleteFromCloudinary = async publicId => {\n  try {\n    const result = await cloudinary.uploader.destroy(publicId);\n    return result;\n  } catch (error) {\n    console.error('Error deleting image from Cloudinary:', error);\n    throw error;\n  }\n};\nmodule.exports = {\n  cloudinary,\n  uploadToCloudinary,\n  deleteFromCloudinary\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjbG91ZGluYXJ5IiwicmVxdWlyZSIsInYyIiwiY29uZmlnIiwiY2xvdWRfbmFtZSIsInByb2Nlc3MiLCJlbnYiLCJDTE9VRElOQVJZX0NMT1VEX05BTUUiLCJhcGlfa2V5IiwiQ0xPVURJTkFSWV9BUElfS0VZIiwiYXBpX3NlY3JldCIsIkNMT1VESU5BUllfQVBJX1NFQ1JFVCIsInVwbG9hZFRvQ2xvdWRpbmFyeSIsImJ1ZmZlciIsIm9wdGlvbnMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInVwbG9hZE9wdGlvbnMiLCJyZXNvdXJjZV90eXBlIiwiZm9sZGVyIiwidHJhbnNmb3JtYXRpb24iLCJ3aWR0aCIsImhlaWdodCIsImNyb3AiLCJxdWFsaXR5IiwiZm9ybWF0IiwidXBsb2FkZXIiLCJ1cGxvYWRfc3RyZWFtIiwiZXJyb3IiLCJyZXN1bHQiLCJ1cmwiLCJzZWN1cmVfdXJsIiwicHVibGljSWQiLCJwdWJsaWNfaWQiLCJlbmQiLCJkZWxldGVGcm9tQ2xvdWRpbmFyeSIsImRlc3Ryb3kiLCJjb25zb2xlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRDpcXGNvZGVcXFdlYkNhZmZlXFxiYWNrZW5kXFxzcmNcXGNvbmZpZ1xcIiwic291cmNlcyI6WyJjbG91ZGluYXJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNsb3VkaW5hcnkgPSByZXF1aXJlKCdjbG91ZGluYXJ5JykudjI7XG5cbi8vIENvbmZpZ3VyZSBDbG91ZGluYXJ5XG5jbG91ZGluYXJ5LmNvbmZpZyh7XG4gIGNsb3VkX25hbWU6IHByb2Nlc3MuZW52LkNMT1VESU5BUllfQ0xPVURfTkFNRSxcbiAgYXBpX2tleTogcHJvY2Vzcy5lbnYuQ0xPVURJTkFSWV9BUElfS0VZLFxuICBhcGlfc2VjcmV0OiBwcm9jZXNzLmVudi5DTE9VRElOQVJZX0FQSV9TRUNSRVQsXG59KTtcblxuLy8gVXBsb2FkIGltYWdlIHRvIENsb3VkaW5hcnlcbmNvbnN0IHVwbG9hZFRvQ2xvdWRpbmFyeSA9IChidWZmZXIsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IHVwbG9hZE9wdGlvbnMgPSB7XG4gICAgICByZXNvdXJjZV90eXBlOiAnaW1hZ2UnLFxuICAgICAgZm9sZGVyOiAnd2ViY2FmZmUvcHJvZHVjdHMnLFxuICAgICAgdHJhbnNmb3JtYXRpb246IFtcbiAgICAgICAgeyB3aWR0aDogODAwLCBoZWlnaHQ6IDYwMCwgY3JvcDogJ2ZpbGwnLCBxdWFsaXR5OiAnYXV0bycgfSxcbiAgICAgICAgeyBmb3JtYXQ6ICd3ZWJwJyB9XG4gICAgICBdLFxuICAgICAgLi4ub3B0aW9uc1xuICAgIH07XG5cbiAgICBjbG91ZGluYXJ5LnVwbG9hZGVyLnVwbG9hZF9zdHJlYW0oXG4gICAgICB1cGxvYWRPcHRpb25zLFxuICAgICAgKGVycm9yLCByZXN1bHQpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICAgIHVybDogcmVzdWx0LnNlY3VyZV91cmwsXG4gICAgICAgICAgICBwdWJsaWNJZDogcmVzdWx0LnB1YmxpY19pZCxcbiAgICAgICAgICAgIHdpZHRoOiByZXN1bHQud2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IHJlc3VsdC5oZWlnaHQsXG4gICAgICAgICAgICBmb3JtYXQ6IHJlc3VsdC5mb3JtYXRcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICkuZW5kKGJ1ZmZlcik7XG4gIH0pO1xufTtcblxuLy8gRGVsZXRlIGltYWdlIGZyb20gQ2xvdWRpbmFyeVxuY29uc3QgZGVsZXRlRnJvbUNsb3VkaW5hcnkgPSBhc3luYyAocHVibGljSWQpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjbG91ZGluYXJ5LnVwbG9hZGVyLmRlc3Ryb3kocHVibGljSWQpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZGVsZXRpbmcgaW1hZ2UgZnJvbSBDbG91ZGluYXJ5OicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNsb3VkaW5hcnksXG4gIHVwbG9hZFRvQ2xvdWRpbmFyeSxcbiAgZGVsZXRlRnJvbUNsb3VkaW5hcnlcbn07Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQ0MsRUFBRTs7QUFFM0M7QUFDQUYsVUFBVSxDQUFDRyxNQUFNLENBQUM7RUFDaEJDLFVBQVUsRUFBRUMsT0FBTyxDQUFDQyxHQUFHLENBQUNDLHFCQUFxQjtFQUM3Q0MsT0FBTyxFQUFFSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csa0JBQWtCO0VBQ3ZDQyxVQUFVLEVBQUVMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSztBQUMxQixDQUFDLENBQUM7O0FBRUY7QUFDQSxNQUFNQyxrQkFBa0IsR0FBR0EsQ0FBQ0MsTUFBTSxFQUFFQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLEtBQUs7RUFDbkQsT0FBTyxJQUFJQyxPQUFPLENBQUMsQ0FBQ0MsT0FBTyxFQUFFQyxNQUFNLEtBQUs7SUFDdEMsTUFBTUMsYUFBYSxHQUFHO01BQ3BCQyxhQUFhLEVBQUUsT0FBTztNQUN0QkMsTUFBTSxFQUFFLG1CQUFtQjtNQUMzQkMsY0FBYyxFQUFFLENBQ2Q7UUFBRUMsS0FBSyxFQUFFLEdBQUc7UUFBRUMsTUFBTSxFQUFFLEdBQUc7UUFBRUMsSUFBSSxFQUFFLE1BQU07UUFBRUMsT0FBTyxFQUFFO01BQU8sQ0FBQyxFQUMxRDtRQUFFQyxNQUFNLEVBQUU7TUFBTyxDQUFDLENBQ25CO01BQ0QsR0FBR1o7SUFDTCxDQUFDO0lBRURkLFVBQVUsQ0FBQzJCLFFBQVEsQ0FBQ0MsYUFBYSxDQUMvQlYsYUFBYSxFQUNiLENBQUNXLEtBQUssRUFBRUMsTUFBTSxLQUFLO01BQ2pCLElBQUlELEtBQUssRUFBRTtRQUNUWixNQUFNLENBQUNZLEtBQUssQ0FBQztNQUNmLENBQUMsTUFBTTtRQUNMYixPQUFPLENBQUM7VUFDTmUsR0FBRyxFQUFFRCxNQUFNLENBQUNFLFVBQVU7VUFDdEJDLFFBQVEsRUFBRUgsTUFBTSxDQUFDSSxTQUFTO1VBQzFCWixLQUFLLEVBQUVRLE1BQU0sQ0FBQ1IsS0FBSztVQUNuQkMsTUFBTSxFQUFFTyxNQUFNLENBQUNQLE1BQU07VUFDckJHLE1BQU0sRUFBRUksTUFBTSxDQUFDSjtRQUNqQixDQUFDLENBQUM7TUFDSjtJQUNGLENBQ0YsQ0FBQyxDQUFDUyxHQUFHLENBQUN0QixNQUFNLENBQUM7RUFDZixDQUFDLENBQUM7QUFDSixDQUFDOztBQUVEO0FBQ0EsTUFBTXVCLG9CQUFvQixHQUFHLE1BQU9ILFFBQVEsSUFBSztFQUMvQyxJQUFJO0lBQ0YsTUFBTUgsTUFBTSxHQUFHLE1BQU05QixVQUFVLENBQUMyQixRQUFRLENBQUNVLE9BQU8sQ0FBQ0osUUFBUSxDQUFDO0lBQzFELE9BQU9ILE1BQU07RUFDZixDQUFDLENBQUMsT0FBT0QsS0FBSyxFQUFFO0lBQ2RTLE9BQU8sQ0FBQ1QsS0FBSyxDQUFDLHVDQUF1QyxFQUFFQSxLQUFLLENBQUM7SUFDN0QsTUFBTUEsS0FBSztFQUNiO0FBQ0YsQ0FBQztBQUVEVSxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNmeEMsVUFBVTtFQUNWWSxrQkFBa0I7RUFDbEJ3QjtBQUNGLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["cloudinary","require","v2","config","cloud_name","process","env","CLOUDINARY_CLOUD_NAME","api_key","CLOUDINARY_API_KEY","api_secret","CLOUDINARY_API_SECRET","uploadToCloudinary","buffer","options","Promise","resolve","reject","uploadOptions","resource_type","folder","transformation","width","height","crop","quality","format","uploader","upload_stream","error","result","url","secure_url","publicId","public_id","end","deleteFromCloudinary","destroy","console","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\config\\","sources":["cloudinary.js"],"sourcesContent":["const cloudinary = require('cloudinary').v2;\n\n// Configure Cloudinary\ncloudinary.config({\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET,\n});\n\n// Upload image to Cloudinary\nconst uploadToCloudinary = (buffer, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const uploadOptions = {\n      resource_type: 'image',\n      folder: 'webcaffe/products',\n      transformation: [\n        { width: 800, height: 600, crop: 'fill', quality: 'auto' },\n        { format: 'webp' }\n      ],\n      ...options\n    };\n\n    cloudinary.uploader.upload_stream(\n      uploadOptions,\n      (error, result) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve({\n            url: result.secure_url,\n            publicId: result.public_id,\n            width: result.width,\n            height: result.height,\n            format: result.format\n          });\n        }\n      }\n    ).end(buffer);\n  });\n};\n\n// Delete image from Cloudinary\nconst deleteFromCloudinary = async (publicId) => {\n  try {\n    const result = await cloudinary.uploader.destroy(publicId);\n    return result;\n  } catch (error) {\n    console.error('Error deleting image from Cloudinary:', error);\n    throw error;\n  }\n};\n\nmodule.exports = {\n  cloudinary,\n  uploadToCloudinary,\n  deleteFromCloudinary\n};"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACC,EAAE;;AAE3C;AACAF,UAAU,CAACG,MAAM,CAAC;EAChBC,UAAU,EAAEC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EAC7CC,OAAO,EAAEH,OAAO,CAACC,GAAG,CAACG,kBAAkB;EACvCC,UAAU,EAAEL,OAAO,CAACC,GAAG,CAACK;AAC1B,CAAC,CAAC;;AAEF;AACA,MAAMC,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACnD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,aAAa,GAAG;MACpBC,aAAa,EAAE,OAAO;MACtBC,MAAM,EAAE,mBAAmB;MAC3BC,cAAc,EAAE,CACd;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAO,CAAC,EAC1D;QAAEC,MAAM,EAAE;MAAO,CAAC,CACnB;MACD,GAAGZ;IACL,CAAC;IAEDd,UAAU,CAAC2B,QAAQ,CAACC,aAAa,CAC/BV,aAAa,EACb,CAACW,KAAK,EAAEC,MAAM,KAAK;MACjB,IAAID,KAAK,EAAE;QACTZ,MAAM,CAACY,KAAK,CAAC;MACf,CAAC,MAAM;QACLb,OAAO,CAAC;UACNe,GAAG,EAAED,MAAM,CAACE,UAAU;UACtBC,QAAQ,EAAEH,MAAM,CAACI,SAAS;UAC1BZ,KAAK,EAAEQ,MAAM,CAACR,KAAK;UACnBC,MAAM,EAAEO,MAAM,CAACP,MAAM;UACrBG,MAAM,EAAEI,MAAM,CAACJ;QACjB,CAAC,CAAC;MACJ;IACF,CACF,CAAC,CAACS,GAAG,CAACtB,MAAM,CAAC;EACf,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMuB,oBAAoB,GAAG,MAAOH,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAMH,MAAM,GAAG,MAAM9B,UAAU,CAAC2B,QAAQ,CAACU,OAAO,CAACJ,QAAQ,CAAC;IAC1D,OAAOH,MAAM;EACf,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdS,OAAO,CAACT,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,MAAMA,KAAK;EACb;AACF,CAAC;AAEDU,MAAM,CAACC,OAAO,GAAG;EACfxC,UAAU;EACVY,kBAAkB;EAClBwB;AACF,CAAC","ignoreList":[]}},"mtime":1757349245117},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\admin.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst {\n  protect,\n  authorize\n} = require('../middleware/auth');\nconst User = require('../models/User');\nconst Product = require('../models/Product');\nconst Order = require('../models/Order');\nconst mongoose = require('mongoose');\n\n// Dashboard statistics\n// @route   GET /api/admin/dashboard/stats\n// @desc    Get dashboard statistics for admin\n// @access  Private (Admin only)\nrouter.get('/dashboard/stats', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get total products count\n    const totalProducts = await Product.countDocuments();\n\n    // Get total orders count\n    const totalOrders = await Order.countDocuments();\n\n    // Get total customers count (users with customer role)\n    const totalCustomers = await User.countDocuments({\n      role: 'customer'\n    });\n\n    // Get total revenue from completed orders\n    const revenueResult = await Order.aggregate([{\n      $match: {\n        status: {\n          $in: ['completed', 'ready']\n        },\n        paymentStatus: 'paid'\n      }\n    }, {\n      $group: {\n        _id: null,\n        totalRevenue: {\n          $sum: '$total'\n        }\n      }\n    }]);\n    const totalRevenue = revenueResult.length > 0 ? revenueResult[0].totalRevenue : 0;\n    res.json({\n      success: true,\n      data: {\n        totalProducts,\n        totalOrders,\n        totalCustomers,\n        totalRevenue\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching dashboard stats:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching dashboard statistics'\n    });\n  }\n});\n\n// @route   GET /api/admin/revenue/total\n// @desc    Get detailed total revenue calculation from completed orders\n// @access  Private (Admin only)\nrouter.get('/revenue/total', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get detailed revenue breakdown from completed orders\n    const revenueBreakdown = await Order.aggregate([{\n      $match: {\n        status: {\n          $in: ['completed', 'ready']\n        },\n        paymentStatus: 'paid'\n      }\n    }, {\n      $group: {\n        _id: null,\n        totalRevenue: {\n          $sum: '$total'\n        },\n        totalSubtotal: {\n          $sum: '$subtotal'\n        },\n        totalTax: {\n          $sum: '$tax'\n        },\n        totalDiscount: {\n          $sum: '$discount'\n        },\n        orderCount: {\n          $sum: 1\n        },\n        averageOrderValue: {\n          $avg: '$total'\n        }\n      }\n    }]);\n\n    // Get revenue by payment method\n    const revenueByPaymentMethod = await Order.aggregate([{\n      $match: {\n        status: {\n          $in: ['completed', 'ready']\n        },\n        paymentStatus: 'paid'\n      }\n    }, {\n      $group: {\n        _id: '$paymentMethod',\n        revenue: {\n          $sum: '$total'\n        },\n        orderCount: {\n          $sum: 1\n        }\n      }\n    }, {\n      $sort: {\n        revenue: -1\n      }\n    }]);\n\n    // Get revenue by order type\n    const revenueByOrderType = await Order.aggregate([{\n      $match: {\n        status: {\n          $in: ['completed', 'ready']\n        },\n        paymentStatus: 'paid'\n      }\n    }, {\n      $group: {\n        _id: '$orderType',\n        revenue: {\n          $sum: '$total'\n        },\n        orderCount: {\n          $sum: 1\n        }\n      }\n    }, {\n      $sort: {\n        revenue: -1\n      }\n    }]);\n\n    // Get all completed orders for verification\n    const completedOrders = await Order.find({\n      status: {\n        $in: ['completed', 'ready']\n      },\n      paymentStatus: 'paid'\n    }).select('orderNumber total status paymentStatus createdAt paymentMethod orderType');\n    const breakdown = revenueBreakdown[0] || {\n      totalRevenue: 0,\n      totalSubtotal: 0,\n      totalTax: 0,\n      totalDiscount: 0,\n      orderCount: 0,\n      averageOrderValue: 0\n    };\n    res.json({\n      success: true,\n      data: {\n        summary: {\n          totalRevenue: breakdown.totalRevenue,\n          totalSubtotal: breakdown.totalSubtotal,\n          totalTax: breakdown.totalTax,\n          totalDiscount: breakdown.totalDiscount,\n          completedOrderCount: breakdown.orderCount,\n          averageOrderValue: breakdown.averageOrderValue\n        },\n        breakdown: {\n          byPaymentMethod: revenueByPaymentMethod,\n          byOrderType: revenueByOrderType\n        },\n        completedOrders: completedOrders.map(order => ({\n          orderNumber: order.orderNumber,\n          total: order.total,\n          status: order.status,\n          paymentStatus: order.paymentStatus,\n          paymentMethod: order.paymentMethod,\n          orderType: order.orderType,\n          createdAt: order.createdAt\n        }))\n      },\n      message: `Total revenue calculated from ${breakdown.orderCount} completed orders`\n    });\n  } catch (error) {\n    console.error('Error calculating total revenue:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while calculating total revenue'\n    });\n  }\n});\n\n// @route   GET /api/admin/dashboard/recent-orders\n// @desc    Get recent orders for admin dashboard\n// @access  Private (Admin only)\nrouter.get('/dashboard/recent-orders', protect, authorize('admin'), async (req, res) => {\n  try {\n    const limit = parseInt(req.query.limit) || 5;\n    const recentOrders = await Order.find().populate('customer', 'firstName lastName email phone address').sort({\n      createdAt: -1\n    }).limit(limit).select('orderNumber customer total status createdAt');\n\n    // Format the response\n    const formattedOrders = recentOrders.map(order => ({\n      _id: order._id,\n      orderNumber: order.orderNumber,\n      customer: order.customer,\n      customerName: order.customer ? `${order.customer.firstName} ${order.customer.lastName}` : 'Unknown Customer',\n      customerEmail: order.customer ? order.customer.email : '',\n      total: order.total,\n      status: order.status,\n      createdAt: order.createdAt\n    }));\n    res.json({\n      success: true,\n      data: formattedOrders\n    });\n  } catch (error) {\n    console.error('Error fetching recent orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching recent orders'\n    });\n  }\n});\n\n// @route   GET /api/admin/dashboard/analytics\n// @desc    Get detailed analytics for admin dashboard\n// @access  Private (Admin only)\nrouter.get('/dashboard/analytics', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get orders by status\n    const ordersByStatus = await Order.aggregate([{\n      $group: {\n        _id: '$status',\n        count: {\n          $sum: 1\n        }\n      }\n    }]);\n\n    // Get revenue by month (last 6 months)\n    const sixMonthsAgo = new Date();\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n    const revenueByMonth = await Order.aggregate([{\n      $match: {\n        createdAt: {\n          $gte: sixMonthsAgo\n        },\n        status: {\n          $in: ['completed', 'ready']\n        },\n        paymentStatus: 'paid'\n      }\n    }, {\n      $group: {\n        _id: {\n          year: {\n            $year: '$createdAt'\n          },\n          month: {\n            $month: '$createdAt'\n          }\n        },\n        revenue: {\n          $sum: '$total'\n        },\n        orderCount: {\n          $sum: 1\n        }\n      }\n    }, {\n      $sort: {\n        '_id.year': 1,\n        '_id.month': 1\n      }\n    }]);\n\n    // Get top selling products\n    const topProducts = await Order.aggregate([{\n      $unwind: '$items'\n    }, {\n      $group: {\n        _id: '$items.product',\n        name: {\n          $first: '$items.name'\n        },\n        totalSold: {\n          $sum: '$items.quantity'\n        },\n        totalRevenue: {\n          $sum: {\n            $multiply: ['$items.price', '$items.quantity']\n          }\n        }\n      }\n    }, {\n      $sort: {\n        totalSold: -1\n      }\n    }, {\n      $limit: 5\n    }]);\n\n    // Get customer growth (new customers per month)\n    const customerGrowth = await User.aggregate([{\n      $match: {\n        role: 'customer',\n        createdAt: {\n          $gte: sixMonthsAgo\n        }\n      }\n    }, {\n      $group: {\n        _id: {\n          year: {\n            $year: '$createdAt'\n          },\n          month: {\n            $month: '$createdAt'\n          }\n        },\n        newCustomers: {\n          $sum: 1\n        }\n      }\n    }, {\n      $sort: {\n        '_id.year': 1,\n        '_id.month': 1\n      }\n    }]);\n    res.json({\n      success: true,\n      data: {\n        ordersByStatus: ordersByStatus.reduce((acc, item) => {\n          acc[item._id] = item.count;\n          return acc;\n        }, {}),\n        revenueByMonth,\n        topProducts,\n        customerGrowth\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching analytics:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching analytics'\n    });\n  }\n});\nrouter.get('/orders', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = {};\n    if (status && status !== 'all') {\n      filter.status = status;\n    }\n    if (search) {\n      filter.$or = [{\n        orderNumber: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        'customer.firstName': {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        'customer.lastName': {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        'customer.email': {\n          $regex: search,\n          $options: 'i'\n        }\n      }];\n    }\n    const skip = (page - 1) * limit;\n    const orders = await Order.find(filter).populate('customer', 'firstName lastName email phone address').sort({\n      [sortBy]: sortOrder\n    }).skip(skip).limit(limit);\n    const totalOrders = await Order.countDocuments(filter);\n    const totalPages = Math.ceil(totalOrders / limit);\n    res.json({\n      success: true,\n      data: {\n        orders,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalOrders,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching orders'\n    });\n  }\n});\n\n// @route   GET /api/admin/orders/:id\n// @desc    Get single order details\n// @access  Private (Admin only)\nrouter.get('/orders/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const order = await Order.findById(req.params.id).populate('customer', 'firstName lastName email phone address');\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: order\n    });\n  } catch (error) {\n    console.error('Error fetching order details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order details'\n    });\n  }\n});\n\n// @route   PUT /api/admin/orders/:id/status\n// @desc    Update order status\n// @access  Private (Admin only)\nrouter.put('/orders/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const {\n      status\n    } = req.body;\n    const validStatuses = ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'];\n    if (!validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order status'\n      });\n    }\n    const order = await Order.findById(req.params.id);\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n    order.status = status;\n    order.updatedAt = new Date();\n    await order.save();\n    res.json({\n      success: true,\n      message: 'Order status updated successfully',\n      data: order\n    });\n  } catch (error) {\n    console.error('Error updating order status:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating order status'\n    });\n  }\n});\n\n// Customer Management Routes\n\n// @route   GET /api/admin/customers\n// @desc    Get all customers with filtering and pagination\n// @access  Private (Admin only)\nrouter.get('/customers', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = {\n      role: 'customer'\n    };\n    if (search) {\n      filter.$or = [{\n        firstName: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        lastName: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        email: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        phone: {\n          $regex: search,\n          $options: 'i'\n        }\n      }];\n    }\n    const skip = (page - 1) * limit;\n    const customers = await User.find(filter).select('-password').sort({\n      [sortBy]: sortOrder\n    }).skip(skip).limit(limit);\n\n    // Get order statistics for each customer\n    const customersWithStats = await Promise.all(customers.map(async customer => {\n      const orderStats = await Order.aggregate([{\n        $match: {\n          customer: customer._id\n        }\n      }, {\n        $group: {\n          _id: null,\n          totalOrders: {\n            $sum: 1\n          },\n          totalSpent: {\n            $sum: '$total'\n          },\n          lastOrderDate: {\n            $max: '$createdAt'\n          }\n        }\n      }]);\n      return {\n        ...customer.toObject(),\n        orderStats: orderStats[0] || {\n          totalOrders: 0,\n          totalSpent: 0,\n          lastOrderDate: null\n        }\n      };\n    }));\n    const totalCustomers = await User.countDocuments(filter);\n    const totalPages = Math.ceil(totalCustomers / limit);\n    res.json({\n      success: true,\n      data: {\n        customers: customersWithStats,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalCustomers,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching customers:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching customers'\n    });\n  }\n});\n\n// @route   GET /api/admin/customers/:id\n// @desc    Get single customer details with order history\n// @access  Private (Admin only)\nrouter.get('/customers/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const customer = await User.findById(req.params.id).select('-password');\n    if (!customer || customer.role !== 'customer') {\n      return res.status(404).json({\n        success: false,\n        message: 'Customer not found'\n      });\n    }\n\n    // Get customer's order history\n    const orders = await Order.find({\n      customer: req.params.id\n    }).sort({\n      createdAt: -1\n    }).limit(10);\n\n    // Get customer statistics\n    const stats = await Order.aggregate([{\n      $match: {\n        customer: mongoose.Types.ObjectId(req.params.id)\n      }\n    }, {\n      $group: {\n        _id: null,\n        totalOrders: {\n          $sum: 1\n        },\n        totalSpent: {\n          $sum: '$total'\n        },\n        averageOrderValue: {\n          $avg: '$total'\n        },\n        lastOrderDate: {\n          $max: '$createdAt'\n        },\n        firstOrderDate: {\n          $min: '$createdAt'\n        }\n      }\n    }]);\n    res.json({\n      success: true,\n      data: {\n        customer,\n        orders,\n        stats: stats[0] || {\n          totalOrders: 0,\n          totalSpent: 0,\n          averageOrderValue: 0,\n          lastOrderDate: null,\n          firstOrderDate: null\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching customer details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching customer details'\n    });\n  }\n});\n\n// Contact Management Routes\n\n// @route   GET /api/admin/contacts\n// @desc    Get all contact messages with filtering and pagination\n// @access  Private (Admin only)\nrouter.get('/contacts', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = {};\n    if (status && status !== 'all') {\n      filter.status = status;\n    }\n    if (search) {\n      filter.$or = [{\n        name: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        email: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        subject: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        ticketId: {\n          $regex: search,\n          $options: 'i'\n        }\n      }];\n    }\n    const skip = (page - 1) * limit;\n    const contacts = await Contact.find(filter).sort({\n      [sortBy]: sortOrder\n    }).skip(skip).limit(limit);\n    const totalContacts = await Contact.countDocuments(filter);\n    const totalPages = Math.ceil(totalContacts / limit);\n    res.json({\n      success: true,\n      data: {\n        contacts,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalContacts,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching contacts:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching contacts'\n    });\n  }\n});\n\n// @route   GET /api/admin/contacts/:id\n// @desc    Get single contact message details\n// @access  Private (Admin only)\nrouter.get('/contacts/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const contact = await Contact.findById(req.params.id);\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Error fetching contact details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching contact details'\n    });\n  }\n});\n\n// @route   PUT /api/admin/contacts/:id/status\n// @desc    Update contact message status\n// @access  Private (Admin only)\nrouter.put('/contacts/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const {\n      status\n    } = req.body;\n\n    // Validate status\n    const validStatuses = ['new', 'read', 'replied', 'closed'];\n    if (!validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid status. Must be one of: new, read, replied, closed'\n      });\n    }\n    const contact = await Contact.findByIdAndUpdate(req.params.id, {\n      status,\n      updatedAt: new Date()\n    }, {\n      new: true,\n      runValidators: true\n    });\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: contact,\n      message: 'Contact status updated successfully'\n    });\n  } catch (error) {\n    console.error('Error updating contact status:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating contact status'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","protect","authorize","User","Product","Order","mongoose","get","req","res","totalProducts","countDocuments","totalOrders","totalCustomers","role","revenueResult","aggregate","$match","status","$in","paymentStatus","$group","_id","totalRevenue","$sum","length","json","success","data","error","console","message","revenueBreakdown","totalSubtotal","totalTax","totalDiscount","orderCount","averageOrderValue","$avg","revenueByPaymentMethod","revenue","$sort","revenueByOrderType","completedOrders","find","select","breakdown","summary","completedOrderCount","byPaymentMethod","byOrderType","map","order","orderNumber","total","paymentMethod","orderType","createdAt","limit","parseInt","query","recentOrders","populate","sort","formattedOrders","customer","customerName","firstName","lastName","customerEmail","email","ordersByStatus","count","sixMonthsAgo","Date","setMonth","getMonth","revenueByMonth","$gte","year","$year","month","$month","topProducts","$unwind","name","$first","totalSold","$multiply","$limit","customerGrowth","newCustomers","reduce","acc","item","page","search","sortBy","sortOrder","filter","$or","$regex","$options","skip","orders","totalPages","Math","ceil","pagination","currentPage","hasNext","hasPrev","findById","params","id","put","body","validStatuses","includes","updatedAt","save","phone","customers","customersWithStats","Promise","all","orderStats","totalSpent","lastOrderDate","$max","toObject","stats","Types","ObjectId","firstOrderDate","$min","Contact","subject","ticketId","contacts","totalContacts","contact","findByIdAndUpdate","new","runValidators","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["admin.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst { protect, authorize } = require('../middleware/auth');\nconst User = require('../models/User');\nconst Product = require('../models/Product');\nconst Order = require('../models/Order');\nconst mongoose = require('mongoose');\n\n// Dashboard statistics\n// @route   GET /api/admin/dashboard/stats\n// @desc    Get dashboard statistics for admin\n// @access  Private (Admin only)\nrouter.get('/dashboard/stats', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get total products count\n    const totalProducts = await Product.countDocuments();\n\n    // Get total orders count\n    const totalOrders = await Order.countDocuments();\n\n    // Get total customers count (users with customer role)\n    const totalCustomers = await User.countDocuments({ role: 'customer' });\n\n    // Get total revenue from completed orders\n    const revenueResult = await Order.aggregate([\n      {\n        $match: {\n          status: { $in: ['completed', 'ready'] },\n          paymentStatus: 'paid'\n        }\n      },\n      {\n        $group: {\n          _id: null,\n          totalRevenue: { $sum: '$total' }\n        }\n      }\n    ]);\n\n    const totalRevenue = revenueResult.length > 0 ? revenueResult[0].totalRevenue : 0;\n\n    res.json({\n      success: true,\n      data: {\n        totalProducts,\n        totalOrders,\n        totalCustomers,\n        totalRevenue\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching dashboard stats:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching dashboard statistics'\n    });\n  }\n});\n\n// @route   GET /api/admin/revenue/total\n// @desc    Get detailed total revenue calculation from completed orders\n// @access  Private (Admin only)\nrouter.get('/revenue/total', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get detailed revenue breakdown from completed orders\n    const revenueBreakdown = await Order.aggregate([\n      {\n        $match: {\n          status: { $in: ['completed', 'ready'] },\n          paymentStatus: 'paid'\n        }\n      },\n      {\n        $group: {\n          _id: null,\n          totalRevenue: { $sum: '$total' },\n          totalSubtotal: { $sum: '$subtotal' },\n          totalTax: { $sum: '$tax' },\n          totalDiscount: { $sum: '$discount' },\n          orderCount: { $sum: 1 },\n          averageOrderValue: { $avg: '$total' }\n        }\n      }\n    ]);\n\n    // Get revenue by payment method\n    const revenueByPaymentMethod = await Order.aggregate([\n      {\n        $match: {\n          status: { $in: ['completed', 'ready'] },\n          paymentStatus: 'paid'\n        }\n      },\n      {\n        $group: {\n          _id: '$paymentMethod',\n          revenue: { $sum: '$total' },\n          orderCount: { $sum: 1 }\n        }\n      },\n      {\n        $sort: { revenue: -1 }\n      }\n    ]);\n\n    // Get revenue by order type\n    const revenueByOrderType = await Order.aggregate([\n      {\n        $match: {\n          status: { $in: ['completed', 'ready'] },\n          paymentStatus: 'paid'\n        }\n      },\n      {\n        $group: {\n          _id: '$orderType',\n          revenue: { $sum: '$total' },\n          orderCount: { $sum: 1 }\n        }\n      },\n      {\n        $sort: { revenue: -1 }\n      }\n    ]);\n\n    // Get all completed orders for verification\n    const completedOrders = await Order.find({\n      status: { $in: ['completed', 'ready'] },\n      paymentStatus: 'paid'\n    }).select('orderNumber total status paymentStatus createdAt paymentMethod orderType');\n\n    const breakdown = revenueBreakdown[0] || {\n      totalRevenue: 0,\n      totalSubtotal: 0,\n      totalTax: 0,\n      totalDiscount: 0,\n      orderCount: 0,\n      averageOrderValue: 0\n    };\n\n    res.json({\n      success: true,\n      data: {\n        summary: {\n          totalRevenue: breakdown.totalRevenue,\n          totalSubtotal: breakdown.totalSubtotal,\n          totalTax: breakdown.totalTax,\n          totalDiscount: breakdown.totalDiscount,\n          completedOrderCount: breakdown.orderCount,\n          averageOrderValue: breakdown.averageOrderValue\n        },\n        breakdown: {\n          byPaymentMethod: revenueByPaymentMethod,\n          byOrderType: revenueByOrderType\n        },\n        completedOrders: completedOrders.map(order => ({\n          orderNumber: order.orderNumber,\n          total: order.total,\n          status: order.status,\n          paymentStatus: order.paymentStatus,\n          paymentMethod: order.paymentMethod,\n          orderType: order.orderType,\n          createdAt: order.createdAt\n        }))\n      },\n      message: `Total revenue calculated from ${breakdown.orderCount} completed orders`\n    });\n  } catch (error) {\n    console.error('Error calculating total revenue:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while calculating total revenue'\n    });\n  }\n});\n\n// @route   GET /api/admin/dashboard/recent-orders\n// @desc    Get recent orders for admin dashboard\n// @access  Private (Admin only)\nrouter.get('/dashboard/recent-orders', protect, authorize('admin'), async (req, res) => {\n  try {\n    const limit = parseInt(req.query.limit) || 5;\n\n    const recentOrders = await Order.find()\n      .populate('customer', 'firstName lastName email phone address')\n      .sort({ createdAt: -1 })\n      .limit(limit)\n      .select('orderNumber customer total status createdAt');\n\n    // Format the response\n    const formattedOrders = recentOrders.map(order => ({\n      _id: order._id,\n      orderNumber: order.orderNumber,\n      customer: order.customer,\n      customerName: order.customer ? `${order.customer.firstName} ${order.customer.lastName}` : 'Unknown Customer',\n      customerEmail: order.customer ? order.customer.email : '',\n      total: order.total,\n      status: order.status,\n      createdAt: order.createdAt\n    }));\n\n    res.json({\n      success: true,\n      data: formattedOrders\n    });\n  } catch (error) {\n    console.error('Error fetching recent orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching recent orders'\n    });\n  }\n});\n\n// @route   GET /api/admin/dashboard/analytics\n// @desc    Get detailed analytics for admin dashboard\n// @access  Private (Admin only)\nrouter.get('/dashboard/analytics', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get orders by status\n    const ordersByStatus = await Order.aggregate([\n      {\n        $group: {\n          _id: '$status',\n          count: { $sum: 1 }\n        }\n      }\n    ]);\n\n    // Get revenue by month (last 6 months)\n    const sixMonthsAgo = new Date();\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n\n    const revenueByMonth = await Order.aggregate([\n      {\n        $match: {\n          createdAt: { $gte: sixMonthsAgo },\n          status: { $in: ['completed', 'ready'] },\n          paymentStatus: 'paid'\n        }\n      },\n      {\n        $group: {\n          _id: {\n            year: { $year: '$createdAt' },\n            month: { $month: '$createdAt' }\n          },\n          revenue: { $sum: '$total' },\n          orderCount: { $sum: 1 }\n        }\n      },\n      {\n        $sort: { '_id.year': 1, '_id.month': 1 }\n      }\n    ]);\n\n    // Get top selling products\n    const topProducts = await Order.aggregate([\n      { $unwind: '$items' },\n      {\n        $group: {\n          _id: '$items.product',\n          name: { $first: '$items.name' },\n          totalSold: { $sum: '$items.quantity' },\n          totalRevenue: { $sum: { $multiply: ['$items.price', '$items.quantity'] } }\n        }\n      },\n      { $sort: { totalSold: -1 } },\n      { $limit: 5 }\n    ]);\n\n    // Get customer growth (new customers per month)\n    const customerGrowth = await User.aggregate([\n      {\n        $match: {\n          role: 'customer',\n          createdAt: { $gte: sixMonthsAgo }\n        }\n      },\n      {\n        $group: {\n          _id: {\n            year: { $year: '$createdAt' },\n            month: { $month: '$createdAt' }\n          },\n          newCustomers: { $sum: 1 }\n        }\n      },\n      {\n        $sort: { '_id.year': 1, '_id.month': 1 }\n      }\n    ]);\n\n    res.json({\n      success: true,\n      data: {\n        ordersByStatus: ordersByStatus.reduce((acc, item) => {\n          acc[item._id] = item.count;\n          return acc;\n        }, {}),\n        revenueByMonth,\n        topProducts,\n        customerGrowth\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching analytics:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching analytics'\n    });\n  }\n});\n\n\n\nrouter.get('/orders', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = {};\n    if (status && status !== 'all') {\n      filter.status = status;\n    }\n    if (search) {\n      filter.$or = [\n        { orderNumber: { $regex: search, $options: 'i' } },\n        { 'customer.firstName': { $regex: search, $options: 'i' } },\n        { 'customer.lastName': { $regex: search, $options: 'i' } },\n        { 'customer.email': { $regex: search, $options: 'i' } }\n      ];\n    }\n\n    const skip = (page - 1) * limit;\n\n    const orders = await Order.find(filter)\n      .populate('customer', 'firstName lastName email phone address')\n      .sort({ [sortBy]: sortOrder })\n      .skip(skip)\n      .limit(limit);\n\n    const totalOrders = await Order.countDocuments(filter);\n    const totalPages = Math.ceil(totalOrders / limit);\n\n    res.json({\n      success: true,\n      data: {\n        orders,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalOrders,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching orders'\n    });\n  }\n});\n\n// @route   GET /api/admin/orders/:id\n// @desc    Get single order details\n// @access  Private (Admin only)\nrouter.get('/orders/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const order = await Order.findById(req.params.id)\n      .populate('customer', 'firstName lastName email phone address');\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: order\n    });\n  } catch (error) {\n    console.error('Error fetching order details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order details'\n    });\n  }\n});\n\n// @route   PUT /api/admin/orders/:id/status\n// @desc    Update order status\n// @access  Private (Admin only)\nrouter.put('/orders/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const { status } = req.body;\n    const validStatuses = ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'];\n\n    if (!validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order status'\n      });\n    }\n\n    const order = await Order.findById(req.params.id);\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    order.status = status;\n    order.updatedAt = new Date();\n\n    await order.save();\n\n    res.json({\n      success: true,\n      message: 'Order status updated successfully',\n      data: order\n    });\n  } catch (error) {\n    console.error('Error updating order status:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating order status'\n    });\n  }\n});\n\n// Customer Management Routes\n\n// @route   GET /api/admin/customers\n// @desc    Get all customers with filtering and pagination\n// @access  Private (Admin only)\nrouter.get('/customers', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = { role: 'customer' };\n    if (search) {\n      filter.$or = [\n        { firstName: { $regex: search, $options: 'i' } },\n        { lastName: { $regex: search, $options: 'i' } },\n        { email: { $regex: search, $options: 'i' } },\n        { phone: { $regex: search, $options: 'i' } }\n      ];\n    }\n\n    const skip = (page - 1) * limit;\n\n    const customers = await User.find(filter)\n      .select('-password')\n      .sort({ [sortBy]: sortOrder })\n      .skip(skip)\n      .limit(limit);\n\n    // Get order statistics for each customer\n    const customersWithStats = await Promise.all(\n      customers.map(async (customer) => {\n        const orderStats = await Order.aggregate([\n          { $match: { customer: customer._id } },\n          {\n            $group: {\n              _id: null,\n              totalOrders: { $sum: 1 },\n              totalSpent: { $sum: '$total' },\n              lastOrderDate: { $max: '$createdAt' }\n            }\n          }\n        ]);\n\n        return {\n          ...customer.toObject(),\n          orderStats: orderStats[0] || {\n            totalOrders: 0,\n            totalSpent: 0,\n            lastOrderDate: null\n          }\n        };\n      })\n    );\n\n    const totalCustomers = await User.countDocuments(filter);\n    const totalPages = Math.ceil(totalCustomers / limit);\n\n    res.json({\n      success: true,\n      data: {\n        customers: customersWithStats,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalCustomers,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching customers:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching customers'\n    });\n  }\n});\n\n// @route   GET /api/admin/customers/:id\n// @desc    Get single customer details with order history\n// @access  Private (Admin only)\nrouter.get('/customers/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const customer = await User.findById(req.params.id)\n      .select('-password');\n\n    if (!customer || customer.role !== 'customer') {\n      return res.status(404).json({\n        success: false,\n        message: 'Customer not found'\n      });\n    }\n\n    // Get customer's order history\n    const orders = await Order.find({ customer: req.params.id })\n      .sort({ createdAt: -1 })\n      .limit(10);\n\n    // Get customer statistics\n    const stats = await Order.aggregate([\n      { $match: { customer: mongoose.Types.ObjectId(req.params.id) } },\n      {\n        $group: {\n          _id: null,\n          totalOrders: { $sum: 1 },\n          totalSpent: { $sum: '$total' },\n          averageOrderValue: { $avg: '$total' },\n          lastOrderDate: { $max: '$createdAt' },\n          firstOrderDate: { $min: '$createdAt' }\n        }\n      }\n    ]);\n\n    res.json({\n      success: true,\n      data: {\n        customer,\n        orders,\n        stats: stats[0] || {\n          totalOrders: 0,\n          totalSpent: 0,\n          averageOrderValue: 0,\n          lastOrderDate: null,\n          firstOrderDate: null\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching customer details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching customer details'\n    });\n  }\n});\n\n// Contact Management Routes\n\n// @route   GET /api/admin/contacts\n// @desc    Get all contact messages with filtering and pagination\n// @access  Private (Admin only)\nrouter.get('/contacts', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = {};\n    if (status && status !== 'all') {\n      filter.status = status;\n    }\n    if (search) {\n      filter.$or = [\n        { name: { $regex: search, $options: 'i' } },\n        { email: { $regex: search, $options: 'i' } },\n        { subject: { $regex: search, $options: 'i' } },\n        { ticketId: { $regex: search, $options: 'i' } }\n      ];\n    }\n\n    const skip = (page - 1) * limit;\n\n    const contacts = await Contact.find(filter)\n      .sort({ [sortBy]: sortOrder })\n      .skip(skip)\n      .limit(limit);\n\n    const totalContacts = await Contact.countDocuments(filter);\n    const totalPages = Math.ceil(totalContacts / limit);\n\n    res.json({\n      success: true,\n      data: {\n        contacts,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalContacts,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching contacts:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching contacts'\n    });\n  }\n});\n\n// @route   GET /api/admin/contacts/:id\n// @desc    Get single contact message details\n// @access  Private (Admin only)\nrouter.get('/contacts/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const contact = await Contact.findById(req.params.id);\n\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Error fetching contact details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching contact details'\n    });\n  }\n});\n\n// @route   PUT /api/admin/contacts/:id/status\n// @desc    Update contact message status\n// @access  Private (Admin only)\nrouter.put('/contacts/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const { status } = req.body;\n\n    // Validate status\n    const validStatuses = ['new', 'read', 'replied', 'closed'];\n    if (!validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid status. Must be one of: new, read, replied, closed'\n      });\n    }\n\n    const contact = await Contact.findByIdAndUpdate(\n      req.params.id,\n      { status, updatedAt: new Date() },\n      { new: true, runValidators: true }\n    );\n\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: contact,\n      message: 'Contact status updated successfully'\n    });\n  } catch (error) {\n    console.error('Error updating contact status:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating contact status'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757589771716},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\shop.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst ShopService = require('../services/shopService');\nconst {\n  protect,\n  authorize\n} = require('../middleware/auth');\n\n// @route   GET /api/shop/config\n// @desc    Get shop configuration\n// @access  Public\nrouter.get('/config', async (req, res) => {\n  try {\n    const result = await ShopService.getShopConfig();\n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in shop config route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching shop configuration'\n    });\n  }\n});\n\n// @route   GET /api/shop/complete\n// @desc    Get complete shop data including menu from database\n// @access  Public\nrouter.get('/complete', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in complete shop data route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching complete shop data'\n    });\n  }\n});\n\n// @route   GET /api/shop/status\n// @desc    Get shop status (open/closed)\n// @access  Public\nrouter.get('/status', async (req, res) => {\n  try {\n    const result = await ShopService.getShopStatus();\n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in shop status route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching shop status'\n    });\n  }\n});\n\n// @route   PUT /api/shop/config\n// @desc    Update shop configuration\n// @access  Private (Admin only)\nrouter.put('/config', protect, authorize('admin'), async (req, res) => {\n  try {\n    const result = await ShopService.updateShopConfig(req.body);\n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data,\n        message: result.message\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in update shop config route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating shop configuration'\n    });\n  }\n});\n\n// @route   POST /api/shop/initialize\n// @desc    Initialize default shop data\n// @access  Private (Admin only)\nrouter.post('/initialize', protect, authorize('admin'), async (req, res) => {\n  try {\n    const result = await ShopService.initializeShopData();\n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data,\n        message: result.message\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in initialize shop data route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while initializing shop data'\n    });\n  }\n});\n\n// @route   GET /api/shop/menu\n// @desc    Get menu data from products\n// @access  Public\nrouter.get('/menu', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    if (result.success) {\n      // Return only menu data\n      res.json({\n        success: true,\n        data: {\n          menu: result.data.menu,\n          businessName: result.data.businessName,\n          lastUpdated: result.data.lastUpdated\n        }\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in menu route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching menu data'\n    });\n  }\n});\n\n// @route   GET /api/shop/ai-context\n// @desc    Get shop data formatted for AI context\n// @access  Public\nrouter.get('/ai-context', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    if (result.success) {\n      // Format data specifically for AI context usage\n      const aiContext = {\n        business: result.data.business,\n        businessName: result.data.business.name,\n        storeName: result.data.business.name,\n        location: result.data.location,\n        contact: result.data.contact,\n        hours: result.data.hours,\n        menu: result.data.menu,\n        services: result.data.services,\n        amenities: result.data.amenities,\n        payment: result.data.payment,\n        policies: result.data.policies,\n        responseTemplates: result.data.responseTemplates,\n        lastUpdated: result.data.lastUpdated\n      };\n      res.json({\n        success: true,\n        data: aiContext\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in AI context route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching AI context data'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","ShopService","protect","authorize","get","req","res","result","getShopConfig","success","json","data","status","message","error","console","getCompleteShopData","getShopStatus","put","updateShopConfig","body","post","initializeShopData","menu","businessName","lastUpdated","aiContext","business","name","storeName","location","contact","hours","services","amenities","payment","policies","responseTemplates","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["shop.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst ShopService = require('../services/shopService');\nconst { protect, authorize } = require('../middleware/auth');\n\n// @route   GET /api/shop/config\n// @desc    Get shop configuration\n// @access  Public\nrouter.get('/config', async (req, res) => {\n  try {\n    const result = await ShopService.getShopConfig();\n    \n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in shop config route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching shop configuration'\n    });\n  }\n});\n\n// @route   GET /api/shop/complete\n// @desc    Get complete shop data including menu from database\n// @access  Public\nrouter.get('/complete', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    \n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in complete shop data route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching complete shop data'\n    });\n  }\n});\n\n// @route   GET /api/shop/status\n// @desc    Get shop status (open/closed)\n// @access  Public\nrouter.get('/status', async (req, res) => {\n  try {\n    const result = await ShopService.getShopStatus();\n    \n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in shop status route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching shop status'\n    });\n  }\n});\n\n// @route   PUT /api/shop/config\n// @desc    Update shop configuration\n// @access  Private (Admin only)\nrouter.put('/config', protect, authorize('admin'), async (req, res) => {\n  try {\n    const result = await ShopService.updateShopConfig(req.body);\n    \n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data,\n        message: result.message\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in update shop config route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating shop configuration'\n    });\n  }\n});\n\n// @route   POST /api/shop/initialize\n// @desc    Initialize default shop data\n// @access  Private (Admin only)\nrouter.post('/initialize', protect, authorize('admin'), async (req, res) => {\n  try {\n    const result = await ShopService.initializeShopData();\n    \n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data,\n        message: result.message\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in initialize shop data route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while initializing shop data'\n    });\n  }\n});\n\n// @route   GET /api/shop/menu\n// @desc    Get menu data from products\n// @access  Public\nrouter.get('/menu', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    \n    if (result.success) {\n      // Return only menu data\n      res.json({\n        success: true,\n        data: {\n          menu: result.data.menu,\n          businessName: result.data.businessName,\n          lastUpdated: result.data.lastUpdated\n        }\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in menu route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching menu data'\n    });\n  }\n});\n\n// @route   GET /api/shop/ai-context\n// @desc    Get shop data formatted for AI context\n// @access  Public\nrouter.get('/ai-context', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    \n    if (result.success) {\n      // Format data specifically for AI context usage\n      const aiContext = {\n        business: result.data.business,\n        businessName: result.data.business.name,\n        storeName: result.data.business.name,\n        location: result.data.location,\n        contact: result.data.contact,\n        hours: result.data.hours,\n        menu: result.data.menu,\n        services: result.data.services,\n        amenities: result.data.amenities,\n        payment: result.data.payment,\n        policies: result.data.policies,\n        responseTemplates: result.data.responseTemplates,\n        lastUpdated: result.data.lastUpdated\n      };\n      \n      res.json({\n        success: true,\n        data: aiContext\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in AI context route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching AI context data'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,WAAW,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AACtD,MAAM;EAAEI,OAAO;EAAEC;AAAU,CAAC,GAAGL,OAAO,CAAC,oBAAoB,CAAC;;AAE5D;AACA;AACA;AACAC,MAAM,CAACK,GAAG,CAAC,SAAS,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,aAAa,CAAC,CAAC;IAEhD,IAAID,MAAM,CAACE,OAAO,EAAE;MAClBH,GAAG,CAACI,IAAI,CAAC;QACPD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAEJ,MAAM,CAACI;MACf,CAAC,CAAC;IACJ,CAAC,MAAM;MACLL,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QACnBD,OAAO,EAAE,KAAK;QACdI,OAAO,EAAEN,MAAM,CAACM;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnDR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MACnBD,OAAO,EAAE,KAAK;MACdI,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACAd,MAAM,CAACK,GAAG,CAAC,WAAW,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC1C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMN,WAAW,CAACe,mBAAmB,CAAC,CAAC;IAEtD,IAAIT,MAAM,CAACE,OAAO,EAAE;MAClBH,GAAG,CAACI,IAAI,CAAC;QACPD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAEJ,MAAM,CAACI;MACf,CAAC,CAAC;IACJ,CAAC,MAAM;MACLL,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QACnBD,OAAO,EAAE,KAAK;QACdI,OAAO,EAAEN,MAAM,CAACM;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1DR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MACnBD,OAAO,EAAE,KAAK;MACdI,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACAd,MAAM,CAACK,GAAG,CAAC,SAAS,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMN,WAAW,CAACgB,aAAa,CAAC,CAAC;IAEhD,IAAIV,MAAM,CAACE,OAAO,EAAE;MAClBH,GAAG,CAACI,IAAI,CAAC;QACPD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAEJ,MAAM,CAACI;MACf,CAAC,CAAC;IACJ,CAAC,MAAM;MACLL,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QACnBD,OAAO,EAAE,KAAK;QACdI,OAAO,EAAEN,MAAM,CAACM;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnDR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MACnBD,OAAO,EAAE,KAAK;MACdI,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACAd,MAAM,CAACmB,GAAG,CAAC,SAAS,EAAEhB,OAAO,EAAEC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAOE,GAAG,EAAEC,GAAG,KAAK;EACrE,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMN,WAAW,CAACkB,gBAAgB,CAACd,GAAG,CAACe,IAAI,CAAC;IAE3D,IAAIb,MAAM,CAACE,OAAO,EAAE;MAClBH,GAAG,CAACI,IAAI,CAAC;QACPD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAEJ,MAAM,CAACI,IAAI;QACjBE,OAAO,EAAEN,MAAM,CAACM;MAClB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLP,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QACnBD,OAAO,EAAE,KAAK;QACdI,OAAO,EAAEN,MAAM,CAACM;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1DR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MACnBD,OAAO,EAAE,KAAK;MACdI,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACAd,MAAM,CAACsB,IAAI,CAAC,aAAa,EAAEnB,OAAO,EAAEC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAOE,GAAG,EAAEC,GAAG,KAAK;EAC1E,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMN,WAAW,CAACqB,kBAAkB,CAAC,CAAC;IAErD,IAAIf,MAAM,CAACE,OAAO,EAAE;MAClBH,GAAG,CAACI,IAAI,CAAC;QACPD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAEJ,MAAM,CAACI,IAAI;QACjBE,OAAO,EAAEN,MAAM,CAACM;MAClB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLP,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QACnBD,OAAO,EAAE,KAAK;QACdI,OAAO,EAAEN,MAAM,CAACM;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5DR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MACnBD,OAAO,EAAE,KAAK;MACdI,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACAd,MAAM,CAACK,GAAG,CAAC,OAAO,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACtC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMN,WAAW,CAACe,mBAAmB,CAAC,CAAC;IAEtD,IAAIT,MAAM,CAACE,OAAO,EAAE;MAClB;MACAH,GAAG,CAACI,IAAI,CAAC;QACPD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAE;UACJY,IAAI,EAAEhB,MAAM,CAACI,IAAI,CAACY,IAAI;UACtBC,YAAY,EAAEjB,MAAM,CAACI,IAAI,CAACa,YAAY;UACtCC,WAAW,EAAElB,MAAM,CAACI,IAAI,CAACc;QAC3B;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLnB,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QACnBD,OAAO,EAAE,KAAK;QACdI,OAAO,EAAEN,MAAM,CAACM;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5CR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MACnBD,OAAO,EAAE,KAAK;MACdI,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACAd,MAAM,CAACK,GAAG,CAAC,aAAa,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC5C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMN,WAAW,CAACe,mBAAmB,CAAC,CAAC;IAEtD,IAAIT,MAAM,CAACE,OAAO,EAAE;MAClB;MACA,MAAMiB,SAAS,GAAG;QAChBC,QAAQ,EAAEpB,MAAM,CAACI,IAAI,CAACgB,QAAQ;QAC9BH,YAAY,EAAEjB,MAAM,CAACI,IAAI,CAACgB,QAAQ,CAACC,IAAI;QACvCC,SAAS,EAAEtB,MAAM,CAACI,IAAI,CAACgB,QAAQ,CAACC,IAAI;QACpCE,QAAQ,EAAEvB,MAAM,CAACI,IAAI,CAACmB,QAAQ;QAC9BC,OAAO,EAAExB,MAAM,CAACI,IAAI,CAACoB,OAAO;QAC5BC,KAAK,EAAEzB,MAAM,CAACI,IAAI,CAACqB,KAAK;QACxBT,IAAI,EAAEhB,MAAM,CAACI,IAAI,CAACY,IAAI;QACtBU,QAAQ,EAAE1B,MAAM,CAACI,IAAI,CAACsB,QAAQ;QAC9BC,SAAS,EAAE3B,MAAM,CAACI,IAAI,CAACuB,SAAS;QAChCC,OAAO,EAAE5B,MAAM,CAACI,IAAI,CAACwB,OAAO;QAC5BC,QAAQ,EAAE7B,MAAM,CAACI,IAAI,CAACyB,QAAQ;QAC9BC,iBAAiB,EAAE9B,MAAM,CAACI,IAAI,CAAC0B,iBAAiB;QAChDZ,WAAW,EAAElB,MAAM,CAACI,IAAI,CAACc;MAC3B,CAAC;MAEDnB,GAAG,CAACI,IAAI,CAAC;QACPD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAEe;MACR,CAAC,CAAC;IACJ,CAAC,MAAM;MACLpB,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QACnBD,OAAO,EAAE,KAAK;QACdI,OAAO,EAAEN,MAAM,CAACM;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClDR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MACnBD,OAAO,EAAE,KAAK;MACdI,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFyB,MAAM,CAACC,OAAO,GAAGxC,MAAM","ignoreList":[]}},"mtime":1757007726524},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\services\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\services\\\\shopService.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const Shop = require('../models/Shop');\nconst Product = require('../models/Product');\nclass ShopService {\n  /**\n   * Get the active shop configuration\n   * @returns {Promise<Object>} Shop configuration\n   */\n  static async getShopConfig() {\n    try {\n      const shop = await Shop.getActiveShop();\n      return {\n        success: true,\n        data: shop\n      };\n    } catch (error) {\n      console.error('Error fetching shop config:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch shop configuration',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get complete shop data including menu from products\n   * @returns {Promise<Object>} Complete shop data with menu\n   */\n  static async getCompleteShopData() {\n    try {\n      const shop = await Shop.getActiveShop();\n      const products = await Product.find({\n        inStock: true\n      }).sort({\n        category: 1,\n        name: 1\n      });\n\n      // Group products by category to create menu structure\n      const menuCategories = {};\n      products.forEach(product => {\n        if (!menuCategories[product.category]) {\n          menuCategories[product.category] = {\n            name: product.category,\n            vietnamese: this.getCategoryVietnameseName(product.category),\n            items: []\n          };\n        }\n\n        // Format product for menu\n        const menuItem = {\n          id: product._id,\n          name: product.name,\n          description: product.description,\n          price: this.formatPrice(product.price),\n          category: product.category,\n          image: product.image,\n          featured: product.featured,\n          ingredients: product.ingredients || [],\n          nutritionalInfo: product.nutritionalInfo || {},\n          sizes: product.sizes || []\n        };\n        menuCategories[product.category].items.push(menuItem);\n      });\n\n      // Convert to array format\n      const menu = {\n        categories: Object.values(menuCategories),\n        specialties: this.extractSpecialties(products)\n      };\n\n      // Combine shop data with dynamic menu\n      const completeData = {\n        ...shop.toObject(),\n        menu,\n        businessName: shop.business.name,\n        // For backward compatibility\n        storeName: shop.business.name,\n        // For backward compatibility\n        lastUpdated: new Date().toISOString()\n      };\n      return {\n        success: true,\n        data: completeData\n      };\n    } catch (error) {\n      console.error('Error fetching complete shop data:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch complete shop data',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Update shop configuration\n   * @param {Object} updateData - Data to update\n   * @returns {Promise<Object>} Updated shop configuration\n   */\n  static async updateShopConfig(updateData) {\n    try {\n      const shop = await Shop.getActiveShop();\n\n      // Update shop data\n      Object.keys(updateData).forEach(key => {\n        if (updateData[key] !== undefined) {\n          shop[key] = updateData[key];\n        }\n      });\n      await shop.save();\n      return {\n        success: true,\n        data: shop,\n        message: 'Shop configuration updated successfully'\n      };\n    } catch (error) {\n      console.error('Error updating shop config:', error);\n      return {\n        success: false,\n        message: 'Failed to update shop configuration',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get shop status (open/closed)\n   * @returns {Promise<Object>} Shop status information\n   */\n  static async getShopStatus() {\n    try {\n      const shop = await Shop.getActiveShop();\n      const isOpen = shop.isCurrentlyOpen();\n      const now = new Date();\n      const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n      const currentHours = isWeekend ? shop.hours.weekends : shop.hours.weekdays;\n      return {\n        success: true,\n        data: {\n          isOpen,\n          currentHours: currentHours.display,\n          nextChange: this.getNextStatusChange(shop, now),\n          timezone: shop.hours.timezone\n        }\n      };\n    } catch (error) {\n      console.error('Error fetching shop status:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch shop status',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get Vietnamese category name mapping\n   * @param {string} category - English category name\n   * @returns {string} Vietnamese category name\n   */\n  static getCategoryVietnameseName(category) {\n    const mapping = {\n      'Cà phê': 'Cà Phê',\n      'Coffee': 'Cà Phê',\n      'Thức uống đậm vị': 'Thức Uống Đậm Vị',\n      'Đồ uống tươi mát': 'Đồ Uống Tươi Mát',\n      'Bánh ngọt': 'Bánh Ngọt',\n      'Pastries': 'Bánh Ngọt',\n      'Light Meals': 'Món Ăn Nhẹ',\n      'Món ăn nhẹ': 'Món Ăn Nhẹ'\n    };\n    return mapping[category] || category;\n  }\n\n  /**\n   * Format price for display\n   * @param {number} price - Price in number format\n   * @returns {string} Formatted price string\n   */\n  static formatPrice(price) {\n    if (typeof price === 'number') {\n      return `${(price * 1000).toLocaleString('vi-VN')} VND`;\n    }\n    return price;\n  }\n\n  /**\n   * Extract specialties from products\n   * @param {Array} products - Array of products\n   * @returns {Array} Array of specialty items\n   */\n  static extractSpecialties(products) {\n    return products.filter(product => product.featured).map(product => product.name).slice(0, 4); // Limit to 4 specialties\n  }\n\n  /**\n   * Calculate next status change time\n   * @param {Object} shop - Shop configuration\n   * @param {Date} now - Current date\n   * @returns {string} Next status change description\n   */\n  static getNextStatusChange(shop, now) {\n    const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n    const currentHours = isWeekend ? shop.hours.weekends : shop.hours.weekdays;\n    const isOpen = shop.isCurrentlyOpen();\n    if (isOpen) {\n      return `Closes at ${currentHours.close}`;\n    } else {\n      return `Opens at ${currentHours.open}`;\n    }\n  }\n\n  /**\n   * Initialize default shop data if none exists\n   * @returns {Promise<Object>} Initialization result\n   */\n  static async initializeShopData() {\n    try {\n      const existingShop = await Shop.findOne({\n        isActive: true\n      });\n      if (!existingShop) {\n        const defaultShop = new Shop({});\n        await defaultShop.save();\n        return {\n          success: true,\n          message: 'Default shop data initialized',\n          data: defaultShop\n        };\n      }\n      return {\n        success: true,\n        message: 'Shop data already exists',\n        data: existingShop\n      };\n    } catch (error) {\n      console.error('Error initializing shop data:', error);\n      return {\n        success: false,\n        message: 'Failed to initialize shop data',\n        error: error.message\n      };\n    }\n  }\n}\nmodule.exports = ShopService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Shop","require","Product","ShopService","getShopConfig","shop","getActiveShop","success","data","error","console","message","getCompleteShopData","products","find","inStock","sort","category","name","menuCategories","forEach","product","vietnamese","getCategoryVietnameseName","items","menuItem","id","_id","description","price","formatPrice","image","featured","ingredients","nutritionalInfo","sizes","push","menu","categories","Object","values","specialties","extractSpecialties","completeData","toObject","businessName","business","storeName","lastUpdated","Date","toISOString","updateShopConfig","updateData","keys","key","undefined","save","getShopStatus","isOpen","isCurrentlyOpen","now","isWeekend","getDay","currentHours","hours","weekends","weekdays","display","nextChange","getNextStatusChange","timezone","mapping","toLocaleString","filter","map","slice","close","open","initializeShopData","existingShop","findOne","isActive","defaultShop","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\services\\","sources":["shopService.js"],"sourcesContent":["const Shop = require('../models/Shop');\nconst Product = require('../models/Product');\n\nclass ShopService {\n  /**\n   * Get the active shop configuration\n   * @returns {Promise<Object>} Shop configuration\n   */\n  static async getShopConfig() {\n    try {\n      const shop = await Shop.getActiveShop();\n      return {\n        success: true,\n        data: shop\n      };\n    } catch (error) {\n      console.error('Error fetching shop config:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch shop configuration',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get complete shop data including menu from products\n   * @returns {Promise<Object>} Complete shop data with menu\n   */\n  static async getCompleteShopData() {\n    try {\n      const shop = await Shop.getActiveShop();\n      const products = await Product.find({ inStock: true }).sort({ category: 1, name: 1 });\n      \n      // Group products by category to create menu structure\n      const menuCategories = {};\n      \n      products.forEach(product => {\n        if (!menuCategories[product.category]) {\n          menuCategories[product.category] = {\n            name: product.category,\n            vietnamese: this.getCategoryVietnameseName(product.category),\n            items: []\n          };\n        }\n        \n        // Format product for menu\n        const menuItem = {\n          id: product._id,\n          name: product.name,\n          description: product.description,\n          price: this.formatPrice(product.price),\n          category: product.category,\n          image: product.image,\n          featured: product.featured,\n          ingredients: product.ingredients || [],\n          nutritionalInfo: product.nutritionalInfo || {},\n          sizes: product.sizes || []\n        };\n        \n        menuCategories[product.category].items.push(menuItem);\n      });\n      \n      // Convert to array format\n      const menu = {\n        categories: Object.values(menuCategories),\n        specialties: this.extractSpecialties(products)\n      };\n      \n      // Combine shop data with dynamic menu\n      const completeData = {\n        ...shop.toObject(),\n        menu,\n        businessName: shop.business.name, // For backward compatibility\n        storeName: shop.business.name,    // For backward compatibility\n        lastUpdated: new Date().toISOString()\n      };\n      \n      return {\n        success: true,\n        data: completeData\n      };\n    } catch (error) {\n      console.error('Error fetching complete shop data:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch complete shop data',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Update shop configuration\n   * @param {Object} updateData - Data to update\n   * @returns {Promise<Object>} Updated shop configuration\n   */\n  static async updateShopConfig(updateData) {\n    try {\n      const shop = await Shop.getActiveShop();\n      \n      // Update shop data\n      Object.keys(updateData).forEach(key => {\n        if (updateData[key] !== undefined) {\n          shop[key] = updateData[key];\n        }\n      });\n      \n      await shop.save();\n      \n      return {\n        success: true,\n        data: shop,\n        message: 'Shop configuration updated successfully'\n      };\n    } catch (error) {\n      console.error('Error updating shop config:', error);\n      return {\n        success: false,\n        message: 'Failed to update shop configuration',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get shop status (open/closed)\n   * @returns {Promise<Object>} Shop status information\n   */\n  static async getShopStatus() {\n    try {\n      const shop = await Shop.getActiveShop();\n      const isOpen = shop.isCurrentlyOpen();\n      \n      const now = new Date();\n      const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n      const currentHours = isWeekend ? shop.hours.weekends : shop.hours.weekdays;\n      \n      return {\n        success: true,\n        data: {\n          isOpen,\n          currentHours: currentHours.display,\n          nextChange: this.getNextStatusChange(shop, now),\n          timezone: shop.hours.timezone\n        }\n      };\n    } catch (error) {\n      console.error('Error fetching shop status:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch shop status',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get Vietnamese category name mapping\n   * @param {string} category - English category name\n   * @returns {string} Vietnamese category name\n   */\n  static getCategoryVietnameseName(category) {\n    const mapping = {\n      'Cà phê': 'Cà Phê',\n      'Coffee': 'Cà Phê',\n      'Thức uống đậm vị': 'Thức Uống Đậm Vị',\n      'Đồ uống tươi mát': 'Đồ Uống Tươi Mát',\n      'Bánh ngọt': 'Bánh Ngọt',\n      'Pastries': 'Bánh Ngọt',\n      'Light Meals': 'Món Ăn Nhẹ',\n      'Món ăn nhẹ': 'Món Ăn Nhẹ'\n    };\n    \n    return mapping[category] || category;\n  }\n\n  /**\n   * Format price for display\n   * @param {number} price - Price in number format\n   * @returns {string} Formatted price string\n   */\n  static formatPrice(price) {\n    if (typeof price === 'number') {\n      return `${(price * 1000).toLocaleString('vi-VN')} VND`;\n    }\n    return price;\n  }\n\n  /**\n   * Extract specialties from products\n   * @param {Array} products - Array of products\n   * @returns {Array} Array of specialty items\n   */\n  static extractSpecialties(products) {\n    return products\n      .filter(product => product.featured)\n      .map(product => product.name)\n      .slice(0, 4); // Limit to 4 specialties\n  }\n\n  /**\n   * Calculate next status change time\n   * @param {Object} shop - Shop configuration\n   * @param {Date} now - Current date\n   * @returns {string} Next status change description\n   */\n  static getNextStatusChange(shop, now) {\n    const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n    const currentHours = isWeekend ? shop.hours.weekends : shop.hours.weekdays;\n    const isOpen = shop.isCurrentlyOpen();\n    \n    if (isOpen) {\n      return `Closes at ${currentHours.close}`;\n    } else {\n      return `Opens at ${currentHours.open}`;\n    }\n  }\n\n  /**\n   * Initialize default shop data if none exists\n   * @returns {Promise<Object>} Initialization result\n   */\n  static async initializeShopData() {\n    try {\n      const existingShop = await Shop.findOne({ isActive: true });\n      \n      if (!existingShop) {\n        const defaultShop = new Shop({});\n        await defaultShop.save();\n        \n        return {\n          success: true,\n          message: 'Default shop data initialized',\n          data: defaultShop\n        };\n      }\n      \n      return {\n        success: true,\n        message: 'Shop data already exists',\n        data: existingShop\n      };\n    } catch (error) {\n      console.error('Error initializing shop data:', error);\n      return {\n        success: false,\n        message: 'Failed to initialize shop data',\n        error: error.message\n      };\n    }\n  }\n}\n\nmodule.exports = ShopService;"],"mappings":"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","ignoreList":[]}},"mtime":1757007727401},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\Shop.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const mongoose = require('mongoose');\nconst shopSchema = new mongoose.Schema({\n  business: {\n    name: {\n      type: String,\n      required: [true, 'Business name is required'],\n      trim: true,\n      default: 'DREAM COFFEE'\n    },\n    type: {\n      type: String,\n      default: 'Premium Coffee Shop'\n    },\n    description: {\n      type: String,\n      default: 'A premium coffee shop in the heart of Ho Chi Minh City, offering exceptional coffee, pastries, and a welcoming atmosphere for work and relaxation.'\n    },\n    established: {\n      type: String,\n      default: '2020'\n    },\n    mission: {\n      type: String,\n      default: 'To provide the finest coffee experience while fostering community connections.'\n    }\n  },\n  location: {\n    address: {\n      type: String,\n      required: [true, 'Address is required'],\n      default: '123 Đường Cà Phê, Quận 1, Thành phố Hồ Chí Minh'\n    },\n    englishAddress: {\n      type: String,\n      default: '123 Coffee Street, District 1, Ho Chi Minh City'\n    },\n    city: {\n      type: String,\n      default: 'Ho Chi Minh City'\n    },\n    district: {\n      type: String,\n      default: 'District 1'\n    },\n    country: {\n      type: String,\n      default: 'Vietnam'\n    },\n    coordinates: {\n      lat: {\n        type: Number,\n        default: 10.7769\n      },\n      lng: {\n        type: Number,\n        default: 106.7009\n      }\n    },\n    landmarks: {\n      type: String,\n      default: 'Near Ben Thanh Market, walking distance from Nguyen Hue Walking Street'\n    }\n  },\n  contact: {\n    phone: {\n      type: String,\n      required: [true, 'Phone number is required'],\n      default: '+84 28 1234 5678'\n    },\n    hotline: {\n      type: String,\n      default: '+84 28 1234 5678'\n    },\n    email: {\n      type: String,\n      required: [true, 'Email is required'],\n      match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email'],\n      default: 'info@dreamcoffee.vn'\n    },\n    website: {\n      type: String,\n      default: 'https://dreamcoffee.vn'\n    },\n    socialMedia: {\n      facebook: {\n        type: String,\n        default: 'https://facebook.com/dreamcoffee'\n      },\n      instagram: {\n        type: String,\n        default: 'https://instagram.com/dreamcoffee'\n      },\n      twitter: {\n        type: String,\n        default: 'https://twitter.com/dreamcoffee'\n      }\n    }\n  },\n  hours: {\n    weekdays: {\n      open: {\n        type: String,\n        default: '06:00'\n      },\n      close: {\n        type: String,\n        default: '20:00'\n      },\n      display: {\n        type: String,\n        default: 'Thứ 2 - Thứ 6: 6:00 - 20:00 (GMT+7)'\n      }\n    },\n    weekends: {\n      open: {\n        type: String,\n        default: '07:00'\n      },\n      close: {\n        type: String,\n        default: '19:00'\n      },\n      display: {\n        type: String,\n        default: 'Thứ 7 - Chủ Nhật: 7:00 - 19:00 (GMT+7)'\n      }\n    },\n    timezone: {\n      type: String,\n      default: 'GMT+7 (ICT)'\n    },\n    notes: {\n      type: String,\n      default: 'Closed on major holidays'\n    },\n    kitchen: {\n      type: String,\n      default: 'Kitchen closes 30 minutes before closing time'\n    }\n  },\n  services: {\n    dineIn: {\n      type: Boolean,\n      default: true\n    },\n    takeaway: {\n      type: Boolean,\n      default: true\n    },\n    delivery: {\n      type: Boolean,\n      default: true\n    },\n    catering: {\n      type: Boolean,\n      default: true\n    },\n    events: {\n      available: {\n        type: Boolean,\n        default: true\n      },\n      notice: {\n        type: String,\n        default: 'Contact us at least 48 hours in advance for bookings'\n      },\n      types: [{\n        type: String,\n        default: ['Private events', 'Meetings', 'Celebrations']\n      }]\n    },\n    wholesale: {\n      available: {\n        type: Boolean,\n        default: true\n      },\n      contact: {\n        type: String,\n        default: 'wholesale@dreamcoffee.vn'\n      },\n      description: {\n        type: String,\n        default: 'Coffee beans and catering services for businesses'\n      }\n    }\n  },\n  amenities: [{\n    type: String,\n    default: ['Free WiFi', 'Air Conditioning', 'Outdoor Seating', 'Power Outlets', 'Free Parking (20 spots, including 2 accessible spaces)', 'Pet Friendly', 'Study Area', 'Meeting Rooms']\n  }],\n  payment: {\n    methods: [{\n      type: String,\n      default: ['Cash', 'Credit Card', 'Debit Card', 'Mobile Payment', 'Bank Transfer']\n    }],\n    currency: {\n      type: String,\n      default: 'VND (Vietnamese Dong)'\n    }\n  },\n  policies: {\n    wifi: {\n      type: String,\n      default: 'Free high-speed WiFi for all customers'\n    },\n    parking: {\n      type: String,\n      default: 'Free parking available - 20 spots including 2 accessible spaces'\n    },\n    pets: {\n      type: String,\n      default: 'Pet-friendly environment'\n    },\n    smoking: {\n      type: String,\n      default: 'Non-smoking establishment'\n    },\n    reservations: {\n      type: String,\n      default: 'Walk-ins welcome, reservations recommended for groups of 6+'\n    }\n  },\n  responseTemplates: {\n    greeting: {\n      type: String,\n      default: 'Xin chào! Tôi là trợ lý AI của DREAM COFFEE. Tôi có thể giúp bạn tìm hiểu về menu, giờ mở cửa, địa chỉ và các dịch vụ của chúng tôi. Bạn cần hỗ trợ gì?'\n    },\n    fallback: {\n      type: String,\n      default: 'Xin lỗi, tôi không hiểu câu hỏi của bạn. Bạn có thể hỏi về menu, giờ mở cửa, địa chỉ, hoặc các dịch vụ của DREAM COFFEE không?'\n    },\n    contact: {\n      type: String,\n      default: 'Bạn có thể liên hệ với chúng tôi qua:\\n📞 Điện thoại: +84 28 1234 5678\\n📧 Email: info@dreamcoffee.vn\\n📍 Địa chỉ: 123 Đường Cà Phê, Quận 1, TP.HCM'\n    }\n  },\n  // This will be true for the main shop configuration\n  isActive: {\n    type: Boolean,\n    default: true\n  }\n}, {\n  timestamps: true\n});\n\n// Index for better performance\nshopSchema.index({\n  isActive: 1\n});\n\n// Static method to get the active shop configuration\nshopSchema.statics.getActiveShop = async function () {\n  let shop = await this.findOne({\n    isActive: true\n  });\n\n  // If no shop exists, create default one\n  if (!shop) {\n    shop = new this({});\n    await shop.save();\n  }\n  return shop;\n};\n\n// Instance method to check if currently open\nshopSchema.methods.isCurrentlyOpen = function () {\n  const now = new Date();\n  const currentHour = now.getHours();\n  const currentMinute = now.getMinutes();\n  const currentTime = currentHour * 60 + currentMinute;\n  const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n  const hours = isWeekend ? this.hours.weekends : this.hours.weekdays;\n  const [openHour, openMinute] = hours.open.split(':').map(Number);\n  const [closeHour, closeMinute] = hours.close.split(':').map(Number);\n  const openTime = openHour * 60 + openMinute;\n  const closeTime = closeHour * 60 + closeMinute;\n  return currentTime >= openTime && currentTime <= closeTime;\n};\nmodule.exports = mongoose.model('Shop', shopSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["mongoose","require","shopSchema","Schema","business","name","type","String","required","trim","default","description","established","mission","location","address","englishAddress","city","district","country","coordinates","lat","Number","lng","landmarks","contact","phone","hotline","email","match","website","socialMedia","facebook","instagram","twitter","hours","weekdays","open","close","display","weekends","timezone","notes","kitchen","services","dineIn","Boolean","takeaway","delivery","catering","events","available","notice","types","wholesale","amenities","payment","methods","currency","policies","wifi","parking","pets","smoking","reservations","responseTemplates","greeting","fallback","isActive","timestamps","index","statics","getActiveShop","shop","findOne","save","isCurrentlyOpen","now","Date","currentHour","getHours","currentMinute","getMinutes","currentTime","isWeekend","getDay","openHour","openMinute","split","map","closeHour","closeMinute","openTime","closeTime","module","exports","model"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\models\\","sources":["Shop.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst shopSchema = new mongoose.Schema({\n  business: {\n    name: {\n      type: String,\n      required: [true, 'Business name is required'],\n      trim: true,\n      default: 'DREAM COFFEE'\n    },\n    type: {\n      type: String,\n      default: 'Premium Coffee Shop'\n    },\n    description: {\n      type: String,\n      default: 'A premium coffee shop in the heart of Ho Chi Minh City, offering exceptional coffee, pastries, and a welcoming atmosphere for work and relaxation.'\n    },\n    established: {\n      type: String,\n      default: '2020'\n    },\n    mission: {\n      type: String,\n      default: 'To provide the finest coffee experience while fostering community connections.'\n    }\n  },\n\n  location: {\n    address: {\n      type: String,\n      required: [true, 'Address is required'],\n      default: '123 Đường Cà Phê, Quận 1, Thành phố Hồ Chí Minh'\n    },\n    englishAddress: {\n      type: String,\n      default: '123 Coffee Street, District 1, Ho Chi Minh City'\n    },\n    city: {\n      type: String,\n      default: 'Ho Chi Minh City'\n    },\n    district: {\n      type: String,\n      default: 'District 1'\n    },\n    country: {\n      type: String,\n      default: 'Vietnam'\n    },\n    coordinates: {\n      lat: {\n        type: Number,\n        default: 10.7769\n      },\n      lng: {\n        type: Number,\n        default: 106.7009\n      }\n    },\n    landmarks: {\n      type: String,\n      default: 'Near Ben Thanh Market, walking distance from Nguyen Hue Walking Street'\n    }\n  },\n\n  contact: {\n    phone: {\n      type: String,\n      required: [true, 'Phone number is required'],\n      default: '+84 28 1234 5678'\n    },\n    hotline: {\n      type: String,\n      default: '+84 28 1234 5678'\n    },\n    email: {\n      type: String,\n      required: [true, 'Email is required'],\n      match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email'],\n      default: 'info@dreamcoffee.vn'\n    },\n    website: {\n      type: String,\n      default: 'https://dreamcoffee.vn'\n    },\n    socialMedia: {\n      facebook: {\n        type: String,\n        default: 'https://facebook.com/dreamcoffee'\n      },\n      instagram: {\n        type: String,\n        default: 'https://instagram.com/dreamcoffee'\n      },\n      twitter: {\n        type: String,\n        default: 'https://twitter.com/dreamcoffee'\n      }\n    }\n  },\n\n  hours: {\n    weekdays: {\n      open: {\n        type: String,\n        default: '06:00'\n      },\n      close: {\n        type: String,\n        default: '20:00'\n      },\n      display: {\n        type: String,\n        default: 'Thứ 2 - Thứ 6: 6:00 - 20:00 (GMT+7)'\n      }\n    },\n    weekends: {\n      open: {\n        type: String,\n        default: '07:00'\n      },\n      close: {\n        type: String,\n        default: '19:00'\n      },\n      display: {\n        type: String,\n        default: 'Thứ 7 - Chủ Nhật: 7:00 - 19:00 (GMT+7)'\n      }\n    },\n    timezone: {\n      type: String,\n      default: 'GMT+7 (ICT)'\n    },\n    notes: {\n      type: String,\n      default: 'Closed on major holidays'\n    },\n    kitchen: {\n      type: String,\n      default: 'Kitchen closes 30 minutes before closing time'\n    }\n  },\n\n  services: {\n    dineIn: {\n      type: Boolean,\n      default: true\n    },\n    takeaway: {\n      type: Boolean,\n      default: true\n    },\n    delivery: {\n      type: Boolean,\n      default: true\n    },\n    catering: {\n      type: Boolean,\n      default: true\n    },\n    events: {\n      available: {\n        type: Boolean,\n        default: true\n      },\n      notice: {\n        type: String,\n        default: 'Contact us at least 48 hours in advance for bookings'\n      },\n      types: [{\n        type: String,\n        default: ['Private events', 'Meetings', 'Celebrations']\n      }]\n    },\n    wholesale: {\n      available: {\n        type: Boolean,\n        default: true\n      },\n      contact: {\n        type: String,\n        default: 'wholesale@dreamcoffee.vn'\n      },\n      description: {\n        type: String,\n        default: 'Coffee beans and catering services for businesses'\n      }\n    }\n  },\n\n  amenities: [{\n    type: String,\n    default: [\n      'Free WiFi',\n      'Air Conditioning',\n      'Outdoor Seating',\n      'Power Outlets',\n      'Free Parking (20 spots, including 2 accessible spaces)',\n      'Pet Friendly',\n      'Study Area',\n      'Meeting Rooms'\n    ]\n  }],\n\n  payment: {\n    methods: [{\n      type: String,\n      default: ['Cash', 'Credit Card', 'Debit Card', 'Mobile Payment', 'Bank Transfer']\n    }],\n    currency: {\n      type: String,\n      default: 'VND (Vietnamese Dong)'\n    }\n  },\n\n  policies: {\n    wifi: {\n      type: String,\n      default: 'Free high-speed WiFi for all customers'\n    },\n    parking: {\n      type: String,\n      default: 'Free parking available - 20 spots including 2 accessible spaces'\n    },\n    pets: {\n      type: String,\n      default: 'Pet-friendly environment'\n    },\n    smoking: {\n      type: String,\n      default: 'Non-smoking establishment'\n    },\n    reservations: {\n      type: String,\n      default: 'Walk-ins welcome, reservations recommended for groups of 6+'\n    }\n  },\n\n  responseTemplates: {\n    greeting: {\n      type: String,\n      default: 'Xin chào! Tôi là trợ lý AI của DREAM COFFEE. Tôi có thể giúp bạn tìm hiểu về menu, giờ mở cửa, địa chỉ và các dịch vụ của chúng tôi. Bạn cần hỗ trợ gì?'\n    },\n    fallback: {\n      type: String,\n      default: 'Xin lỗi, tôi không hiểu câu hỏi của bạn. Bạn có thể hỏi về menu, giờ mở cửa, địa chỉ, hoặc các dịch vụ của DREAM COFFEE không?'\n    },\n    contact: {\n      type: String,\n      default: 'Bạn có thể liên hệ với chúng tôi qua:\\n📞 Điện thoại: +84 28 1234 5678\\n📧 Email: info@dreamcoffee.vn\\n📍 Địa chỉ: 123 Đường Cà Phê, Quận 1, TP.HCM'\n    }\n  },\n\n  // This will be true for the main shop configuration\n  isActive: {\n    type: Boolean,\n    default: true\n  }\n}, {\n  timestamps: true\n});\n\n// Index for better performance\nshopSchema.index({ isActive: 1 });\n\n// Static method to get the active shop configuration\nshopSchema.statics.getActiveShop = async function() {\n  let shop = await this.findOne({ isActive: true });\n  \n  // If no shop exists, create default one\n  if (!shop) {\n    shop = new this({});\n    await shop.save();\n  }\n  \n  return shop;\n};\n\n// Instance method to check if currently open\nshopSchema.methods.isCurrentlyOpen = function() {\n  const now = new Date();\n  const currentHour = now.getHours();\n  const currentMinute = now.getMinutes();\n  const currentTime = currentHour * 60 + currentMinute;\n  \n  const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n  const hours = isWeekend ? this.hours.weekends : this.hours.weekdays;\n  \n  const [openHour, openMinute] = hours.open.split(':').map(Number);\n  const [closeHour, closeMinute] = hours.close.split(':').map(Number);\n  \n  const openTime = openHour * 60 + openMinute;\n  const closeTime = closeHour * 60 + closeMinute;\n  \n  return currentTime >= openTime && currentTime <= closeTime;\n};\n\nmodule.exports = mongoose.model('Shop', shopSchema);"],"mappings":"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","ignoreList":[]}},"mtime":1757007725785},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\contact.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst Contact = require('../models/Contact');\nconst {\n  protect,\n  authorize\n} = require('../middleware/auth');\n\n// @route   POST /api/contact\n// @desc    Submit contact form\n// @access  Public\nrouter.post('/', async (req, res) => {\n  try {\n    const {\n      name,\n      email,\n      subject,\n      message\n    } = req.body;\n\n    // Validate required fields\n    if (!name || !email || !subject || !message) {\n      return res.status(400).json({\n        success: false,\n        message: 'All fields are required'\n      });\n    }\n\n    // Create new contact message\n    const contact = new Contact({\n      name: name.trim(),\n      email: email.trim(),\n      subject: subject.trim(),\n      message: message.trim()\n    });\n    await contact.save();\n    res.status(201).json({\n      success: true,\n      message: 'Your message has been received',\n      data: {\n        ticketId: contact.ticketId,\n        expectedResponseTime: '24-48 hours'\n      }\n    });\n  } catch (error) {\n    console.error('Contact form submission error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error. Please try again later.'\n    });\n  }\n});\n\n// @route   GET /api/contact\n// @desc    Get all contact messages (Admin only)\n// @access  Private/Admin\nrouter.get('/', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const skip = (page - 1) * limit;\n\n    // Build query\n    let query = {};\n    if (status && ['new', 'read', 'replied', 'closed'].includes(status)) {\n      query.status = status;\n    }\n\n    // Get contacts with pagination\n    const contacts = await Contact.find(query).sort({\n      createdAt: -1\n    }).skip(skip).limit(limit);\n\n    // Get total count for pagination\n    const total = await Contact.countDocuments(query);\n    res.json({\n      success: true,\n      data: {\n        contacts,\n        pagination: {\n          current: page,\n          pages: Math.ceil(total / limit),\n          total,\n          limit\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Get contacts error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   GET /api/contact/:id\n// @desc    Get single contact message (Admin only)\n// @access  Private/Admin\nrouter.get('/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const contact = await Contact.findById(req.params.id);\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    // Mark as read if not already\n    if (!contact.isRead) {\n      contact.isRead = true;\n      contact.status = 'read';\n      await contact.save();\n    }\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Get contact error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   PUT /api/contact/:id/status\n// @desc    Update contact message status (Admin only)\n// @access  Private/Admin\nrouter.put('/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const {\n      status\n    } = req.body;\n    if (!['new', 'read', 'replied', 'closed'].includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid status'\n      });\n    }\n    const contact = await Contact.findById(req.params.id);\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n    contact.status = status;\n    if (status !== 'new') {\n      contact.isRead = true;\n    }\n    await contact.save();\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Update contact status error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   DELETE /api/contact/:id\n// @desc    Delete contact message (Admin only)\n// @access  Private/Admin\nrouter.delete('/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const contact = await Contact.findById(req.params.id);\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n    await Contact.findByIdAndDelete(req.params.id);\n    res.json({\n      success: true,\n      message: 'Contact message deleted successfully'\n    });\n  } catch (error) {\n    console.error('Delete contact error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","Contact","protect","authorize","post","req","res","name","email","subject","message","body","status","json","success","contact","trim","save","data","ticketId","expectedResponseTime","error","console","get","page","parseInt","query","limit","skip","includes","contacts","find","sort","createdAt","total","countDocuments","pagination","current","pages","Math","ceil","findById","params","id","isRead","put","delete","findByIdAndDelete","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["contact.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Contact = require('../models/Contact');\nconst { protect, authorize } = require('../middleware/auth');\n\n// @route   POST /api/contact\n// @desc    Submit contact form\n// @access  Public\nrouter.post('/', async (req, res) => {\n  try {\n    const { name, email, subject, message } = req.body;\n\n    // Validate required fields\n    if (!name || !email || !subject || !message) {\n      return res.status(400).json({\n        success: false,\n        message: 'All fields are required'\n      });\n    }\n\n    // Create new contact message\n    const contact = new Contact({\n      name: name.trim(),\n      email: email.trim(),\n      subject: subject.trim(),\n      message: message.trim()\n    });\n\n    await contact.save();\n\n    res.status(201).json({\n      success: true,\n      message: 'Your message has been received',\n      data: {\n        ticketId: contact.ticketId,\n        expectedResponseTime: '24-48 hours'\n      }\n    });\n  } catch (error) {\n    console.error('Contact form submission error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error. Please try again later.'\n    });\n  }\n});\n\n// @route   GET /api/contact\n// @desc    Get all contact messages (Admin only)\n// @access  Private/Admin\nrouter.get('/', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const skip = (page - 1) * limit;\n\n    // Build query\n    let query = {};\n    if (status && ['new', 'read', 'replied', 'closed'].includes(status)) {\n      query.status = status;\n    }\n\n    // Get contacts with pagination\n    const contacts = await Contact.find(query)\n      .sort({ createdAt: -1 })\n      .skip(skip)\n      .limit(limit);\n\n    // Get total count for pagination\n    const total = await Contact.countDocuments(query);\n\n    res.json({\n      success: true,\n      data: {\n        contacts,\n        pagination: {\n          current: page,\n          pages: Math.ceil(total / limit),\n          total,\n          limit\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Get contacts error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   GET /api/contact/:id\n// @desc    Get single contact message (Admin only)\n// @access  Private/Admin\nrouter.get('/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const contact = await Contact.findById(req.params.id);\n\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    // Mark as read if not already\n    if (!contact.isRead) {\n      contact.isRead = true;\n      contact.status = 'read';\n      await contact.save();\n    }\n\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Get contact error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   PUT /api/contact/:id/status\n// @desc    Update contact message status (Admin only)\n// @access  Private/Admin\nrouter.put('/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const { status } = req.body;\n\n    if (!['new', 'read', 'replied', 'closed'].includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid status'\n      });\n    }\n\n    const contact = await Contact.findById(req.params.id);\n\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    contact.status = status;\n    if (status !== 'new') {\n      contact.isRead = true;\n    }\n    await contact.save();\n\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Update contact status error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   DELETE /api/contact/:id\n// @desc    Delete contact message (Admin only)\n// @access  Private/Admin\nrouter.delete('/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const contact = await Contact.findById(req.params.id);\n\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    await Contact.findByIdAndDelete(req.params.id);\n\n    res.json({\n      success: true,\n      message: 'Contact message deleted successfully'\n    });\n  } catch (error) {\n    console.error('Delete contact error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757503867690},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\Contact.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const mongoose = require('mongoose');\nconst contactSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Name is required'],\n    trim: true,\n    maxlength: [100, 'Name cannot exceed 100 characters']\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    lowercase: true,\n    trim: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email']\n  },\n  subject: {\n    type: String,\n    required: [true, 'Subject is required'],\n    trim: true,\n    maxlength: [200, 'Subject cannot exceed 200 characters']\n  },\n  message: {\n    type: String,\n    required: [true, 'Message is required'],\n    trim: true,\n    maxlength: [2000, 'Message cannot exceed 2000 characters']\n  },\n  ticketId: {\n    type: String,\n    unique: true,\n    required: false // Auto-generated in pre-save hook\n  },\n  status: {\n    type: String,\n    enum: ['new', 'read', 'replied', 'closed'],\n    default: 'new'\n  },\n  isRead: {\n    type: Boolean,\n    default: false\n  }\n}, {\n  timestamps: true // Adds createdAt and updatedAt automatically\n});\n\n// Generate ticket ID before saving\ncontactSchema.pre('save', function (next) {\n  if (!this.ticketId) {\n    this.ticketId = 'WC-' + Math.random().toString(36).substr(2, 6).toUpperCase();\n  }\n  next();\n});\n\n// Index for faster queries\ncontactSchema.index({\n  createdAt: -1\n});\ncontactSchema.index({\n  status: 1\n});\ncontactSchema.index({\n  ticketId: 1\n});\nmodule.exports = mongoose.model('Contact', contactSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjb250YWN0U2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInRyaW0iLCJtYXhsZW5ndGgiLCJlbWFpbCIsImxvd2VyY2FzZSIsIm1hdGNoIiwic3ViamVjdCIsIm1lc3NhZ2UiLCJ0aWNrZXRJZCIsInVuaXF1ZSIsInN0YXR1cyIsImVudW0iLCJkZWZhdWx0IiwiaXNSZWFkIiwiQm9vbGVhbiIsInRpbWVzdGFtcHMiLCJwcmUiLCJuZXh0IiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwidG9VcHBlckNhc2UiLCJpbmRleCIsImNyZWF0ZWRBdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJzb3VyY2VSb290IjoiRDpcXGNvZGVcXFdlYkNhZmZlXFxiYWNrZW5kXFxzcmNcXG1vZGVsc1xcIiwic291cmNlcyI6WyJDb250YWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcblxuY29uc3QgY29udGFjdFNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBuYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ05hbWUgaXMgcmVxdWlyZWQnXSxcbiAgICB0cmltOiB0cnVlLFxuICAgIG1heGxlbmd0aDogWzEwMCwgJ05hbWUgY2Fubm90IGV4Y2VlZCAxMDAgY2hhcmFjdGVycyddXG4gIH0sXG4gIGVtYWlsOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ0VtYWlsIGlzIHJlcXVpcmVkJ10sXG4gICAgbG93ZXJjYXNlOiB0cnVlLFxuICAgIHRyaW06IHRydWUsXG4gICAgbWF0Y2g6IFsvXlxcdysoW1xcLi1dP1xcdyspKkBcXHcrKFtcXC4tXT9cXHcrKSooXFwuXFx3ezIsM30pKyQvLCAnUGxlYXNlIGVudGVyIGEgdmFsaWQgZW1haWwnXVxuICB9LFxuICBzdWJqZWN0OiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ1N1YmplY3QgaXMgcmVxdWlyZWQnXSxcbiAgICB0cmltOiB0cnVlLFxuICAgIG1heGxlbmd0aDogWzIwMCwgJ1N1YmplY3QgY2Fubm90IGV4Y2VlZCAyMDAgY2hhcmFjdGVycyddXG4gIH0sXG4gIG1lc3NhZ2U6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IFt0cnVlLCAnTWVzc2FnZSBpcyByZXF1aXJlZCddLFxuICAgIHRyaW06IHRydWUsXG4gICAgbWF4bGVuZ3RoOiBbMjAwMCwgJ01lc3NhZ2UgY2Fubm90IGV4Y2VlZCAyMDAwIGNoYXJhY3RlcnMnXVxuICB9LFxuICB0aWNrZXRJZDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICB1bmlxdWU6IHRydWUsXG4gICAgcmVxdWlyZWQ6IGZhbHNlIC8vIEF1dG8tZ2VuZXJhdGVkIGluIHByZS1zYXZlIGhvb2tcbiAgfSxcbiAgc3RhdHVzOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIGVudW06IFsnbmV3JywgJ3JlYWQnLCAncmVwbGllZCcsICdjbG9zZWQnXSxcbiAgICBkZWZhdWx0OiAnbmV3J1xuICB9LFxuICBpc1JlYWQ6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH1cbn0sIHtcbiAgdGltZXN0YW1wczogdHJ1ZSAvLyBBZGRzIGNyZWF0ZWRBdCBhbmQgdXBkYXRlZEF0IGF1dG9tYXRpY2FsbHlcbn0pO1xuXG4vLyBHZW5lcmF0ZSB0aWNrZXQgSUQgYmVmb3JlIHNhdmluZ1xuY29udGFjdFNjaGVtYS5wcmUoJ3NhdmUnLCBmdW5jdGlvbihuZXh0KSB7XG4gIGlmICghdGhpcy50aWNrZXRJZCkge1xuICAgIHRoaXMudGlja2V0SWQgPSAnV0MtJyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA2KS50b1VwcGVyQ2FzZSgpO1xuICB9XG4gIG5leHQoKTtcbn0pO1xuXG4vLyBJbmRleCBmb3IgZmFzdGVyIHF1ZXJpZXNcbmNvbnRhY3RTY2hlbWEuaW5kZXgoeyBjcmVhdGVkQXQ6IC0xIH0pO1xuY29udGFjdFNjaGVtYS5pbmRleCh7IHN0YXR1czogMSB9KTtcbmNvbnRhY3RTY2hlbWEuaW5kZXgoeyB0aWNrZXRJZDogMSB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnQ29udGFjdCcsIGNvbnRhY3RTY2hlbWEpOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBRXBDLE1BQU1DLGFBQWEsR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQU0sQ0FBQztFQUN4Q0MsSUFBSSxFQUFFO0lBQ0pDLElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsa0JBQWtCLENBQUM7SUFDcENDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLFNBQVMsRUFBRSxDQUFDLEdBQUcsRUFBRSxtQ0FBbUM7RUFDdEQsQ0FBQztFQUNEQyxLQUFLLEVBQUU7SUFDTEwsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSxtQkFBbUIsQ0FBQztJQUNyQ0ksU0FBUyxFQUFFLElBQUk7SUFDZkgsSUFBSSxFQUFFLElBQUk7SUFDVkksS0FBSyxFQUFFLENBQUMsK0NBQStDLEVBQUUsNEJBQTRCO0VBQ3ZGLENBQUM7RUFDREMsT0FBTyxFQUFFO0lBQ1BSLElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUscUJBQXFCLENBQUM7SUFDdkNDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLFNBQVMsRUFBRSxDQUFDLEdBQUcsRUFBRSxzQ0FBc0M7RUFDekQsQ0FBQztFQUNESyxPQUFPLEVBQUU7SUFDUFQsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSxxQkFBcUIsQ0FBQztJQUN2Q0MsSUFBSSxFQUFFLElBQUk7SUFDVkMsU0FBUyxFQUFFLENBQUMsSUFBSSxFQUFFLHVDQUF1QztFQUMzRCxDQUFDO0VBQ0RNLFFBQVEsRUFBRTtJQUNSVixJQUFJLEVBQUVDLE1BQU07SUFDWlUsTUFBTSxFQUFFLElBQUk7SUFDWlQsUUFBUSxFQUFFLEtBQUssQ0FBQztFQUNsQixDQUFDO0VBQ0RVLE1BQU0sRUFBRTtJQUNOWixJQUFJLEVBQUVDLE1BQU07SUFDWlksSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsUUFBUSxDQUFDO0lBQzFDQyxPQUFPLEVBQUU7RUFDWCxDQUFDO0VBQ0RDLE1BQU0sRUFBRTtJQUNOZixJQUFJLEVBQUVnQixPQUFPO0lBQ2JGLE9BQU8sRUFBRTtFQUNYO0FBQ0YsQ0FBQyxFQUFFO0VBQ0RHLFVBQVUsRUFBRSxJQUFJLENBQUM7QUFDbkIsQ0FBQyxDQUFDOztBQUVGO0FBQ0FwQixhQUFhLENBQUNxQixHQUFHLENBQUMsTUFBTSxFQUFFLFVBQVNDLElBQUksRUFBRTtFQUN2QyxJQUFJLENBQUMsSUFBSSxDQUFDVCxRQUFRLEVBQUU7SUFDbEIsSUFBSSxDQUFDQSxRQUFRLEdBQUcsS0FBSyxHQUFHVSxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUM7RUFDL0U7RUFDQUwsSUFBSSxDQUFDLENBQUM7QUFDUixDQUFDLENBQUM7O0FBRUY7QUFDQXRCLGFBQWEsQ0FBQzRCLEtBQUssQ0FBQztFQUFFQyxTQUFTLEVBQUUsQ0FBQztBQUFFLENBQUMsQ0FBQztBQUN0QzdCLGFBQWEsQ0FBQzRCLEtBQUssQ0FBQztFQUFFYixNQUFNLEVBQUU7QUFBRSxDQUFDLENBQUM7QUFDbENmLGFBQWEsQ0FBQzRCLEtBQUssQ0FBQztFQUFFZixRQUFRLEVBQUU7QUFBRSxDQUFDLENBQUM7QUFFcENpQixNQUFNLENBQUNDLE9BQU8sR0FBR2pDLFFBQVEsQ0FBQ2tDLEtBQUssQ0FBQyxTQUFTLEVBQUVoQyxhQUFhLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["mongoose","require","contactSchema","Schema","name","type","String","required","trim","maxlength","email","lowercase","match","subject","message","ticketId","unique","status","enum","default","isRead","Boolean","timestamps","pre","next","Math","random","toString","substr","toUpperCase","index","createdAt","module","exports","model"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\models\\","sources":["Contact.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst contactSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Name is required'],\n    trim: true,\n    maxlength: [100, 'Name cannot exceed 100 characters']\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    lowercase: true,\n    trim: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email']\n  },\n  subject: {\n    type: String,\n    required: [true, 'Subject is required'],\n    trim: true,\n    maxlength: [200, 'Subject cannot exceed 200 characters']\n  },\n  message: {\n    type: String,\n    required: [true, 'Message is required'],\n    trim: true,\n    maxlength: [2000, 'Message cannot exceed 2000 characters']\n  },\n  ticketId: {\n    type: String,\n    unique: true,\n    required: false // Auto-generated in pre-save hook\n  },\n  status: {\n    type: String,\n    enum: ['new', 'read', 'replied', 'closed'],\n    default: 'new'\n  },\n  isRead: {\n    type: Boolean,\n    default: false\n  }\n}, {\n  timestamps: true // Adds createdAt and updatedAt automatically\n});\n\n// Generate ticket ID before saving\ncontactSchema.pre('save', function(next) {\n  if (!this.ticketId) {\n    this.ticketId = 'WC-' + Math.random().toString(36).substr(2, 6).toUpperCase();\n  }\n  next();\n});\n\n// Index for faster queries\ncontactSchema.index({ createdAt: -1 });\ncontactSchema.index({ status: 1 });\ncontactSchema.index({ ticketId: 1 });\n\nmodule.exports = mongoose.model('Contact', contactSchema);"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,aAAa,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACxCC,IAAI,EAAE;IACJC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,CAAC,IAAI,EAAE,kBAAkB,CAAC;IACpCC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,CAAC,GAAG,EAAE,mCAAmC;EACtD,CAAC;EACDC,KAAK,EAAE;IACLL,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,CAAC,IAAI,EAAE,mBAAmB,CAAC;IACrCI,SAAS,EAAE,IAAI;IACfH,IAAI,EAAE,IAAI;IACVI,KAAK,EAAE,CAAC,+CAA+C,EAAE,4BAA4B;EACvF,CAAC;EACDC,OAAO,EAAE;IACPR,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,CAAC,IAAI,EAAE,qBAAqB,CAAC;IACvCC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,CAAC,GAAG,EAAE,sCAAsC;EACzD,CAAC;EACDK,OAAO,EAAE;IACPT,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,CAAC,IAAI,EAAE,qBAAqB,CAAC;IACvCC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,CAAC,IAAI,EAAE,uCAAuC;EAC3D,CAAC;EACDM,QAAQ,EAAE;IACRV,IAAI,EAAEC,MAAM;IACZU,MAAM,EAAE,IAAI;IACZT,QAAQ,EAAE,KAAK,CAAC;EAClB,CAAC;EACDU,MAAM,EAAE;IACNZ,IAAI,EAAEC,MAAM;IACZY,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC;IAC1CC,OAAO,EAAE;EACX,CAAC;EACDC,MAAM,EAAE;IACNf,IAAI,EAAEgB,OAAO;IACbF,OAAO,EAAE;EACX;AACF,CAAC,EAAE;EACDG,UAAU,EAAE,IAAI,CAAC;AACnB,CAAC,CAAC;;AAEF;AACApB,aAAa,CAACqB,GAAG,CAAC,MAAM,EAAE,UAASC,IAAI,EAAE;EACvC,IAAI,CAAC,IAAI,CAACT,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAG,KAAK,GAAGU,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC/E;EACAL,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACAtB,aAAa,CAAC4B,KAAK,CAAC;EAAEC,SAAS,EAAE,CAAC;AAAE,CAAC,CAAC;AACtC7B,aAAa,CAAC4B,KAAK,CAAC;EAAEb,MAAM,EAAE;AAAE,CAAC,CAAC;AAClCf,aAAa,CAAC4B,KAAK,CAAC;EAAEf,QAAQ,EAAE;AAAE,CAAC,CAAC;AAEpCiB,MAAM,CAACC,OAAO,GAAGjC,QAAQ,CAACkC,KAAK,CAAC,SAAS,EAAEhC,aAAa,CAAC","ignoreList":[]}},"mtime":1757504373425}}
=======
{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst cors = require('cors');\nconst mongoose = require('mongoose');\nconst path = require('path');\nrequire('dotenv').config();\n// Restart trigger\n\nconst app = express();\nconst PORT = process.env.PORT || 5002;\n\n// Middleware\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\n\n// Serve static files from uploads directory\napp.use('/uploads', express.static(path.join(__dirname, '../uploads')));\n\n// Database connection\nconst connectDB = async () => {\n  try {\n    console.log('Connecting to MongoDB...');\n    await mongoose.connect(process.env.MONGODB_URI);\n    console.log('MongoDB connected successfully - nodemon restart triggered');\n  } catch (error) {\n    console.error('MongoDB connection failed:', error.message);\n    console.log('\\n=== DATABASE SETUP REQUIRED ===');\n    console.log('MongoDB is not running or not installed.');\n    console.log('To set up MongoDB:');\n    console.log('1. Install MongoDB Community Server from: https://www.mongodb.com/try/download/community');\n    console.log('2. Start MongoDB service');\n    console.log('3. Restart this server');\n    console.log('\\nFor now, the server will continue without database connectivity.');\n    console.log('Some features may not work properly until MongoDB is set up.');\n    console.log('================================\\n');\n  }\n};\n\n// Routes\napp.get('/', (req, res) => {\n  res.json({\n    message: 'DREAM COFFEE API is running!'\n  });\n});\n\n// Import routes\napp.use('/api/products', require('./routes/products'));\napp.use('/api/auth', require('./routes/auth'));\napp.use('/api/orders', require('./routes/orders'));\napp.use('/api/payments', require('./routes/payments'));\napp.use('/api/upload', require('./routes/upload'));\napp.use('/api/admin', require('./routes/admin'));\napp.use('/api/shop', require('./routes/shop'));\napp.use('/api/contact', require('./routes/contact'));\n// app.use('/api/users', require('./routes/users'));\n\n// Error handling middleware\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({\n    message: 'Something went wrong!'\n  });\n});\n\n// 404 handler\napp.use('*', (req, res) => {\n  res.status(404).json({\n    message: 'Route not found'\n  });\n});\n\n// Start server\nconst startServer = async () => {\n  await connectDB();\n  app.listen(PORT, () => {\n    console.log(`Server is running on port ${PORT}`);\n    console.log(`API available at http://localhost:${PORT}`);\n  });\n};\nstartServer(); // restart with port 5002\n// trigger restart\n// Config updated\n// Port updated to 3002\n// Port updated to 3005\n// Port updated to 5000\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNvcnMiLCJtb25nb29zZSIsInBhdGgiLCJjb25maWciLCJhcHAiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJzdGF0aWMiLCJqb2luIiwiX19kaXJuYW1lIiwiY29ubmVjdERCIiwiY29uc29sZSIsImxvZyIsImNvbm5lY3QiLCJNT05HT0RCX1VSSSIsImVycm9yIiwibWVzc2FnZSIsImdldCIsInJlcSIsInJlcyIsImVyciIsIm5leHQiLCJzdGFjayIsInN0YXR1cyIsInN0YXJ0U2VydmVyIiwibGlzdGVuIl0sInNvdXJjZVJvb3QiOiJEOlxcY29kZVxcV2ViQ2FmZmVcXGJhY2tlbmRcXHNyY1xcIiwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcbi8vIFJlc3RhcnQgdHJpZ2dlclxuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA1MDAyO1xuXG4vLyBNaWRkbGV3YXJlXG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuXG4vLyBTZXJ2ZSBzdGF0aWMgZmlsZXMgZnJvbSB1cGxvYWRzIGRpcmVjdG9yeVxuYXBwLnVzZSgnL3VwbG9hZHMnLCBleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vdXBsb2FkcycpKSk7XG5cbi8vIERhdGFiYXNlIGNvbm5lY3Rpb25cbmNvbnN0IGNvbm5lY3REQiA9IGFzeW5jICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygnQ29ubmVjdGluZyB0byBNb25nb0RCLi4uJyk7XG4gICAgYXdhaXQgbW9uZ29vc2UuY29ubmVjdChwcm9jZXNzLmVudi5NT05HT0RCX1VSSSk7XG4gICAgY29uc29sZS5sb2coJ01vbmdvREIgY29ubmVjdGVkIHN1Y2Nlc3NmdWxseSAtIG5vZGVtb24gcmVzdGFydCB0cmlnZ2VyZWQnKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdNb25nb0RCIGNvbm5lY3Rpb24gZmFpbGVkOicsIGVycm9yLm1lc3NhZ2UpO1xuICAgIGNvbnNvbGUubG9nKCdcXG49PT0gREFUQUJBU0UgU0VUVVAgUkVRVUlSRUQgPT09Jyk7XG4gICAgY29uc29sZS5sb2coJ01vbmdvREIgaXMgbm90IHJ1bm5pbmcgb3Igbm90IGluc3RhbGxlZC4nKTtcbiAgICBjb25zb2xlLmxvZygnVG8gc2V0IHVwIE1vbmdvREI6Jyk7XG4gICAgY29uc29sZS5sb2coJzEuIEluc3RhbGwgTW9uZ29EQiBDb21tdW5pdHkgU2VydmVyIGZyb206IGh0dHBzOi8vd3d3Lm1vbmdvZGIuY29tL3RyeS9kb3dubG9hZC9jb21tdW5pdHknKTtcbiAgICBjb25zb2xlLmxvZygnMi4gU3RhcnQgTW9uZ29EQiBzZXJ2aWNlJyk7XG4gICAgY29uc29sZS5sb2coJzMuIFJlc3RhcnQgdGhpcyBzZXJ2ZXInKTtcbiAgICBjb25zb2xlLmxvZygnXFxuRm9yIG5vdywgdGhlIHNlcnZlciB3aWxsIGNvbnRpbnVlIHdpdGhvdXQgZGF0YWJhc2UgY29ubmVjdGl2aXR5LicpO1xuICAgIGNvbnNvbGUubG9nKCdTb21lIGZlYXR1cmVzIG1heSBub3Qgd29yayBwcm9wZXJseSB1bnRpbCBNb25nb0RCIGlzIHNldCB1cC4nKTtcbiAgICBjb25zb2xlLmxvZygnPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cXG4nKTtcbiAgfVxufTtcblxuLy8gUm91dGVzXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5qc29uKHsgbWVzc2FnZTogJ0RSRUFNIENPRkZFRSBBUEkgaXMgcnVubmluZyEnIH0pO1xufSk7XG5cbi8vIEltcG9ydCByb3V0ZXNcbmFwcC51c2UoJy9hcGkvcHJvZHVjdHMnLCByZXF1aXJlKCcuL3JvdXRlcy9wcm9kdWN0cycpKTtcbmFwcC51c2UoJy9hcGkvYXV0aCcsIHJlcXVpcmUoJy4vcm91dGVzL2F1dGgnKSk7XG5hcHAudXNlKCcvYXBpL29yZGVycycsIHJlcXVpcmUoJy4vcm91dGVzL29yZGVycycpKTtcbmFwcC51c2UoJy9hcGkvcGF5bWVudHMnLCByZXF1aXJlKCcuL3JvdXRlcy9wYXltZW50cycpKTtcbmFwcC51c2UoJy9hcGkvdXBsb2FkJywgcmVxdWlyZSgnLi9yb3V0ZXMvdXBsb2FkJykpO1xuYXBwLnVzZSgnL2FwaS9hZG1pbicsIHJlcXVpcmUoJy4vcm91dGVzL2FkbWluJykpO1xuYXBwLnVzZSgnL2FwaS9zaG9wJywgcmVxdWlyZSgnLi9yb3V0ZXMvc2hvcCcpKTtcbmFwcC51c2UoJy9hcGkvY29udGFjdCcsIHJlcXVpcmUoJy4vcm91dGVzL2NvbnRhY3QnKSk7XG4vLyBhcHAudXNlKCcvYXBpL3VzZXJzJywgcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcnMnKSk7XG5cbi8vIEVycm9yIGhhbmRsaW5nIG1pZGRsZXdhcmVcbmFwcC51c2UoKGVyciwgcmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc29sZS5lcnJvcihlcnIuc3RhY2spO1xuICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICdTb21ldGhpbmcgd2VudCB3cm9uZyEnIH0pO1xufSk7XG5cbi8vIDQwNCBoYW5kbGVyXG5hcHAudXNlKCcqJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgbWVzc2FnZTogJ1JvdXRlIG5vdCBmb3VuZCcgfSk7XG59KTtcblxuLy8gU3RhcnQgc2VydmVyXG5jb25zdCBzdGFydFNlcnZlciA9IGFzeW5jICgpID0+IHtcbiAgYXdhaXQgY29ubmVjdERCKCk7XG4gIGFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaXMgcnVubmluZyBvbiBwb3J0ICR7UE9SVH1gKTtcbiAgICBjb25zb2xlLmxvZyhgQVBJIGF2YWlsYWJsZSBhdCBodHRwOi8vbG9jYWxob3N0OiR7UE9SVH1gKTtcbiAgfSk7XG59O1xuXG5zdGFydFNlcnZlcigpOy8vIHJlc3RhcnQgd2l0aCBwb3J0IDUwMDJcbi8vIHRyaWdnZXIgcmVzdGFydFxuLy8gQ29uZmlnIHVwZGF0ZWRcbi8vIFBvcnQgdXBkYXRlZCB0byAzMDAyXG4vLyBQb3J0IHVwZGF0ZWQgdG8gMzAwNVxuLy8gUG9ydCB1cGRhdGVkIHRvIDUwMDBcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUM1QixNQUFNRSxRQUFRLEdBQUdGLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFDcEMsTUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzVCQSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUNJLE1BQU0sQ0FBQyxDQUFDO0FBQzFCOztBQUVBLE1BQU1DLEdBQUcsR0FBR04sT0FBTyxDQUFDLENBQUM7QUFDckIsTUFBTU8sSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0YsSUFBSSxJQUFJLElBQUk7O0FBRXJDO0FBQ0FELEdBQUcsQ0FBQ0ksR0FBRyxDQUFDUixJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ2ZJLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDVixPQUFPLENBQUNXLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDdkJMLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDVixPQUFPLENBQUNZLFVBQVUsQ0FBQztFQUFFQyxRQUFR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","map":{"version":3,"names":["express","require","cors","mongoose","path","config","app","PORT","process","env","use","json","urlencoded","extended","static","join","__dirname","connectDB","console","log","connect","MONGODB_URI","error","message","get","req","res","err","next","stack","status","startServer","listen"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\","sources":["index.js"],"sourcesContent":["const express = require('express');\nconst cors = require('cors');\nconst mongoose = require('mongoose');\nconst path = require('path');\nrequire('dotenv').config();\n// Restart trigger\n\nconst app = express();\nconst PORT = process.env.PORT || 5002;\n\n// Middleware\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// Serve static files from uploads directory\napp.use('/uploads', express.static(path.join(__dirname, '../uploads')));\n\n// Database connection\nconst connectDB = async () => {\n  try {\n    console.log('Connecting to MongoDB...');\n    await mongoose.connect(process.env.MONGODB_URI);\n    console.log('MongoDB connected successfully - nodemon restart triggered');\n  } catch (error) {\n    console.error('MongoDB connection failed:', error.message);\n    console.log('\\n=== DATABASE SETUP REQUIRED ===');\n    console.log('MongoDB is not running or not installed.');\n    console.log('To set up MongoDB:');\n    console.log('1. Install MongoDB Community Server from: https://www.mongodb.com/try/download/community');\n    console.log('2. Start MongoDB service');\n    console.log('3. Restart this server');\n    console.log('\\nFor now, the server will continue without database connectivity.');\n    console.log('Some features may not work properly until MongoDB is set up.');\n    console.log('================================\\n');\n  }\n};\n\n// Routes\napp.get('/', (req, res) => {\n  res.json({ message: 'DREAM COFFEE API is running!' });\n});\n\n// Import routes\napp.use('/api/products', require('./routes/products'));\napp.use('/api/auth', require('./routes/auth'));\napp.use('/api/orders', require('./routes/orders'));\napp.use('/api/payments', require('./routes/payments'));\napp.use('/api/upload', require('./routes/upload'));\napp.use('/api/admin', require('./routes/admin'));\napp.use('/api/shop', require('./routes/shop'));\napp.use('/api/contact', require('./routes/contact'));\n// app.use('/api/users', require('./routes/users'));\n\n// Error handling middleware\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({ message: 'Something went wrong!' });\n});\n\n// 404 handler\napp.use('*', (req, res) => {\n  res.status(404).json({ message: 'Route not found' });\n});\n\n// Start server\nconst startServer = async () => {\n  await connectDB();\n  app.listen(PORT, () => {\n    console.log(`Server is running on port ${PORT}`);\n    console.log(`API available at http://localhost:${PORT}`);\n  });\n};\n\nstartServer();// restart with port 5002\n// trigger restart\n// Config updated\n// Port updated to 3002\n// Port updated to 3005\n// Port updated to 5000\n"],"mappings":"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","ignoreList":[]}},"mtime":1757571731047},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\products.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst Product = require('../models/Product');\nconst router = express.Router();\n\n// Sample products data for seeding (will be moved to database)\n// Products are now stored in MongoDB\n// Use the seedProducts.js script to populate the database with sample data\n\n// @route   GET /api/products\n// @desc    Get all products with optional filtering\n// @access  Public\nrouter.get('/', async (req, res) => {\n  try {\n    const {\n      category,\n      featured,\n      search,\n      page = 1,\n      limit = 10,\n      includeOutOfStock\n    } = req.query;\n\n    // Build query object\n    let query = {};\n\n    // Only filter by inStock if includeOutOfStock is not set to 'true'\n    if (includeOutOfStock !== 'true') {\n      query.inStock = true;\n    }\n    if (category) {\n      query.category = new RegExp(category, 'i');\n    }\n    if (featured === 'true') {\n      query.featured = true;\n    }\n    if (search) {\n      query.$or = [{\n        name: new RegExp(search, 'i')\n      }, {\n        description: new RegExp(search, 'i')\n      }];\n    }\n\n    // Calculate pagination\n    const pageNum = parseInt(page);\n    const limitNum = parseInt(limit);\n    const skip = (pageNum - 1) * limitNum;\n\n    // Execute queries\n    const [products, total] = await Promise.all([Product.find(query).skip(skip).limit(limitNum).sort({\n      createdAt: -1\n    }), Product.countDocuments(query)]);\n    res.json({\n      success: true,\n      data: products,\n      pagination: {\n        current: pageNum,\n        pages: Math.ceil(total / limitNum),\n        total: total\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching products'\n    });\n  }\n});\n\n// @route   GET /api/products/categories\n// @desc    Get all product categories\n// @access  Public\nrouter.get('/categories', async (req, res) => {\n  try {\n    // Return the enum categories from the schema instead of existing data\n    const categories = ['Cà phê', 'Thức uống đậm vị', 'Đồ uống tươi mát', 'Bánh ngọt'];\n    res.json({\n      success: true,\n      data: categories\n    });\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching categories'\n    });\n  }\n});\n\n// @route   GET /api/products/featured\n// @desc    Get featured products\n// @access  Public\nrouter.get('/featured', async (req, res) => {\n  try {\n    const featuredProducts = await Product.find({\n      featured: true,\n      inStock: true\n    });\n    res.json({\n      success: true,\n      data: featuredProducts\n    });\n  } catch (error) {\n    console.error('Error fetching featured products:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching featured products'\n    });\n  }\n});\n\n// @route   GET /api/products/bestsellers\n// @desc    Get best selling products\n// @access  Public\nrouter.get('/bestsellers', async (req, res) => {\n  try {\n    const Order = require('../models/Order');\n\n    // Get top selling products from order data\n    const bestSellers = await Order.aggregate([{\n      $unwind: '$items'\n    }, {\n      $group: {\n        _id: '$items.product',\n        name: {\n          $first: '$items.name'\n        },\n        totalSold: {\n          $sum: '$items.quantity'\n        },\n        totalRevenue: {\n          $sum: {\n            $multiply: ['$items.price', '$items.quantity']\n          }\n        }\n      }\n    }, {\n      $sort: {\n        totalSold: -1\n      }\n    }, {\n      $limit: 6\n    }]);\n\n    // Get full product details for best sellers\n    const productIds = bestSellers.map(item => item._id).filter(id => id);\n    const products = await Product.find({\n      _id: {\n        $in: productIds\n      },\n      inStock: true\n    });\n\n    // Merge sales data with product details\n    const bestSellerProducts = products.map(product => {\n      const salesData = bestSellers.find(item => item._id && item._id.toString() === product._id.toString());\n      return {\n        ...product.toObject(),\n        totalSold: salesData ? salesData.totalSold : 0\n      };\n    });\n\n    // Sort by total sold and limit to 6\n    bestSellerProducts.sort((a, b) => b.totalSold - a.totalSold);\n    res.json({\n      success: true,\n      data: bestSellerProducts.slice(0, 6)\n    });\n  } catch (error) {\n    console.error('Error fetching best sellers:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching best sellers'\n    });\n  }\n});\n\n// @route   GET /api/products/:id\n// @desc    Get single product\n// @access  Public\nrouter.get('/:id', async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: product\n    });\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching product'\n    });\n  }\n});\n\n// @route   POST /api/products\n// @desc    Create new product\n// @access  Private/Admin\nrouter.post('/', async (req, res) => {\n  try {\n    const {\n      name,\n      category,\n      description,\n      price,\n      image,\n      imageUrl,\n      imagePublicId,\n      featured,\n      sizes\n    } = req.body;\n    const productData = {\n      name,\n      category,\n      description,\n      price: parseFloat(price),\n      image,\n      imageUrl,\n      imagePublicId,\n      featured: featured || false,\n      inStock: true,\n      sizes: sizes || [{\n        name: 'Regular',\n        price: parseFloat(price)\n      }]\n    };\n    const newProduct = await Product.create(productData);\n    res.status(201).json({\n      success: true,\n      data: newProduct\n    });\n  } catch (error) {\n    console.error('Error creating product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating product'\n    });\n  }\n});\n\n// @route   PUT /api/products/:id\n// @desc    Update product\n// @access  Private/Admin\nrouter.put('/:id', async (req, res) => {\n  try {\n    const {\n      name,\n      category,\n      description,\n      price,\n      image,\n      imageUrl,\n      imagePublicId,\n      featured,\n      inStock,\n      sizes\n    } = req.body;\n\n    // Get the existing product to check for old image\n    const existingProduct = await Product.findById(req.params.id);\n    if (!existingProduct) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n\n    // If updating with a new Cloudinary image, delete the old one\n    if (imagePublicId && existingProduct.imagePublicId && existingProduct.imagePublicId !== imagePublicId) {\n      try {\n        const {\n          deleteFromCloudinary\n        } = require('../config/cloudinary');\n        await deleteFromCloudinary(existingProduct.imagePublicId);\n      } catch (cloudinaryError) {\n        console.error('Error deleting old image from Cloudinary:', cloudinaryError);\n        // Continue with update even if Cloudinary deletion fails\n      }\n    }\n    const updateData = {};\n    if (name !== undefined) updateData.name = name;\n    if (category !== undefined) updateData.category = category;\n    if (description !== undefined) updateData.description = description;\n    if (price !== undefined) updateData.price = parseFloat(price);\n    if (image !== undefined) updateData.image = image;\n    if (imageUrl !== undefined) updateData.imageUrl = imageUrl;\n    if (imagePublicId !== undefined) updateData.imagePublicId = imagePublicId;\n    if (featured !== undefined) updateData.featured = featured;\n    if (inStock !== undefined) updateData.inStock = inStock;\n    if (sizes !== undefined) updateData.sizes = sizes;\n    const updatedProduct = await Product.findByIdAndUpdate(req.params.id, updateData, {\n      new: true,\n      runValidators: true\n    });\n    res.json({\n      success: true,\n      data: updatedProduct\n    });\n  } catch (error) {\n    console.error('Error updating product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating product'\n    });\n  }\n});\n\n// @route   DELETE /api/products/:id\n// @desc    Delete product\n// @access  Private/Admin\nrouter.delete('/:id', async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n\n    // Delete image from Cloudinary if it exists\n    if (product.imagePublicId) {\n      try {\n        const {\n          deleteFromCloudinary\n        } = require('../config/cloudinary');\n        await deleteFromCloudinary(product.imagePublicId);\n      } catch (cloudinaryError) {\n        console.error('Error deleting image from Cloudinary:', cloudinaryError);\n        // Continue with product deletion even if Cloudinary deletion fails\n      }\n    }\n    const deletedProduct = await Product.findByIdAndDelete(req.params.id);\n    res.json({\n      success: true,\n      data: deletedProduct,\n      message: 'Product deleted successfully'\n    });\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while deleting product'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","Product","router","Router","get","req","res","category","featured","search","page","limit","includeOutOfStock","query","inStock","RegExp","$or","name","description","pageNum","parseInt","limitNum","skip","products","total","Promise","all","find","sort","createdAt","countDocuments","json","success","data","pagination","current","pages","Math","ceil","error","console","status","message","categories","featuredProducts","Order","bestSellers","aggregate","$unwind","$group","_id","$first","totalSold","$sum","totalRevenue","$multiply","$sort","$limit","productIds","map","item","filter","id","$in","bestSellerProducts","product","salesData","toString","toObject","a","b","slice","findById","params","post","price","image","imageUrl","imagePublicId","sizes","body","productData","parseFloat","newProduct","create","put","existingProduct","deleteFromCloudinary","cloudinaryError","updateData","undefined","updatedProduct","findByIdAndUpdate","new","runValidators","delete","deletedProduct","findByIdAndDelete","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["products.js"],"sourcesContent":["const express = require('express');\nconst Product = require('../models/Product');\nconst router = express.Router();\n\n// Sample products data for seeding (will be moved to database)\n// Products are now stored in MongoDB\n// Use the seedProducts.js script to populate the database with sample data\n\n// @route   GET /api/products\n// @desc    Get all products with optional filtering\n// @access  Public\nrouter.get('/', async (req, res) => {\n  try {\n    const { category, featured, search, page = 1, limit = 10, includeOutOfStock } = req.query;\n    \n    // Build query object\n    let query = {};\n    \n    // Only filter by inStock if includeOutOfStock is not set to 'true'\n    if (includeOutOfStock !== 'true') {\n      query.inStock = true;\n    }\n    \n    if (category) {\n      query.category = new RegExp(category, 'i');\n    }\n    \n    if (featured === 'true') {\n      query.featured = true;\n    }\n    \n    if (search) {\n      query.$or = [\n        { name: new RegExp(search, 'i') },\n        { description: new RegExp(search, 'i') }\n      ];\n    }\n    \n    // Calculate pagination\n    const pageNum = parseInt(page);\n    const limitNum = parseInt(limit);\n    const skip = (pageNum - 1) * limitNum;\n    \n    // Execute queries\n    const [products, total] = await Promise.all([\n      Product.find(query)\n        .skip(skip)\n        .limit(limitNum)\n        .sort({ createdAt: -1 }),\n      Product.countDocuments(query)\n    ]);\n    \n    res.json({\n      success: true,\n      data: products,\n      pagination: {\n        current: pageNum,\n        pages: Math.ceil(total / limitNum),\n        total: total\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching products'\n    });\n  }\n});\n\n// @route   GET /api/products/categories\n// @desc    Get all product categories\n// @access  Public\nrouter.get('/categories', async (req, res) => {\n  try {\n    // Return the enum categories from the schema instead of existing data\n    const categories = ['Cà phê', 'Thức uống đậm vị', 'Đồ uống tươi mát', 'Bánh ngọt'];\n    \n    res.json({\n      success: true,\n      data: categories\n    });\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching categories'\n    });\n  }\n});\n\n// @route   GET /api/products/featured\n// @desc    Get featured products\n// @access  Public\nrouter.get('/featured', async (req, res) => {\n  try {\n    const featuredProducts = await Product.find({ featured: true, inStock: true });\n    \n    res.json({\n      success: true,\n      data: featuredProducts\n    });\n  } catch (error) {\n    console.error('Error fetching featured products:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching featured products'\n    });\n  }\n});\n\n// @route   GET /api/products/bestsellers\n// @desc    Get best selling products\n// @access  Public\nrouter.get('/bestsellers', async (req, res) => {\n  try {\n    const Order = require('../models/Order');\n    \n    // Get top selling products from order data\n    const bestSellers = await Order.aggregate([\n      { $unwind: '$items' },\n      {\n        $group: {\n          _id: '$items.product',\n          name: { $first: '$items.name' },\n          totalSold: { $sum: '$items.quantity' },\n          totalRevenue: { $sum: { $multiply: ['$items.price', '$items.quantity'] } }\n        }\n      },\n      { $sort: { totalSold: -1 } },\n      { $limit: 6 }\n    ]);\n    \n    // Get full product details for best sellers\n    const productIds = bestSellers.map(item => item._id).filter(id => id);\n    const products = await Product.find({ \n      _id: { $in: productIds }, \n      inStock: true \n    });\n    \n    // Merge sales data with product details\n    const bestSellerProducts = products.map(product => {\n      const salesData = bestSellers.find(item => \n        item._id && item._id.toString() === product._id.toString()\n      );\n      return {\n        ...product.toObject(),\n        totalSold: salesData ? salesData.totalSold : 0\n      };\n    });\n    \n    // Sort by total sold and limit to 6\n    bestSellerProducts.sort((a, b) => b.totalSold - a.totalSold);\n    \n    res.json({\n      success: true,\n      data: bestSellerProducts.slice(0, 6)\n    });\n  } catch (error) {\n    console.error('Error fetching best sellers:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching best sellers'\n    });\n  }\n});\n\n// @route   GET /api/products/:id\n// @desc    Get single product\n// @access  Public\nrouter.get('/:id', async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    \n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: product\n    });\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching product'\n    });\n  }\n});\n\n// @route   POST /api/products\n// @desc    Create new product\n// @access  Private/Admin\nrouter.post('/', async (req, res) => {\n  try {\n    const { name, category, description, price, image, imageUrl, imagePublicId, featured, sizes } = req.body;\n    \n    const productData = {\n      name,\n      category,\n      description,\n      price: parseFloat(price),\n      image,\n      imageUrl,\n      imagePublicId,\n      featured: featured || false,\n      inStock: true,\n      sizes: sizes || [{ name: 'Regular', price: parseFloat(price) }]\n    };\n    \n    const newProduct = await Product.create(productData);\n    \n    res.status(201).json({\n      success: true,\n      data: newProduct\n    });\n  } catch (error) {\n    console.error('Error creating product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating product'\n    });\n  }\n});\n\n// @route   PUT /api/products/:id\n// @desc    Update product\n// @access  Private/Admin\nrouter.put('/:id', async (req, res) => {\n  try {\n    const { name, category, description, price, image, imageUrl, imagePublicId, featured, inStock, sizes } = req.body;\n    \n    // Get the existing product to check for old image\n    const existingProduct = await Product.findById(req.params.id);\n    if (!existingProduct) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n    \n    // If updating with a new Cloudinary image, delete the old one\n    if (imagePublicId && existingProduct.imagePublicId && existingProduct.imagePublicId !== imagePublicId) {\n      try {\n        const { deleteFromCloudinary } = require('../config/cloudinary');\n        await deleteFromCloudinary(existingProduct.imagePublicId);\n      } catch (cloudinaryError) {\n        console.error('Error deleting old image from Cloudinary:', cloudinaryError);\n        // Continue with update even if Cloudinary deletion fails\n      }\n    }\n    \n    const updateData = {};\n    if (name !== undefined) updateData.name = name;\n    if (category !== undefined) updateData.category = category;\n    if (description !== undefined) updateData.description = description;\n    if (price !== undefined) updateData.price = parseFloat(price);\n    if (image !== undefined) updateData.image = image;\n    if (imageUrl !== undefined) updateData.imageUrl = imageUrl;\n    if (imagePublicId !== undefined) updateData.imagePublicId = imagePublicId;\n    if (featured !== undefined) updateData.featured = featured;\n    if (inStock !== undefined) updateData.inStock = inStock;\n    if (sizes !== undefined) updateData.sizes = sizes;\n    \n    const updatedProduct = await Product.findByIdAndUpdate(\n      req.params.id,\n      updateData,\n      { new: true, runValidators: true }\n    );\n    \n\n    \n    res.json({\n      success: true,\n      data: updatedProduct\n    });\n  } catch (error) {\n    console.error('Error updating product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating product'\n    });\n  }\n});\n\n// @route   DELETE /api/products/:id\n// @desc    Delete product\n// @access  Private/Admin\nrouter.delete('/:id', async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    \n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n    \n    // Delete image from Cloudinary if it exists\n    if (product.imagePublicId) {\n      try {\n        const { deleteFromCloudinary } = require('../config/cloudinary');\n        await deleteFromCloudinary(product.imagePublicId);\n      } catch (cloudinaryError) {\n        console.error('Error deleting image from Cloudinary:', cloudinaryError);\n        // Continue with product deletion even if Cloudinary deletion fails\n      }\n    }\n    \n    const deletedProduct = await Product.findByIdAndDelete(req.params.id);\n    \n    res.json({\n      success: true,\n      data: deletedProduct,\n      message: 'Product deleted successfully'\n    });\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while deleting product'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757524331863},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\Product.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const mongoose = require('mongoose');\nconst productSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Product name is required'],\n    trim: true,\n    maxlength: [100, 'Product name cannot exceed 100 characters']\n  },\n  description: {\n    type: String,\n    required: [true, 'Product description is required'],\n    maxlength: [500, 'Description cannot exceed 500 characters']\n  },\n  price: {\n    type: Number,\n    required: [true, 'Product price is required'],\n    min: [0, 'Price cannot be negative']\n  },\n  category: {\n    type: String,\n    required: [true, 'Product category is required'],\n    enum: ['Cà phê', 'Thức uống đậm vị', 'Đồ uống tươi mát', 'Bánh ngọt'],\n    trim: true\n  },\n  image: {\n    type: String,\n    default: '/images/default-product.jpg'\n  },\n  imageUrl: {\n    type: String,\n    default: null\n  },\n  imagePublicId: {\n    type: String,\n    default: null\n  },\n  inStock: {\n    type: Boolean,\n    default: true\n  },\n  featured: {\n    type: Boolean,\n    default: false\n  },\n  ingredients: [{\n    type: String,\n    trim: true\n  }],\n  nutritionalInfo: {\n    calories: {\n      type: Number,\n      min: 0\n    },\n    protein: {\n      type: Number,\n      min: 0\n    },\n    carbs: {\n      type: Number,\n      min: 0\n    },\n    fat: {\n      type: Number,\n      min: 0\n    }\n  },\n  sizes: [{\n    name: {\n      type: String,\n      required: true\n    },\n    // Small, Medium, Large\n    price: {\n      type: Number,\n      required: true,\n      min: 0\n    },\n    available: {\n      type: Boolean,\n      default: true\n    }\n  }]\n}, {\n  timestamps: true\n});\n\n// Index for better search performance\nproductSchema.index({\n  name: 'text',\n  description: 'text'\n});\nproductSchema.index({\n  category: 1\n});\nproductSchema.index({\n  featured: 1\n});\nproductSchema.index({\n  inStock: 1\n});\nmodule.exports = mongoose.model('Product', productSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJwcm9kdWN0U2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInRyaW0iLCJtYXhsZW5ndGgiLCJkZXNjcmlwdGlvbiIsInByaWNlIiwiTnVtYmVyIiwibWluIiwiY2F0ZWdvcnkiLCJlbnVtIiwiaW1hZ2UiLCJkZWZhdWx0IiwiaW1hZ2VVcmwiLCJpbWFnZVB1YmxpY0lkIiwiaW5TdG9jayIsIkJvb2xlYW4iLCJmZWF0dXJlZCIsImluZ3JlZGllbnRzIiwibnV0cml0aW9uYWxJbmZvIiwiY2Fsb3JpZXMiLCJwcm90ZWluIiwiY2FyYnMiLCJmYXQiLCJzaXplcyIsImF2YWlsYWJsZSIsInRpbWVzdGFtcHMiLCJpbmRleCIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJzb3VyY2VSb290IjoiRDpcXGNvZGVcXFdlYkNhZmZlXFxiYWNrZW5kXFxzcmNcXG1vZGVsc1xcIiwic291cmNlcyI6WyJQcm9kdWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcblxuY29uc3QgcHJvZHVjdFNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBuYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ1Byb2R1Y3QgbmFtZSBpcyByZXF1aXJlZCddLFxuICAgIHRyaW06IHRydWUsXG4gICAgbWF4bGVuZ3RoOiBbMTAwLCAnUHJvZHVjdCBuYW1lIGNhbm5vdCBleGNlZWQgMTAwIGNoYXJhY3RlcnMnXVxuICB9LFxuICBkZXNjcmlwdGlvbjoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogW3RydWUsICdQcm9kdWN0IGRlc2NyaXB0aW9uIGlzIHJlcXVpcmVkJ10sXG4gICAgbWF4bGVuZ3RoOiBbNTAwLCAnRGVzY3JpcHRpb24gY2Fubm90IGV4Y2VlZCA1MDAgY2hhcmFjdGVycyddXG4gIH0sXG4gIHByaWNlOiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ1Byb2R1Y3QgcHJpY2UgaXMgcmVxdWlyZWQnXSxcbiAgICBtaW46IFswLCAnUHJpY2UgY2Fubm90IGJlIG5lZ2F0aXZlJ11cbiAgfSxcbiAgY2F0ZWdvcnk6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IFt0cnVlLCAnUHJvZHVjdCBjYXRlZ29yeSBpcyByZXF1aXJlZCddLFxuICAgIGVudW06IFsnQ8OgIHBow6onLCAnVGjhu6ljIHXhu5FuZyDEkeG6rW0gduG7iycsICfEkOG7kyB14buRbmcgdMawxqFpIG3DoXQnLCAnQsOhbmggbmfhu410J10sXG4gICAgdHJpbTogdHJ1ZVxuICB9LFxuICBpbWFnZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBkZWZhdWx0OiAnL2ltYWdlcy9kZWZhdWx0LXByb2R1Y3QuanBnJ1xuICB9LFxuICBpbWFnZVVybDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBkZWZhdWx0OiBudWxsXG4gIH0sXG4gIGltYWdlUHVibGljSWQ6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgZGVmYXVsdDogbnVsbFxuICB9LFxuICBpblN0b2NrOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiB0cnVlXG4gIH0sXG4gIGZlYXR1cmVkOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9LFxuICBpbmdyZWRpZW50czogW3tcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgdHJpbTogdHJ1ZVxuICB9XSxcbiAgbnV0cml0aW9uYWxJbmZvOiB7XG4gICAgY2Fsb3JpZXM6IHsgdHlwZTogTnVtYmVyLCBtaW46IDAgfSxcbiAgICBwcm90ZWluOiB7IHR5cGU6IE51bWJlciwgbWluOiAwIH0sXG4gICAgY2FyYnM6IHsgdHlwZTogTnVtYmVyLCBtaW46IDAgfSxcbiAgICBmYXQ6IHsgdHlwZTogTnVtYmVyLCBtaW46IDAgfVxuICB9LFxuICBzaXplczogW3tcbiAgICBuYW1lOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSwgLy8gU21hbGwsIE1lZGl1bSwgTGFyZ2VcbiAgICBwcmljZTogeyB0eXBlOiBOdW1iZXIsIHJlcXVpcmVkOiB0cnVlLCBtaW46IDAgfSxcbiAgICBhdmFpbGFibGU6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogdHJ1ZSB9XG4gIH1dXG59LCB7XG4gIHRpbWVzdGFtcHM6IHRydWVcbn0pO1xuXG4vLyBJbmRleCBmb3IgYmV0dGVyIHNlYXJjaCBwZXJmb3JtYW5jZVxucHJvZHVjdFNjaGVtYS5pbmRleCh7IG5hbWU6ICd0ZXh0JywgZGVzY3JpcHRpb246ICd0ZXh0JyB9KTtcbnByb2R1Y3RTY2hlbWEuaW5kZXgoeyBjYXRlZ29yeTogMSB9KTtcbnByb2R1Y3RTY2hlbWEuaW5kZXgoeyBmZWF0dXJlZDogMSB9KTtcbnByb2R1Y3RTY2hlbWEuaW5kZXgoeyBpblN0b2NrOiAxIH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdQcm9kdWN0JywgcHJvZHVjdFNjaGVtYSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFFcEMsTUFBTUMsYUFBYSxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBTSxDQUFDO0VBQ3hDQyxJQUFJLEVBQUU7SUFDSkMsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSwwQkFBMEIsQ0FBQztJQUM1Q0MsSUFBSSxFQUFFLElBQUk7SUFDVkMsU0FBUyxFQUFFLENBQUMsR0FBRyxFQUFFLDJDQUEyQztFQUM5RCxDQUFDO0VBQ0RDLFdBQVcsRUFBRTtJQUNYTCxJQUFJLEVBQUVDLE1BQU07SUFDWkMsUUFBUSxFQUFFLENBQUMsSUFBSSxFQUFFLGlDQUFpQyxDQUFDO0lBQ25ERSxTQUFTLEVBQUUsQ0FBQyxHQUFHLEVBQUUsMENBQTBD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","map":{"version":3,"names":["mongoose","require","productSchema","Schema","name","type","String","required","trim","maxlength","description","price","Number","min","category","enum","image","default","imageUrl","imagePublicId","inStock","Boolean","featured","ingredients","nutritionalInfo","calories","protein","carbs","fat","sizes","available","timestamps","index","module","exports","model"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\models\\","sources":["Product.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst productSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Product name is required'],\n    trim: true,\n    maxlength: [100, 'Product name cannot exceed 100 characters']\n  },\n  description: {\n    type: String,\n    required: [true, 'Product description is required'],\n    maxlength: [500, 'Description cannot exceed 500 characters']\n  },\n  price: {\n    type: Number,\n    required: [true, 'Product price is required'],\n    min: [0, 'Price cannot be negative']\n  },\n  category: {\n    type: String,\n    required: [true, 'Product category is required'],\n    enum: ['Cà phê', 'Thức uống đậm vị', 'Đồ uống tươi mát', 'Bánh ngọt'],\n    trim: true\n  },\n  image: {\n    type: String,\n    default: '/images/default-product.jpg'\n  },\n  imageUrl: {\n    type: String,\n    default: null\n  },\n  imagePublicId: {\n    type: String,\n    default: null\n  },\n  inStock: {\n    type: Boolean,\n    default: true\n  },\n  featured: {\n    type: Boolean,\n    default: false\n  },\n  ingredients: [{\n    type: String,\n    trim: true\n  }],\n  nutritionalInfo: {\n    calories: { type: Number, min: 0 },\n    protein: { type: Number, min: 0 },\n    carbs: { type: Number, min: 0 },\n    fat: { type: Number, min: 0 }\n  },\n  sizes: [{\n    name: { type: String, required: true }, // Small, Medium, Large\n    price: { type: Number, required: true, min: 0 },\n    available: { type: Boolean, default: true }\n  }]\n}, {\n  timestamps: true\n});\n\n// Index for better search performance\nproductSchema.index({ name: 'text', description: 'text' });\nproductSchema.index({ category: 1 });\nproductSchema.index({ featured: 1 });\nproductSchema.index({ inStock: 1 });\n\nmodule.exports = mongoose.model('Product', productSchema);"],"mappings":"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","ignoreList":[]}},"mtime":1757433503379},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst jwt = require('jsonwebtoken');\nconst User = require('../models/User');\nconst {\n  protect\n} = require('../middleware/auth');\n\n// Generate JWT Token\nconst generateToken = userId => {\n  return jwt.sign({\n    userId\n  }, process.env.JWT_SECRET || 'fallback_secret', {\n    expiresIn: process.env.JWT_EXPIRE || '30d'\n  });\n};\n\n// @route   POST /api/auth/register\n// @desc    Register a new user\n// @access  Public\nrouter.post('/register', async (req, res) => {\n  try {\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      phone,\n      role\n    } = req.body;\n\n    // Check if user already exists\n    const existingUser = await User.findOne({\n      email: email.toLowerCase().trim()\n    });\n    if (existingUser) {\n      return res.status(400).json({\n        success: false,\n        message: 'User already exists with this email'\n      });\n    }\n\n    // Create new user (password will be hashed automatically by the User model)\n    const newUser = new User({\n      firstName,\n      lastName,\n      email: email.toLowerCase().trim(),\n      password,\n      phone,\n      role: role || 'customer'\n    });\n    await newUser.save();\n\n    // Generate token\n    const token = generateToken(newUser._id);\n\n    // Remove password from response\n    const userResponse = {\n      _id: newUser._id,\n      firstName: newUser.firstName,\n      lastName: newUser.lastName,\n      email: newUser.email,\n      phone: newUser.phone,\n      role: newUser.role,\n      createdAt: newUser.createdAt\n    };\n    res.status(201).json({\n      success: true,\n      token,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Registration error:', error);\n\n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n\n    // Handle duplicate key error\n    if (error.code === 11000) {\n      return res.status(400).json({\n        success: false,\n        message: 'User already exists with this email'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error during registration'\n    });\n  }\n});\n\n// @route   POST /api/auth/login\n// @desc    Login user\n// @access  Public\nrouter.post('/login', async (req, res) => {\n  try {\n    const {\n      email,\n      password\n    } = req.body;\n\n    // Find user by email (include password for comparison)\n    const user = await User.findOne({\n      email: email.toLowerCase().trim()\n    }).select('+password');\n    if (!user) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid credentials'\n      });\n    }\n\n    // Check if user is active\n    if (!user.isActive) {\n      return res.status(401).json({\n        success: false,\n        message: 'Account is deactivated'\n      });\n    }\n\n    // Check password using the model method\n    const isMatch = await user.comparePassword(password);\n    if (!isMatch) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid credentials'\n      });\n    }\n\n    // Generate token\n    const token = generateToken(user._id);\n\n    // Remove password from response\n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      createdAt: user.createdAt\n    };\n    res.json({\n      success: true,\n      token,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Login error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error during login'\n    });\n  }\n});\n\n// @route   GET /api/auth/me\n// @desc    Get current user\n// @access  Private\nrouter.get('/me', protect, async (req, res) => {\n  try {\n    // req.user is set by the auth middleware\n    const user = await User.findById(req.user._id);\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n\n    // Check if user is active\n    if (!user.isActive) {\n      return res.status(401).json({\n        success: false,\n        message: 'Account is deactivated'\n      });\n    }\n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      createdAt: user.createdAt\n    };\n    res.json({\n      success: true,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Get user error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   PUT /api/auth/profile\n// @desc    Update user profile\n// @access  Private\nrouter.put('/profile', protect, async (req, res) => {\n  try {\n    const {\n      firstName,\n      lastName,\n      email,\n      phone,\n      address,\n      preferences\n    } = req.body;\n\n    // Find the current user\n    const user = await User.findById(req.user._id);\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n\n    // Check if email is being changed and if it already exists\n    if (email && email.toLowerCase().trim() !== user.email) {\n      const existingUser = await User.findOne({\n        email: email.toLowerCase().trim(),\n        _id: {\n          $ne: user._id\n        }\n      });\n      if (existingUser) {\n        return res.status(400).json({\n          success: false,\n          message: 'Email already exists'\n        });\n      }\n    }\n\n    // Update user fields\n    if (firstName) user.firstName = firstName;\n    if (lastName) user.lastName = lastName;\n    if (email) user.email = email.toLowerCase().trim();\n    if (phone) user.phone = phone;\n    if (address) {\n      user.address = {\n        ...user.address,\n        ...address\n      };\n    }\n    if (preferences) {\n      user.preferences = {\n        ...user.preferences,\n        ...preferences\n      };\n    }\n    await user.save();\n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      address: user.address,\n      preferences: user.preferences,\n      createdAt: user.createdAt,\n      updatedAt: user.updatedAt\n    };\n    res.json({\n      success: true,\n      message: 'Profile updated successfully',\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Profile update error:', error);\n\n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n\n    // Handle duplicate key error\n    if (error.code === 11000) {\n      return res.status(400).json({\n        success: false,\n        message: 'Email already exists'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error during profile update'\n    });\n  }\n});\n\n// @route   PUT /api/auth/password\n// @desc    Change user password\n// @access  Private\nrouter.put('/password', protect, async (req, res) => {\n  try {\n    const {\n      currentPassword,\n      newPassword\n    } = req.body;\n    if (!currentPassword || !newPassword) {\n      return res.status(400).json({\n        success: false,\n        message: 'Current password and new password are required'\n      });\n    }\n    if (newPassword.length < 6) {\n      return res.status(400).json({\n        success: false,\n        message: 'New password must be at least 6 characters long'\n      });\n    }\n\n    // Find the current user with password\n    const user = await User.findById(req.user._id).select('+password');\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n\n    // Check current password\n    const isMatch = await user.comparePassword(currentPassword);\n    if (!isMatch) {\n      return res.status(400).json({\n        success: false,\n        message: 'Current password is incorrect'\n      });\n    }\n\n    // Update password (will be hashed automatically by the User model)\n    user.password = newPassword;\n    await user.save();\n    res.json({\n      success: true,\n      message: 'Password updated successfully'\n    });\n  } catch (error) {\n    console.error('Password update error:', error);\n\n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error during password update'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImp3dCIsIlVzZXIiLCJwcm90ZWN0IiwiZ2VuZXJhdGVUb2tlbiIsInVzZXJJZCIsInNpZ24iLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsImV4cGlyZXNJbiIsIkpXVF9FWFBJUkUiLCJwb3N0IiwicmVxIiwicmVzIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJlbWFpbCIsInBhc3N3b3JkIiwicGhvbmUiLCJyb2xlIiwiYm9keSIsImV4aXN0aW5nVXNlciIsImZpbmRPbmUiLCJ0b0xvd2VyQ2FzZSIsInRyaW0iLCJzdGF0dXMiLCJqc29uIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJuZXdVc2VyIiwic2F2ZSIsInRva2VuIiwiX2lkIiwidXNlclJlc3BvbnNlIiwiY3JlYXRlZEF0IiwidXNlciIsImVycm9yIiwiY29uc29sZSIsIm5hbWUiLCJtZXNzYWdlcyIsIk9iamVjdCIsInZhbHVlcyIsImVycm9ycyIsIm1hcCIsImVyciIsImpvaW4iLCJjb2RlIiwic2VsZWN0IiwiaXNBY3RpdmUiLCJpc01hdGNoIiwiY29tcGFyZVBhc3N3b3JkIiwibG95YWx0eVBvaW50cyIsImdldCIsImZpbmRCeUlkIiwicHV0IiwiYWRkcmVzcyIsInByZWZlcmVuY2VzIiwiJG5lIiwidXBkYXRlZEF0IiwiY3VycmVudFBhc3N3b3JkIiwibmV3UGFzc3dvcmQiLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJEOlxcY29kZVxcV2ViQ2FmZmVcXGJhY2tlbmRcXHNyY1xccm91dGVzXFwiLCJzb3VyY2VzIjpbImF1dGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5jb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvVXNlcicpO1xuY29uc3QgeyBwcm90ZWN0IH0gPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2F1dGgnKTtcblxuLy8gR2VuZXJhdGUgSldUIFRva2VuXG5jb25zdCBnZW5lcmF0ZVRva2VuID0gKHVzZXJJZCkgPT4ge1xuICByZXR1cm4gand0LnNpZ24oeyB1c2VySWQgfSwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCB8fCAnZmFsbGJhY2tfc2VjcmV0Jywge1xuICAgIGV4cGlyZXNJbjogcHJvY2Vzcy5lbnYuSldUX0VYUElSRSB8fCAnMzBkJ1xuICB9KTtcbn07XG5cbi8vIEByb3V0ZSAgIFBPU1QgL2FwaS9hdXRoL3JlZ2lzdGVyXG4vLyBAZGVzYyAgICBSZWdpc3RlciBhIG5ldyB1c2VyXG4vLyBAYWNjZXNzICBQdWJsaWNcbnJvdXRlci5wb3N0KCcvcmVnaXN0ZXInLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGZpcnN0TmFtZSwgbGFzdE5hbWUsIGVtYWlsLCBwYXNzd29yZCwgcGhvbmUsIHJvbGUgfSA9IHJlcS5ib2R5O1xuICAgIFxuICAgIC8vIENoZWNrIGlmIHVzZXIgYWxyZWFkeSBleGlzdHNcbiAgICBjb25zdCBleGlzdGluZ1VzZXIgPSBhd2FpdCBVc2VyLmZpbmRPbmUoeyBlbWFpbDogZW1haWwudG9Mb3dlckNhc2UoKS50cmltKCkgfSk7XG4gICAgaWYgKGV4aXN0aW5nVXNlcikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdVc2VyIGFscmVhZHkgZXhpc3RzIHdpdGggdGhpcyBlbWFpbCdcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBDcmVhdGUgbmV3IHVzZXIgKHBhc3N3b3JkIHdpbGwgYmUgaGFzaGVkIGF1dG9tYXRpY2FsbHkgYnkgdGhlIFVzZXIgbW9kZWwpXG4gICAgY29uc3QgbmV3VXNlciA9IG5ldyBVc2VyKHtcbiAgICAgIGZpcnN0TmFtZSxcbiAgICAgIGxhc3ROYW1lLFxuICAgICAgZW1haWw6IGVtYWlsLnRvTG93ZXJDYXNlKCkudHJpbSgpLFxuICAgICAgcGFzc3dvcmQsXG4gICAgICBwaG9uZSxcbiAgICAgIHJvbGU6IHJvbGUgfHwgJ2N1c3RvbWVyJ1xuICAgIH0pO1xuICAgIFxuICAgIGF3YWl0IG5ld1VzZXIuc2F2ZSgpO1xuICAgIFxuICAgIC8vIEdlbmVyYXRlIHRva2VuXG4gICAgY29uc3QgdG9rZW4gPSBnZW5lcmF0ZVRva2VuKG5ld1VzZXIuX2lkKTtcbiAgICBcbiAgICAvLyBSZW1vdmUgcGFzc3dvcmQgZnJvbSByZXNwb25zZVxuICAgIGNvbnN0IHVzZXJSZXNwb25zZSA9IHtcbiAgICAgIF9pZDogbmV3VXNlci5faWQsXG4gICAgICBmaXJzdE5hbWU6IG5ld1VzZXIuZmlyc3ROYW1lLFxuICAgICAgbGFzdE5hbWU6IG5ld1VzZXIubGFzdE5hbWUsXG4gICAgICBlbWFpbDogbmV3VXNlci5lbWFpbCxcbiAgICAgIHBob25lOiBuZXdVc2VyLnBob25lLFxuICAgICAgcm9sZTogbmV3VXNlci5yb2xlLFxuICAgICAgY3JlYXRlZEF0OiBuZXdVc2VyLmNyZWF0ZWRBdFxuICAgIH07XG4gICAgXG4gICAgcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIHRva2VuLFxuICAgICAgdXNlcjogdXNlclJlc3BvbnNlXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignUmVnaXN0cmF0aW9uIGVycm9yOicsIGVycm9yKTtcbiAgICBcbiAgICAvLyBIYW5kbGUgdmFsaWRhdGlvbiBlcnJvcnNcbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gJ1ZhbGlkYXRpb25FcnJvcicpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2VzID0gT2JqZWN0LnZhbHVlcyhlcnJvci5lcnJvcnMpLm1hcChlcnIgPT4gZXJyLm1lc3NhZ2UpO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VzLmpvaW4oJywgJylcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBIYW5kbGUgZHVwbGljYXRlIGtleSBlcnJvclxuICAgIGlmIChlcnJvci5jb2RlID09PSAxMTAwMCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdVc2VyIGFscmVhZHkgZXhpc3RzIHdpdGggdGhpcyBlbWFpbCdcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIG1lc3NhZ2U6ICdTZXJ2ZXIgZXJyb3IgZHVyaW5nIHJlZ2lzdHJhdGlvbidcbiAgICB9KTtcbiAgfVxufSk7XG5cbi8vIEByb3V0ZSAgIFBPU1QgL2FwaS9hdXRoL2xvZ2luXG4vLyBAZGVzYyAgICBMb2dpbiB1c2VyXG4vLyBAYWNjZXNzICBQdWJsaWNcbnJvdXRlci5wb3N0KCcvbG9naW4nLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCB9ID0gcmVxLmJvZHk7XG4gICAgXG4gICAgLy8gRmluZCB1c2VyIGJ5IGVtYWlsIChpbmNsdWRlIHBhc3N3b3JkIGZvciBjb21wYXJpc29uKVxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRPbmUoeyBlbWFpbDogZW1haWwudG9Mb3dlckNhc2UoKS50cmltKCkgfSkuc2VsZWN0KCcrcGFzc3dvcmQnKTtcbiAgICBpZiAoIXVzZXIpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnSW52YWxpZCBjcmVkZW50aWFscydcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBDaGVjayBpZiB1c2VyIGlzIGFjdGl2ZVxuICAgIGlmICghdXNlci5pc0FjdGl2ZSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdBY2NvdW50IGlzIGRlYWN0aXZhdGVkJ1xuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vIENoZWNrIHBhc3N3b3JkIHVzaW5nIHRoZSBtb2RlbCBtZXRob2RcbiAgICBjb25zdCBpc01hdGNoID0gYXdhaXQgdXNlci5jb21wYXJlUGFzc3dvcmQocGFzc3dvcmQpO1xuICAgIGlmICghaXNNYXRjaCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdJbnZhbGlkIGNyZWRlbnRpYWxzJ1xuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vIEdlbmVyYXRlIHRva2VuXG4gICAgY29uc3QgdG9rZW4gPSBnZW5lcmF0ZVRva2VuKHVzZXIuX2lkKTtcbiAgICBcbiAgICAvLyBSZW1vdmUgcGFzc3dvcmQgZnJvbSByZXNwb25zZVxuICAgIGNvbnN0IHVzZXJSZXNwb25zZSA9IHtcbiAgICAgIF9pZDogdXNlci5faWQsXG4gICAgICBmaXJzdE5hbWU6IHVzZXIuZmlyc3ROYW1lLFxuICAgICAgbGFzdE5hbWU6IHVzZXIubGFzdE5hbWUsXG4gICAgICBlbWFpbDogdXNlci5lbWFpbCxcbiAgICAgIHBob25lOiB1c2VyLnBob25lLFxuICAgICAgcm9sZTogdXNlci5yb2xlLFxuICAgICAgaXNBY3RpdmU6IHVzZXIuaXNBY3RpdmUsXG4gICAgICBsb3lhbHR5UG9pbnRzOiB1c2VyLmxveWFsdHlQb2ludHMsXG4gICAgICBjcmVhdGVkQXQ6IHVzZXIuY3JlYXRlZEF0XG4gICAgfTtcbiAgICBcbiAgICByZXMuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgdG9rZW4sXG4gICAgICB1c2VyOiB1c2VyUmVzcG9uc2VcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdMb2dpbiBlcnJvcjonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBtZXNzYWdlOiAnU2VydmVyIGVycm9yIGR1cmluZyBsb2dpbidcbiAgICB9KTtcbiAgfVxufSk7XG5cbi8vIEByb3V0ZSAgIEdFVCAvYXBpL2F1dGgvbWVcbi8vIEBkZXNjICAgIEdldCBjdXJyZW50IHVzZXJcbi8vIEBhY2Nlc3MgIFByaXZhdGVcbnJvdXRlci5nZXQoJy9tZScsIHByb3RlY3QsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIC8vIHJlcS51c2VyIGlzIHNldCBieSB0aGUgYXV0aCBtaWRkbGV3YXJlXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQocmVxLnVzZXIuX2lkKTtcbiAgICBcbiAgICBpZiAoIXVzZXIpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnVXNlciBub3QgZm91bmQnXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gQ2hlY2sgaWYgdXNlciBpcyBhY3RpdmVcbiAgICBpZiAoIXVzZXIuaXNBY3RpdmUpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnQWNjb3VudCBpcyBkZWFjdGl2YXRlZCdcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCB1c2VyUmVzcG9uc2UgPSB7XG4gICAgICBfaWQ6IHVzZXIuX2lkLFxuICAgICAgZmlyc3ROYW1lOiB1c2VyLmZpcnN0TmFtZSxcbiAgICAgIGxhc3ROYW1lOiB1c2VyLmxhc3ROYW1lLFxuICAgICAgZW1haWw6IHVzZXIuZW1haWwsXG4gICAgICBwaG9uZTogdXNlci5waG9uZSxcbiAgICAgIHJvbGU6IHVzZXIucm9sZSxcbiAgICAgIGlzQWN0aXZlOiB1c2VyLmlzQWN0aXZlLFxuICAgICAgbG95YWx0eVBvaW50czogdXNlci5sb3lhbHR5UG9pbnRzLFxuICAgICAgY3JlYXRlZEF0OiB1c2VyLmNyZWF0ZWRBdFxuICAgIH07XG4gICAgXG4gICAgcmVzLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIHVzZXI6IHVzZXJSZXNwb25zZVxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0dldCB1c2VyIGVycm9yOicsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIG1lc3NhZ2U6ICdTZXJ2ZXIgZXJyb3InXG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBAcm91dGUgICBQVVQgL2FwaS9hdXRoL3Byb2ZpbGVcbi8vIEBkZXNjICAgIFVwZGF0ZSB1c2VyIHByb2ZpbGVcbi8vIEBhY2Nlc3MgIFByaXZhdGVcbnJvdXRlci5wdXQoJy9wcm9maWxlJywgcHJvdGVjdCwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBmaXJzdE5hbWUsIGxhc3ROYW1lLCBlbWFpbCwgcGhvbmUsIGFkZHJlc3MsIHByZWZlcmVuY2VzIH0gPSByZXEuYm9keTtcbiAgICBcbiAgICAvLyBGaW5kIHRoZSBjdXJyZW50IHVzZXJcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kQnlJZChyZXEudXNlci5faWQpO1xuICAgIGlmICghdXNlcikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdVc2VyIG5vdCBmb3VuZCdcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBDaGVjayBpZiBlbWFpbCBpcyBiZWluZyBjaGFuZ2VkIGFuZCBpZiBpdCBhbHJlYWR5IGV4aXN0c1xuICAgIGlmIChlbWFpbCAmJiBlbWFpbC50b0xvd2VyQ2FzZSgpLnRyaW0oKSAhPT0gdXNlci5lbWFpbCkge1xuICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgVXNlci5maW5kT25lKHsgXG4gICAgICAgIGVtYWlsOiBlbWFpbC50b0xvd2VyQ2FzZSgpLnRyaW0oKSxcbiAgICAgICAgX2lkOiB7ICRuZTogdXNlci5faWQgfVxuICAgICAgfSk7XG4gICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgbWVzc2FnZTogJ0VtYWlsIGFscmVhZHkgZXhpc3RzJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8gVXBkYXRlIHVzZXIgZmllbGRzXG4gICAgaWYgKGZpcnN0TmFtZSkgdXNlci5maXJzdE5hbWUgPSBmaXJzdE5hbWU7XG4gICAgaWYgKGxhc3ROYW1lKSB1c2VyLmxhc3ROYW1lID0gbGFzdE5hbWU7XG4gICAgaWYgKGVtYWlsKSB1c2VyLmVtYWlsID0gZW1haWwudG9Mb3dlckNhc2UoKS50cmltKCk7XG4gICAgaWYgKHBob25lKSB1c2VyLnBob25lID0gcGhvbmU7XG4gICAgaWYgKGFkZHJlc3MpIHtcbiAgICAgIHVzZXIuYWRkcmVzcyA9IHtcbiAgICAgICAgLi4udXNlci5hZGRyZXNzLFxuICAgICAgICAuLi5hZGRyZXNzXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAocHJlZmVyZW5jZXMpIHtcbiAgICAgIHVzZXIucHJlZmVyZW5jZXMgPSB7XG4gICAgICAgIC4uLnVzZXIucHJlZmVyZW5jZXMsXG4gICAgICAgIC4uLnByZWZlcmVuY2VzXG4gICAgICB9O1xuICAgIH1cbiAgICBcbiAgICBhd2FpdCB1c2VyLnNhdmUoKTtcbiAgICBcbiAgICBjb25zdCB1c2VyUmVzcG9uc2UgPSB7XG4gICAgICBfaWQ6IHVzZXIuX2lkLFxuICAgICAgZmlyc3ROYW1lOiB1c2VyLmZpcnN0TmFtZSxcbiAgICAgIGxhc3ROYW1lOiB1c2VyLmxhc3ROYW1lLFxuICAgICAgZW1haWw6IHVzZXIuZW1haWwsXG4gICAgICBwaG9uZTogdXNlci5waG9uZSxcbiAgICAgIHJvbGU6IHVzZXIucm9sZSxcbiAgICAgIGlzQWN0aXZlOiB1c2VyLmlzQWN0aXZlLFxuICAgICAgbG95YWx0eVBvaW50czogdXNlci5sb3lhbHR5UG9pbnRzLFxuICAgICAgYWRkcmVzczogdXNlci5hZGRyZXNzLFxuICAgICAgcHJlZmVyZW5jZXM6IHVzZXIucHJlZmVyZW5jZXMsXG4gICAgICBjcmVhdGVkQXQ6IHVzZXIuY3JlYXRlZEF0LFxuICAgICAgdXBkYXRlZEF0OiB1c2VyLnVwZGF0ZWRBdFxuICAgIH07XG4gICAgXG4gICAgcmVzLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdQcm9maWxlIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICAgIHVzZXI6IHVzZXJSZXNwb25zZVxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1Byb2ZpbGUgdXBkYXRlIGVycm9yOicsIGVycm9yKTtcbiAgICBcbiAgICAvLyBIYW5kbGUgdmFsaWRhdGlvbiBlcnJvcnNcbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gJ1ZhbGlkYXRpb25FcnJvcicpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2VzID0gT2JqZWN0LnZhbHVlcyhlcnJvci5lcnJvcnMpLm1hcChlcnIgPT4gZXJyLm1lc3NhZ2UpO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VzLmpvaW4oJywgJylcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBIYW5kbGUgZHVwbGljYXRlIGtleSBlcnJvclxuICAgIGlmIChlcnJvci5jb2RlID09PSAxMTAwMCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdFbWFpbCBhbHJlYWR5IGV4aXN0cydcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIG1lc3NhZ2U6ICdTZXJ2ZXIgZXJyb3IgZHVyaW5nIHByb2ZpbGUgdXBkYXRlJ1xuICAgIH0pO1xuICB9XG59KTtcblxuLy8gQHJvdXRlICAgUFVUIC9hcGkvYXV0aC9wYXNzd29yZFxuLy8gQGRlc2MgICAgQ2hhbmdlIHVzZXIgcGFzc3dvcmRcbi8vIEBhY2Nlc3MgIFByaXZhdGVcbnJvdXRlci5wdXQoJy9wYXNzd29yZCcsIHByb3RlY3QsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgY3VycmVudFBhc3N3b3JkLCBuZXdQYXNzd29yZCB9ID0gcmVxLmJvZHk7XG4gICAgXG4gICAgaWYgKCFjdXJyZW50UGFzc3dvcmQgfHwgIW5ld1Bhc3N3b3JkKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ0N1cnJlbnQgcGFzc3dvcmQgYW5kIG5ldyBwYXNzd29yZCBhcmUgcmVxdWlyZWQnXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgaWYgKG5ld1Bhc3N3b3JkLmxlbmd0aCA8IDYpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnTmV3IHBhc3N3b3JkIG11c3QgYmUgYXQgbGVhc3QgNiBjaGFyYWN0ZXJzIGxvbmcnXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gRmluZCB0aGUgY3VycmVudCB1c2VyIHdpdGggcGFzc3dvcmRcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kQnlJZChyZXEudXNlci5faWQpLnNlbGVjdCgnK3Bhc3N3b3JkJyk7XG4gICAgaWYgKCF1c2VyKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ1VzZXIgbm90IGZvdW5kJ1xuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vIENoZWNrIGN1cnJlbnQgcGFzc3dvcmRcbiAgICBjb25zdCBpc01hdGNoID0gYXdhaXQgdXNlci5jb21wYXJlUGFzc3dvcmQoY3VycmVudFBhc3N3b3JkKTtcbiAgICBpZiAoIWlzTWF0Y2gpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnQ3VycmVudCBwYXNzd29yZCBpcyBpbmNvcnJlY3QnXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gVXBkYXRlIHBhc3N3b3JkICh3aWxsIGJlIGhhc2hlZCBhdXRvbWF0aWNhbGx5IGJ5IHRoZSBVc2VyIG1vZGVsKVxuICAgIHVzZXIucGFzc3dvcmQgPSBuZXdQYXNzd29yZDtcbiAgICBhd2FpdCB1c2VyLnNhdmUoKTtcbiAgICBcbiAgICByZXMuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ1Bhc3N3b3JkIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5J1xuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1Bhc3N3b3JkIHVwZGF0ZSBlcnJvcjonLCBlcnJvcik7XG4gICAgXG4gICAgLy8gSGFuZGxlIHZhbGlkYXRpb24gZXJyb3JzXG4gICAgaWYgKGVycm9yLm5hbWUgPT09ICdWYWxpZGF0aW9uRXJyb3InKSB7XG4gICAgICBjb25zdCBtZXNzYWdlcyA9IE9iamVjdC52YWx1ZXMoZXJyb3IuZXJyb3JzKS5tYXAoZXJyID0+IGVyci5tZXNzYWdlKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiBtZXNzYWdlcy5qb2luKCcsICcpXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBtZXNzYWdlOiAnU2VydmVyIGVycm9yIGR1cmluZyBwYXNzd29yZCB1cGRhdGUnXG4gICAgfSk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUNsQyxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBTSxDQUFDLENBQUM7QUFDL0IsTUFBTUMsR0FBRyxHQUFHSCxPQUFPLENBQUMsY0FBYyxDQUFDO0FBQ25DLE1BQU1JLElBQUksR0FBR0osT0FBTyxDQUFDLGdCQUFnQixDQUFDO0FBQ3RDLE1BQU07RUFBRUs7QUFBUSxDQUFDLEdBQUdMLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQzs7QUFFakQ7QUFDQSxNQUFNTSxhQUFhLEdBQUlDLE1BQU0sSUFBSztFQUNoQyxPQUFPSixHQUFHLENBQUNLLElBQUksQ0FBQztJQUFFRDtFQUFPLENBQUMsRUFBRUUsT0FBTyxDQUFDQyxHQUFHLENBQUNDLFVBQVUsSUFBSSxpQkFBaUIsRUFBRTtJQUN2RUMsU0FBUyxFQUFFSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csVUFBVSxJQUFJO0VBQ3ZDLENB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","map":{"version":3,"names":["express","require","router","Router","jwt","User","protect","generateToken","userId","sign","process","env","JWT_SECRET","expiresIn","JWT_EXPIRE","post","req","res","firstName","lastName","email","password","phone","role","body","existingUser","findOne","toLowerCase","trim","status","json","success","message","newUser","save","token","_id","userResponse","createdAt","user","error","console","name","messages","Object","values","errors","map","err","join","code","select","isActive","isMatch","comparePassword","loyaltyPoints","get","findById","put","address","preferences","$ne","updatedAt","currentPassword","newPassword","length","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["auth.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst jwt = require('jsonwebtoken');\nconst User = require('../models/User');\nconst { protect } = require('../middleware/auth');\n\n// Generate JWT Token\nconst generateToken = (userId) => {\n  return jwt.sign({ userId }, process.env.JWT_SECRET || 'fallback_secret', {\n    expiresIn: process.env.JWT_EXPIRE || '30d'\n  });\n};\n\n// @route   POST /api/auth/register\n// @desc    Register a new user\n// @access  Public\nrouter.post('/register', async (req, res) => {\n  try {\n    const { firstName, lastName, email, password, phone, role } = req.body;\n    \n    // Check if user already exists\n    const existingUser = await User.findOne({ email: email.toLowerCase().trim() });\n    if (existingUser) {\n      return res.status(400).json({\n        success: false,\n        message: 'User already exists with this email'\n      });\n    }\n    \n    // Create new user (password will be hashed automatically by the User model)\n    const newUser = new User({\n      firstName,\n      lastName,\n      email: email.toLowerCase().trim(),\n      password,\n      phone,\n      role: role || 'customer'\n    });\n    \n    await newUser.save();\n    \n    // Generate token\n    const token = generateToken(newUser._id);\n    \n    // Remove password from response\n    const userResponse = {\n      _id: newUser._id,\n      firstName: newUser.firstName,\n      lastName: newUser.lastName,\n      email: newUser.email,\n      phone: newUser.phone,\n      role: newUser.role,\n      createdAt: newUser.createdAt\n    };\n    \n    res.status(201).json({\n      success: true,\n      token,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Registration error:', error);\n    \n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n    \n    // Handle duplicate key error\n    if (error.code === 11000) {\n      return res.status(400).json({\n        success: false,\n        message: 'User already exists with this email'\n      });\n    }\n    \n    res.status(500).json({\n      success: false,\n      message: 'Server error during registration'\n    });\n  }\n});\n\n// @route   POST /api/auth/login\n// @desc    Login user\n// @access  Public\nrouter.post('/login', async (req, res) => {\n  try {\n    const { email, password } = req.body;\n    \n    // Find user by email (include password for comparison)\n    const user = await User.findOne({ email: email.toLowerCase().trim() }).select('+password');\n    if (!user) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid credentials'\n      });\n    }\n    \n    // Check if user is active\n    if (!user.isActive) {\n      return res.status(401).json({\n        success: false,\n        message: 'Account is deactivated'\n      });\n    }\n    \n    // Check password using the model method\n    const isMatch = await user.comparePassword(password);\n    if (!isMatch) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid credentials'\n      });\n    }\n    \n    // Generate token\n    const token = generateToken(user._id);\n    \n    // Remove password from response\n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      createdAt: user.createdAt\n    };\n    \n    res.json({\n      success: true,\n      token,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Login error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error during login'\n    });\n  }\n});\n\n// @route   GET /api/auth/me\n// @desc    Get current user\n// @access  Private\nrouter.get('/me', protect, async (req, res) => {\n  try {\n    // req.user is set by the auth middleware\n    const user = await User.findById(req.user._id);\n    \n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n    \n    // Check if user is active\n    if (!user.isActive) {\n      return res.status(401).json({\n        success: false,\n        message: 'Account is deactivated'\n      });\n    }\n    \n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      createdAt: user.createdAt\n    };\n    \n    res.json({\n      success: true,\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Get user error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   PUT /api/auth/profile\n// @desc    Update user profile\n// @access  Private\nrouter.put('/profile', protect, async (req, res) => {\n  try {\n    const { firstName, lastName, email, phone, address, preferences } = req.body;\n    \n    // Find the current user\n    const user = await User.findById(req.user._id);\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n    \n    // Check if email is being changed and if it already exists\n    if (email && email.toLowerCase().trim() !== user.email) {\n      const existingUser = await User.findOne({ \n        email: email.toLowerCase().trim(),\n        _id: { $ne: user._id }\n      });\n      if (existingUser) {\n        return res.status(400).json({\n          success: false,\n          message: 'Email already exists'\n        });\n      }\n    }\n    \n    // Update user fields\n    if (firstName) user.firstName = firstName;\n    if (lastName) user.lastName = lastName;\n    if (email) user.email = email.toLowerCase().trim();\n    if (phone) user.phone = phone;\n    if (address) {\n      user.address = {\n        ...user.address,\n        ...address\n      };\n    }\n    if (preferences) {\n      user.preferences = {\n        ...user.preferences,\n        ...preferences\n      };\n    }\n    \n    await user.save();\n    \n    const userResponse = {\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone,\n      role: user.role,\n      isActive: user.isActive,\n      loyaltyPoints: user.loyaltyPoints,\n      address: user.address,\n      preferences: user.preferences,\n      createdAt: user.createdAt,\n      updatedAt: user.updatedAt\n    };\n    \n    res.json({\n      success: true,\n      message: 'Profile updated successfully',\n      user: userResponse\n    });\n  } catch (error) {\n    console.error('Profile update error:', error);\n    \n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n    \n    // Handle duplicate key error\n    if (error.code === 11000) {\n      return res.status(400).json({\n        success: false,\n        message: 'Email already exists'\n      });\n    }\n    \n    res.status(500).json({\n      success: false,\n      message: 'Server error during profile update'\n    });\n  }\n});\n\n// @route   PUT /api/auth/password\n// @desc    Change user password\n// @access  Private\nrouter.put('/password', protect, async (req, res) => {\n  try {\n    const { currentPassword, newPassword } = req.body;\n    \n    if (!currentPassword || !newPassword) {\n      return res.status(400).json({\n        success: false,\n        message: 'Current password and new password are required'\n      });\n    }\n    \n    if (newPassword.length < 6) {\n      return res.status(400).json({\n        success: false,\n        message: 'New password must be at least 6 characters long'\n      });\n    }\n    \n    // Find the current user with password\n    const user = await User.findById(req.user._id).select('+password');\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n    \n    // Check current password\n    const isMatch = await user.comparePassword(currentPassword);\n    if (!isMatch) {\n      return res.status(400).json({\n        success: false,\n        message: 'Current password is incorrect'\n      });\n    }\n    \n    // Update password (will be hashed automatically by the User model)\n    user.password = newPassword;\n    await user.save();\n    \n    res.json({\n      success: true,\n      message: 'Password updated successfully'\n    });\n  } catch (error) {\n    console.error('Password update error:', error);\n    \n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map(err => err.message);\n      return res.status(400).json({\n        success: false,\n        message: messages.join(', ')\n      });\n    }\n    \n    res.status(500).json({\n      success: false,\n      message: 'Server error during password update'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1756225536247},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\User.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst userSchema = new mongoose.Schema({\n  firstName: {\n    type: String,\n    required: [true, 'First name is required'],\n    trim: true,\n    maxlength: [50, 'First name cannot exceed 50 characters']\n  },\n  lastName: {\n    type: String,\n    required: [true, 'Last name is required'],\n    trim: true,\n    maxlength: [50, 'Last name cannot exceed 50 characters']\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    unique: true,\n    lowercase: true,\n    trim: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email']\n  },\n  password: {\n    type: String,\n    required: [true, 'Password is required'],\n    minlength: [6, 'Password must be at least 6 characters'],\n    select: false // Don't include password in queries by default\n  },\n  phone: {\n    type: String,\n    trim: true,\n    match: [/^\\d{10}$/, 'Please enter a valid phone number']\n  },\n  address: {\n    street: {\n      type: String,\n      trim: true\n    },\n    city: {\n      type: String,\n      trim: true\n    },\n    state: {\n      type: String,\n      trim: true\n    },\n    zipCode: {\n      type: String,\n      trim: true\n    },\n    country: {\n      type: String,\n      trim: true,\n      default: 'USA'\n    }\n  },\n  role: {\n    type: String,\n    enum: ['customer', 'admin'],\n    default: 'customer'\n  },\n  isActive: {\n    type: Boolean,\n    default: true\n  },\n  preferences: {\n    newsletter: {\n      type: Boolean,\n      default: false\n    },\n    notifications: {\n      type: Boolean,\n      default: true\n    }\n  },\n  loyaltyPoints: {\n    type: Number,\n    default: 0,\n    min: 0\n  }\n}, {\n  timestamps: true,\n  toJSON: {\n    virtuals: true\n  },\n  toObject: {\n    virtuals: true\n  }\n});\n\n// Virtual for full name\nuserSchema.virtual('name').get(function () {\n  return `${this.firstName} ${this.lastName}`;\n});\n\n// Index for better performance\nuserSchema.index({\n  email: 1\n});\nuserSchema.index({\n  role: 1\n});\n\n// Hash password before saving\nuserSchema.pre('save', async function (next) {\n  // Only hash the password if it has been modified (or is new)\n  if (!this.isModified('password')) return next();\n  try {\n    // Hash password with cost of 12\n    const hashedPassword = await bcrypt.hash(this.password, 12);\n    this.password = hashedPassword;\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Instance method to check password\nuserSchema.methods.comparePassword = async function (candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Instance method to get full name\nuserSchema.methods.getFullName = function () {\n  return `${this.firstName} ${this.lastName}`;\n};\nmodule.exports = mongoose.model('User', userSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["mongoose","require","bcrypt","userSchema","Schema","firstName","type","String","required","trim","maxlength","lastName","email","unique","lowercase","match","password","minlength","select","phone","address","street","city","state","zipCode","country","default","role","enum","isActive","Boolean","preferences","newsletter","notifications","loyaltyPoints","Number","min","timestamps","toJSON","virtuals","toObject","virtual","get","index","pre","next","isModified","hashedPassword","hash","error","methods","comparePassword","candidatePassword","compare","getFullName","module","exports","model"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\models\\","sources":["User.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\nconst userSchema = new mongoose.Schema({\n  firstName: {\n    type: String,\n    required: [true, 'First name is required'],\n    trim: true,\n    maxlength: [50, 'First name cannot exceed 50 characters']\n  },\n  lastName: {\n    type: String,\n    required: [true, 'Last name is required'],\n    trim: true,\n    maxlength: [50, 'Last name cannot exceed 50 characters']\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    unique: true,\n    lowercase: true,\n    trim: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email']\n  },\n  password: {\n    type: String,\n    required: [true, 'Password is required'],\n    minlength: [6, 'Password must be at least 6 characters'],\n    select: false // Don't include password in queries by default\n  },\n  phone: {\n    type: String,\n    trim: true,\n    match: [/^\\d{10}$/, 'Please enter a valid phone number']\n  },\n  address: {\n    street: { type: String, trim: true },\n    city: { type: String, trim: true },\n    state: { type: String, trim: true },\n    zipCode: { type: String, trim: true },\n    country: { type: String, trim: true, default: 'USA' }\n  },\n  role: {\n    type: String,\n    enum: ['customer', 'admin'],\n    default: 'customer'\n  },\n  isActive: {\n    type: Boolean,\n    default: true\n  },\n  preferences: {\n    newsletter: { type: Boolean, default: false },\n    notifications: { type: Boolean, default: true }\n  },\n  loyaltyPoints: {\n    type: Number,\n    default: 0,\n    min: 0\n  }\n}, {\n  timestamps: true,\n  toJSON: { virtuals: true },\n  toObject: { virtuals: true }\n});\n\n// Virtual for full name\nuserSchema.virtual('name').get(function() {\n  return `${this.firstName} ${this.lastName}`;\n});\n\n// Index for better performance\nuserSchema.index({ email: 1 });\nuserSchema.index({ role: 1 });\n\n// Hash password before saving\nuserSchema.pre('save', async function(next) {\n  // Only hash the password if it has been modified (or is new)\n  if (!this.isModified('password')) return next();\n  \n  try {\n    // Hash password with cost of 12\n    const hashedPassword = await bcrypt.hash(this.password, 12);\n    this.password = hashedPassword;\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Instance method to check password\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n  return await bcrypt.compare(candidatePassword, this.password);\n};\n\n// Instance method to get full name\nuserSchema.methods.getFullName = function() {\n  return `${this.firstName} ${this.lastName}`;\n};\n\nmodule.exports = mongoose.model('User', userSchema);"],"mappings":"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","ignoreList":[]}},"mtime":1757523841233},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\middleware\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\middleware\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const jwt = require('jsonwebtoken');\nconst User = require('../models/User');\n\n// Middleware to protect routes\nconst protect = async (req, res, next) => {\n  try {\n    let token;\n\n    // Check for token in Authorization header\n    if (req.headers.authorization && req.headers.authorization.startsWith('Bearer')) {\n      token = req.headers.authorization.split(' ')[1];\n    }\n\n    // Make sure token exists\n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n    try {\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n      // Get user from token\n      const user = await User.findById(decoded.userId);\n      if (!user) {\n        return res.status(401).json({\n          success: false,\n          message: 'User not found'\n        });\n      }\n      if (!user.isActive) {\n        return res.status(401).json({\n          success: false,\n          message: 'User account is deactivated'\n        });\n      }\n      req.user = user;\n      next();\n    } catch (error) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n  } catch (error) {\n    console.error('Auth middleware error:', error);\n    return res.status(500).json({\n      success: false,\n      message: 'Server error in authentication'\n    });\n  }\n};\n\n// Middleware to check if user is admin\nconst authorize = (...roles) => {\n  return (req, res, next) => {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n    if (!roles.includes(req.user.role)) {\n      return res.status(403).json({\n        success: false,\n        message: `User role ${req.user.role} is not authorized to access this route`\n      });\n    }\n    next();\n  };\n};\n\n// Middleware to check if user owns the resource or is admin\nconst authorizeOwnerOrAdmin = (req, res, next) => {\n  if (!req.user) {\n    return res.status(401).json({\n      success: false,\n      message: 'Not authorized to access this route'\n    });\n  }\n\n  // Allow if user is admin or owns the resource\n  if (req.user.role === 'admin' || req.user._id.toString() === req.params.userId) {\n    next();\n  } else {\n    return res.status(403).json({\n      success: false,\n      message: 'Not authorized to access this resource'\n    });\n  }\n};\nmodule.exports = {\n  protect,\n  authorize,\n  authorizeOwnerOrAdmin\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiVXNlciIsInByb3RlY3QiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInN0YXJ0c1dpdGgiLCJzcGxpdCIsInN0YXR1cyIsImpzb24iLCJzdWNjZXNzIiwibWVzc2FnZSIsImRlY29kZWQiLCJ2ZXJpZnkiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsInVzZXIiLCJmaW5kQnlJZCIsInVzZXJJZCIsImlzQWN0aXZlIiwiZXJyb3IiLCJjb25zb2xlIiwiYXV0aG9yaXplIiwicm9sZXMiLCJpbmNsdWRlcyIsInJvbGUiLCJhdXRob3JpemVPd25lck9yQWRtaW4iLCJfaWQiLCJ0b1N0cmluZyIsInBhcmFtcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkQ6XFxjb2RlXFxXZWJDYWZmZVxcYmFja2VuZFxcc3JjXFxtaWRkbGV3YXJlXFwiLCJzb3VyY2VzIjpbImF1dGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5jb25zdCBVc2VyID0gcmVxdWlyZSgnLi4vbW9kZWxzL1VzZXInKTtcblxuLy8gTWlkZGxld2FyZSB0byBwcm90ZWN0IHJvdXRlc1xuY29uc3QgcHJvdGVjdCA9IGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICB0cnkge1xuICAgIGxldCB0b2tlbjtcblxuICAgIC8vIENoZWNrIGZvciB0b2tlbiBpbiBBdXRob3JpemF0aW9uIGhlYWRlclxuICAgIGlmIChyZXEuaGVhZGVycy5hdXRob3JpemF0aW9uICYmIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3RhcnRzV2l0aCgnQmVhcmVyJykpIHtcbiAgICAgIHRva2VuID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbi5zcGxpdCgnICcpWzFdO1xuICAgIH1cblxuICAgIC8vIE1ha2Ugc3VyZSB0b2tlbiBleGlzdHNcbiAgICBpZiAoIXRva2VuKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ05vdCBhdXRob3JpemVkIHRvIGFjY2VzcyB0aGlzIHJvdXRlJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIC8vIFZlcmlmeSB0b2tlblxuICAgICAgY29uc3QgZGVjb2RlZCA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQpO1xuICAgICAgXG4gICAgICAvLyBHZXQgdXNlciBmcm9tIHRva2VuXG4gICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kQnlJZChkZWNvZGVkLnVzZXJJZCk7XG4gICAgICBcbiAgICAgIGlmICghdXNlcikge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIG1lc3NhZ2U6ICdVc2VyIG5vdCBmb3VuZCdcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghdXNlci5pc0FjdGl2ZSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIG1lc3NhZ2U6ICdVc2VyIGFjY291bnQgaXMgZGVhY3RpdmF0ZWQnXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXEudXNlciA9IHVzZXI7XG4gICAgICBuZXh0KCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnTm90IGF1dGhvcml6ZWQgdG8gYWNjZXNzIHRoaXMgcm91dGUnXG4gICAgICB9KTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQXV0aCBtaWRkbGV3YXJlIGVycm9yOicsIGVycm9yKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBtZXNzYWdlOiAnU2VydmVyIGVycm9yIGluIGF1dGhlbnRpY2F0aW9uJ1xuICAgIH0pO1xuICB9XG59O1xuXG4vLyBNaWRkbGV3YXJlIHRvIGNoZWNrIGlmIHVzZXIgaXMgYWRtaW5cbmNvbnN0IGF1dGhvcml6ZSA9ICguLi5yb2xlcykgPT4ge1xuICByZXR1cm4gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgaWYgKCFyZXEudXNlcikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdOb3QgYXV0aG9yaXplZCB0byBhY2Nlc3MgdGhpcyByb3V0ZSdcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICghcm9sZXMuaW5jbHVkZXMocmVxLnVzZXIucm9sZSkpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMykuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiBgVXNlciByb2xlICR7cmVxLnVzZXIucm9sZX0gaXMgbm90IGF1dGhvcml6ZWQgdG8gYWNjZXNzIHRoaXMgcm91dGVgXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBuZXh0KCk7XG4gIH07XG59O1xuXG4vLyBNaWRkbGV3YXJlIHRvIGNoZWNrIGlmIHVzZXIgb3ducyB0aGUgcmVzb3VyY2Ugb3IgaXMgYWRtaW5cbmNvbnN0IGF1dGhvcml6ZU93bmVyT3JBZG1pbiA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZiAoIXJlcS51c2VyKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogJ05vdCBhdXRob3JpemVkIHRvIGFjY2VzcyB0aGlzIHJvdXRlJ1xuICAgIH0pO1xuICB9XG5cbiAgLy8gQWxsb3cgaWYgdXNlciBpcyBhZG1pbiBvciBvd25zIHRoZSByZXNvdXJjZVxuICBpZiAocmVxLnVzZXIucm9sZSA9PT0gJ2FkbWluJyB8fCByZXEudXNlci5faWQudG9TdHJpbmcoKSA9PT0gcmVxLnBhcmFtcy51c2VySWQpIHtcbiAgICBuZXh0KCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogJ05vdCBhdXRob3JpemVkIHRvIGFjY2VzcyB0aGlzIHJlc291cmNlJ1xuICAgIH0pO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcHJvdGVjdCxcbiAgYXV0aG9yaXplLFxuICBhdXRob3JpemVPd25lck9yQWRtaW5cbn07Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDbkMsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsZ0JBQWdCLENBQUM7O0FBRXRDO0FBQ0EsTUFBTUUsT0FBTyxHQUFHLE1BQUFBLENBQU9DLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEtBQUs7RUFDeEMsSUFBSTtJQUNGLElBQUlDLEtBQUs7O0lBRVQ7SUFDQSxJQUFJSCxHQUFHLENBQUNJLE9BQU8sQ0FBQ0MsYUFBYSxJQUFJTCxHQUFHLENBQUNJLE9BQU8sQ0FBQ0MsYUFBYSxDQUFDQyxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUU7TUFDL0VILEtBQUssR0FBR0gsR0FBRyxDQUFDSSxPQUFPLENBQUNDLGFBQWEsQ0FBQ0UsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqRDs7SUFFQTtJQUNBLElBQUksQ0FBQ0osS0FBSyxFQUFFO01BQ1YsT0FBT0YsR0FBRyxDQUFDTyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztR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","map":{"version":3,"names":["jwt","require","User","protect","req","res","next","token","headers","authorization","startsWith","split","status","json","success","message","decoded","verify","process","env","JWT_SECRET","user","findById","userId","isActive","error","console","authorize","roles","includes","role","authorizeOwnerOrAdmin","_id","toString","params","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\middleware\\","sources":["auth.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst User = require('../models/User');\n\n// Middleware to protect routes\nconst protect = async (req, res, next) => {\n  try {\n    let token;\n\n    // Check for token in Authorization header\n    if (req.headers.authorization && req.headers.authorization.startsWith('Bearer')) {\n      token = req.headers.authorization.split(' ')[1];\n    }\n\n    // Make sure token exists\n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n\n    try {\n      // Verify token\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n      \n      // Get user from token\n      const user = await User.findById(decoded.userId);\n      \n      if (!user) {\n        return res.status(401).json({\n          success: false,\n          message: 'User not found'\n        });\n      }\n\n      if (!user.isActive) {\n        return res.status(401).json({\n          success: false,\n          message: 'User account is deactivated'\n        });\n      }\n\n      req.user = user;\n      next();\n    } catch (error) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n  } catch (error) {\n    console.error('Auth middleware error:', error);\n    return res.status(500).json({\n      success: false,\n      message: 'Server error in authentication'\n    });\n  }\n};\n\n// Middleware to check if user is admin\nconst authorize = (...roles) => {\n  return (req, res, next) => {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        message: 'Not authorized to access this route'\n      });\n    }\n\n    if (!roles.includes(req.user.role)) {\n      return res.status(403).json({\n        success: false,\n        message: `User role ${req.user.role} is not authorized to access this route`\n      });\n    }\n\n    next();\n  };\n};\n\n// Middleware to check if user owns the resource or is admin\nconst authorizeOwnerOrAdmin = (req, res, next) => {\n  if (!req.user) {\n    return res.status(401).json({\n      success: false,\n      message: 'Not authorized to access this route'\n    });\n  }\n\n  // Allow if user is admin or owns the resource\n  if (req.user.role === 'admin' || req.user._id.toString() === req.params.userId) {\n    next();\n  } else {\n    return res.status(403).json({\n      success: false,\n      message: 'Not authorized to access this resource'\n    });\n  }\n};\n\nmodule.exports = {\n  protect,\n  authorize,\n  authorizeOwnerOrAdmin\n};"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAc,CAAC;AACnC,MAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAgB,CAAC;;AAEtC;AACA,MAAME,OAAO,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EACxC,IAAI;IACF,IAAIC,KAAK;;IAET;IACA,IAAIH,GAAG,CAACI,OAAO,CAACC,aAAa,IAAIL,GAAG,CAACI,OAAO,CAACC,aAAa,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;MAC/EH,KAAK,GAAGH,GAAG,CAACI,OAAO,CAACC,aAAa,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjD;;IAEA;IACA,IAAI,CAACJ,KAAK,EAAE;MACV,OAAOF,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;IAEA,IAAI;MACF;MACA,MAAMC,OAAO,GAAGhB,GAAG,CAACiB,MAAM,CAACV,KAAK,EAAEW,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;;MAEzD;MACA,MAAMC,IAAI,GAAG,MAAMnB,IAAI,CAACoB,QAAQ,CAACN,OAAO,CAACO,MAAM,CAAC;MAEhD,IAAI,CAACF,IAAI,EAAE;QACT,OAAOhB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAC1BC,OAAO,EAAE,KAAK;UACdC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;MAEA,IAAI,CAACM,IAAI,CAACG,QAAQ,EAAE;QAClB,OAAOnB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAC1BC,OAAO,EAAE,KAAK;UACdC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;MAEAX,GAAG,CAACiB,IAAI,GAAGA,IAAI;MACff,IAAI,CAAC,CAAC;IACR,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACd,OAAOpB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAOpB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC1BC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,MAAMY,SAAS,GAAGA,CAAC,GAAGC,KAAK,KAAK;EAC9B,OAAO,CAACxB,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;IACzB,IAAI,CAACF,GAAG,CAACiB,IAAI,EAAE;MACb,OAAOhB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;IAEA,IAAI,CAACa,KAAK,CAACC,QAAQ,CAACzB,GAAG,CAACiB,IAAI,CAACS,IAAI,CAAC,EAAE;MAClC,OAAOzB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,aAAaX,GAAG,CAACiB,IAAI,CAACS,IAAI;MACrC,CAAC,CAAC;IACJ;IAEAxB,IAAI,CAAC,CAAC;EACR,CAAC;AACH,CAAC;;AAED;AACA,MAAMyB,qBAAqB,GAAGA,CAAC3B,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAChD,IAAI,CAACF,GAAG,CAACiB,IAAI,EAAE;IACb,OAAOhB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC1BC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;;EAEA;EACA,IAAIX,GAAG,CAACiB,IAAI,CAACS,IAAI,KAAK,OAAO,IAAI1B,GAAG,CAACiB,IAAI,CAACW,GAAG,CAACC,QAAQ,CAAC,CAAC,KAAK7B,GAAG,CAAC8B,MAAM,CAACX,MAAM,EAAE;IAC9EjB,IAAI,CAAC,CAAC;EACR,CAAC,MAAM;IACL,OAAOD,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC1BC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAEDoB,MAAM,CAACC,OAAO,GAAG;EACfjC,OAAO;EACPwB,SAAS;EACTI;AACF,CAAC","ignoreList":[]}},"mtime":1756225535435},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\orders.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst Order = require('../models/Order');\nconst Product = require('../models/Product');\nconst {\n  protect: auth\n} = require('../middleware/auth');\n\n// @route   GET /api/orders\n// @desc    Get all orders for authenticated user\n// @access  Private\nrouter.get('/', auth, async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const skip = (page - 1) * limit;\n    const status = req.query.status;\n\n    // Build query\n    const query = {\n      customer: req.user.id\n    };\n    if (status && status !== 'all') {\n      query.status = status;\n    }\n\n    // Get orders with pagination\n    const orders = await Order.find(query).populate('items.product', 'name category image').sort({\n      createdAt: -1\n    }).skip(skip).limit(limit);\n\n    // Get total count for pagination\n    const total = await Order.countDocuments(query);\n    res.json({\n      success: true,\n      data: orders,\n      pagination: {\n        current: page,\n        pages: Math.ceil(total / limit),\n        total\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching orders'\n    });\n  }\n});\n\n// @route   GET /api/orders/:id\n// @desc    Get single order by ID\n// @access  Private\nrouter.get('/:id', auth, async (req, res) => {\n  try {\n    const order = await Order.findOne({\n      _id: req.params.id,\n      customer: req.user.id\n    }).populate('items.product', 'name category image description');\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: order\n    });\n  } catch (error) {\n    console.error('Error fetching order:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order'\n    });\n  }\n});\n\n// @route   POST /api/orders\n// @desc    Create new order\n// @access  Private\nrouter.post('/', auth, async (req, res) => {\n  try {\n    const {\n      items,\n      orderType,\n      paymentMethod,\n      deliveryAddress,\n      notes\n    } = req.body;\n\n    // Validate required fields\n    if (!items || !Array.isArray(items) || items.length === 0) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order must contain at least one item'\n      });\n    }\n    if (!orderType || !['pickup', 'delivery', 'dine-in'].includes(orderType)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid order type is required'\n      });\n    }\n    if (!paymentMethod || !['cash', 'card', 'digital_wallet', 'momo', 'vnpay'].includes(paymentMethod)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid payment method is required'\n      });\n    }\n\n    // Validate delivery address for delivery orders\n    if (orderType === 'delivery') {\n      if (!deliveryAddress || !deliveryAddress.street || !deliveryAddress.city) {\n        return res.status(400).json({\n          success: false,\n          message: 'Delivery address is required for delivery orders'\n        });\n      }\n    }\n\n    // Validate and calculate order totals\n    let subtotal = 0;\n    const validatedItems = [];\n    for (const item of items) {\n      // Validate product exists\n      const product = await Product.findById(item.product);\n      if (!product) {\n        return res.status(400).json({\n          success: false,\n          message: `Product with ID ${item.product} not found`\n        });\n      }\n\n      // Validate quantity\n      if (!item.quantity || item.quantity < 1) {\n        return res.status(400).json({\n          success: false,\n          message: 'Item quantity must be at least 1'\n        });\n      }\n\n      // Calculate item price (base price or size-specific price)\n      let itemPrice = product.price;\n      if (item.size && product.sizes && product.sizes.length > 0) {\n        const sizeOption = product.sizes.find(s => s.name === item.size);\n        if (sizeOption) {\n          itemPrice = sizeOption.price;\n        }\n      }\n      const itemTotal = itemPrice * item.quantity;\n      subtotal += itemTotal;\n      validatedItems.push({\n        product: product._id,\n        name: product.name,\n        price: itemPrice,\n        quantity: item.quantity,\n        size: item.size || 'Regular',\n        customizations: item.customizations || []\n      });\n    }\n\n    // Calculate tax (8% for example)\n    const tax = subtotal * 0.08;\n    const total = subtotal + tax;\n\n    // Generate unique order number\n    const orderNumber = `ORD-${Date.now()}-${Math.random().toString(36).substr(2, 4).toUpperCase()}`;\n\n    // Create order\n    const order = new Order({\n      orderNumber,\n      customer: req.user.id,\n      items: validatedItems,\n      subtotal,\n      tax,\n      total,\n      orderType,\n      paymentMethod,\n      deliveryAddress: orderType === 'delivery' ? deliveryAddress : undefined,\n      notes: notes || '',\n      loyaltyPointsEarned: Math.floor(total * 0.1) // 10% of total as points\n    });\n    await order.save();\n\n    // Populate the order before sending response\n    await order.populate('items.product', 'name category image');\n    res.status(201).json({\n      success: true,\n      data: order,\n      message: 'Order created successfully'\n    });\n  } catch (error) {\n    console.error('Error creating order:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating order'\n    });\n  }\n});\n\n// @route   PUT /api/orders/:id/status\n// @desc    Update order status (for admin use)\n// @access  Private\nrouter.put('/:id/status', auth, async (req, res) => {\n  try {\n    const {\n      status\n    } = req.body;\n    const validStatuses = ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'];\n    if (!status || !validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid status is required'\n      });\n    }\n    const order = await Order.findById(req.params.id);\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if user owns the order or is admin (for now, allow user to cancel their own orders)\n    if (order.customer.toString() !== req.user.id && status !== 'cancelled') {\n      return res.status(403).json({\n        success: false,\n        message: 'Not authorized to update this order'\n      });\n    }\n\n    // Only allow cancellation if order is still pending or confirmed\n    if (status === 'cancelled' && !['pending', 'confirmed'].includes(order.status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order cannot be cancelled at this stage'\n      });\n    }\n    order.status = status;\n    if (status === 'completed') {\n      order.actualCompletionTime = new Date();\n    }\n    await order.save();\n    res.json({\n      success: true,\n      data: order,\n      message: 'Order status updated successfully'\n    });\n  } catch (error) {\n    console.error('Error updating order status:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating order status'\n    });\n  }\n});\n\n// @route   DELETE /api/orders/:id\n// @desc    Cancel/Delete order (only if pending)\n// @access  Private\nrouter.delete('/:id', auth, async (req, res) => {\n  try {\n    const order = await Order.findOne({\n      _id: req.params.id,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Only allow deletion if order is pending\n    if (order.status !== 'pending') {\n      return res.status(400).json({\n        success: false,\n        message: 'Only pending orders can be cancelled'\n      });\n    }\n    order.status = 'cancelled';\n    await order.save();\n    res.json({\n      success: true,\n      message: 'Order cancelled successfully'\n    });\n  } catch (error) {\n    console.error('Error cancelling order:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while cancelling order'\n    });\n  }\n});\n\n// @route   GET /api/orders/stats/summary\n// @desc    Get order statistics for user\n// @access  Private\nrouter.get('/stats/summary', auth, async (req, res) => {\n  try {\n    const userId = req.user.id;\n\n    // Get order counts by status\n    const statusCounts = await Order.aggregate([{\n      $match: {\n        customer: mongoose.Types.ObjectId(userId)\n      }\n    }, {\n      $group: {\n        _id: '$status',\n        count: {\n          $sum: 1\n        }\n      }\n    }]);\n\n    // Get total spent\n    const totalSpent = await Order.aggregate([{\n      $match: {\n        customer: mongoose.Types.ObjectId(userId),\n        status: {\n          $in: ['completed', 'ready']\n        }\n      }\n    }, {\n      $group: {\n        _id: null,\n        total: {\n          $sum: '$total'\n        }\n      }\n    }]);\n\n    // Get recent orders count (last 30 days)\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    const recentOrdersCount = await Order.countDocuments({\n      customer: userId,\n      createdAt: {\n        $gte: thirtyDaysAgo\n      }\n    });\n\n    // Get loyalty points\n    const loyaltyPoints = await Order.aggregate([{\n      $match: {\n        customer: mongoose.Types.ObjectId(userId)\n      }\n    }, {\n      $group: {\n        _id: null,\n        earned: {\n          $sum: '$loyaltyPointsEarned'\n        },\n        used: {\n          $sum: '$loyaltyPointsUsed'\n        }\n      }\n    }]);\n    res.json({\n      success: true,\n      data: {\n        statusCounts: statusCounts.reduce((acc, item) => {\n          acc[item._id] = item.count;\n          return acc;\n        }, {}),\n        totalSpent: totalSpent[0]?.total || 0,\n        recentOrdersCount,\n        loyaltyPoints: {\n          earned: loyaltyPoints[0]?.earned || 0,\n          used: loyaltyPoints[0]?.used || 0,\n          available: (loyaltyPoints[0]?.earned || 0) - (loyaltyPoints[0]?.used || 0)\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching order statistics:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order statistics'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","Order","Product","protect","auth","get","req","res","page","parseInt","query","limit","skip","status","customer","user","id","orders","find","populate","sort","createdAt","total","countDocuments","json","success","data","pagination","current","pages","Math","ceil","error","console","message","order","findOne","_id","params","name","post","items","orderType","paymentMethod","deliveryAddress","notes","body","Array","isArray","length","includes","street","city","subtotal","validatedItems","item","product","findById","quantity","itemPrice","price","size","sizes","sizeOption","s","itemTotal","push","customizations","tax","orderNumber","Date","now","random","toString","substr","toUpperCase","undefined","loyaltyPointsEarned","floor","save","put","validStatuses","actualCompletionTime","delete","userId","statusCounts","aggregate","$match","mongoose","Types","ObjectId","$group","count","$sum","totalSpent","$in","thirtyDaysAgo","setDate","getDate","recentOrdersCount","$gte","loyaltyPoints","earned","used","reduce","acc","available","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["orders.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Order = require('../models/Order');\nconst Product = require('../models/Product');\nconst { protect: auth } = require('../middleware/auth');\n\n// @route   GET /api/orders\n// @desc    Get all orders for authenticated user\n// @access  Private\nrouter.get('/', auth, async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const skip = (page - 1) * limit;\n    const status = req.query.status;\n\n    // Build query\n    const query = { customer: req.user.id };\n    if (status && status !== 'all') {\n      query.status = status;\n    }\n\n    // Get orders with pagination\n    const orders = await Order.find(query)\n      .populate('items.product', 'name category image')\n      .sort({ createdAt: -1 })\n      .skip(skip)\n      .limit(limit);\n\n    // Get total count for pagination\n    const total = await Order.countDocuments(query);\n\n    res.json({\n      success: true,\n      data: orders,\n      pagination: {\n        current: page,\n        pages: Math.ceil(total / limit),\n        total\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching orders'\n    });\n  }\n});\n\n// @route   GET /api/orders/:id\n// @desc    Get single order by ID\n// @access  Private\nrouter.get('/:id', auth, async (req, res) => {\n  try {\n    const order = await Order.findOne({\n      _id: req.params.id,\n      customer: req.user.id\n    }).populate('items.product', 'name category image description');\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: order\n    });\n  } catch (error) {\n    console.error('Error fetching order:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order'\n    });\n  }\n});\n\n// @route   POST /api/orders\n// @desc    Create new order\n// @access  Private\nrouter.post('/', auth, async (req, res) => {\n  try {\n    const {\n      items,\n      orderType,\n      paymentMethod,\n      deliveryAddress,\n      notes\n    } = req.body;\n\n    // Validate required fields\n    if (!items || !Array.isArray(items) || items.length === 0) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order must contain at least one item'\n      });\n    }\n\n    if (!orderType || !['pickup', 'delivery', 'dine-in'].includes(orderType)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid order type is required'\n      });\n    }\n\n    if (!paymentMethod || !['cash', 'card', 'digital_wallet', 'momo', 'vnpay'].includes(paymentMethod)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid payment method is required'\n      });\n    }\n\n    // Validate delivery address for delivery orders\n    if (orderType === 'delivery') {\n      if (!deliveryAddress || !deliveryAddress.street || !deliveryAddress.city) {\n        return res.status(400).json({\n          success: false,\n          message: 'Delivery address is required for delivery orders'\n        });\n      }\n    }\n\n    // Validate and calculate order totals\n    let subtotal = 0;\n    const validatedItems = [];\n\n    for (const item of items) {\n      // Validate product exists\n      const product = await Product.findById(item.product);\n      if (!product) {\n        return res.status(400).json({\n          success: false,\n          message: `Product with ID ${item.product} not found`\n        });\n      }\n\n      // Validate quantity\n      if (!item.quantity || item.quantity < 1) {\n        return res.status(400).json({\n          success: false,\n          message: 'Item quantity must be at least 1'\n        });\n      }\n\n      // Calculate item price (base price or size-specific price)\n      let itemPrice = product.price;\n      if (item.size && product.sizes && product.sizes.length > 0) {\n        const sizeOption = product.sizes.find(s => s.name === item.size);\n        if (sizeOption) {\n          itemPrice = sizeOption.price;\n        }\n      }\n\n      const itemTotal = itemPrice * item.quantity;\n      subtotal += itemTotal;\n\n      validatedItems.push({\n        product: product._id,\n        name: product.name,\n        price: itemPrice,\n        quantity: item.quantity,\n        size: item.size || 'Regular',\n        customizations: item.customizations || []\n      });\n    }\n\n    // Calculate tax (8% for example)\n    const tax = subtotal * 0.08;\n    const total = subtotal + tax;\n\n    // Generate unique order number\n    const orderNumber = `ORD-${Date.now()}-${Math.random().toString(36).substr(2, 4).toUpperCase()}`;\n\n    // Create order\n    const order = new Order({\n      orderNumber,\n      customer: req.user.id,\n      items: validatedItems,\n      subtotal,\n      tax,\n      total,\n      orderType,\n      paymentMethod,\n      deliveryAddress: orderType === 'delivery' ? deliveryAddress : undefined,\n      notes: notes || '',\n      loyaltyPointsEarned: Math.floor(total * 0.1) // 10% of total as points\n    });\n\n    await order.save();\n\n    // Populate the order before sending response\n    await order.populate('items.product', 'name category image');\n\n    res.status(201).json({\n      success: true,\n      data: order,\n      message: 'Order created successfully'\n    });\n  } catch (error) {\n    console.error('Error creating order:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating order'\n    });\n  }\n});\n\n// @route   PUT /api/orders/:id/status\n// @desc    Update order status (for admin use)\n// @access  Private\nrouter.put('/:id/status', auth, async (req, res) => {\n  try {\n    const { status } = req.body;\n    const validStatuses = ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'];\n\n    if (!status || !validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Valid status is required'\n      });\n    }\n\n    const order = await Order.findById(req.params.id);\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if user owns the order or is admin (for now, allow user to cancel their own orders)\n    if (order.customer.toString() !== req.user.id && status !== 'cancelled') {\n      return res.status(403).json({\n        success: false,\n        message: 'Not authorized to update this order'\n      });\n    }\n\n    // Only allow cancellation if order is still pending or confirmed\n    if (status === 'cancelled' && !['pending', 'confirmed'].includes(order.status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order cannot be cancelled at this stage'\n      });\n    }\n\n    order.status = status;\n    if (status === 'completed') {\n      order.actualCompletionTime = new Date();\n    }\n\n    await order.save();\n\n    res.json({\n      success: true,\n      data: order,\n      message: 'Order status updated successfully'\n    });\n  } catch (error) {\n    console.error('Error updating order status:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating order status'\n    });\n  }\n});\n\n// @route   DELETE /api/orders/:id\n// @desc    Cancel/Delete order (only if pending)\n// @access  Private\nrouter.delete('/:id', auth, async (req, res) => {\n  try {\n    const order = await Order.findOne({\n      _id: req.params.id,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Only allow deletion if order is pending\n    if (order.status !== 'pending') {\n      return res.status(400).json({\n        success: false,\n        message: 'Only pending orders can be cancelled'\n      });\n    }\n\n    order.status = 'cancelled';\n    await order.save();\n\n    res.json({\n      success: true,\n      message: 'Order cancelled successfully'\n    });\n  } catch (error) {\n    console.error('Error cancelling order:', error);\n    if (error.name === 'CastError') {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order ID'\n      });\n    }\n    res.status(500).json({\n      success: false,\n      message: 'Server error while cancelling order'\n    });\n  }\n});\n\n// @route   GET /api/orders/stats/summary\n// @desc    Get order statistics for user\n// @access  Private\nrouter.get('/stats/summary', auth, async (req, res) => {\n  try {\n    const userId = req.user.id;\n\n    // Get order counts by status\n    const statusCounts = await Order.aggregate([\n      { $match: { customer: mongoose.Types.ObjectId(userId) } },\n      { $group: { _id: '$status', count: { $sum: 1 } } }\n    ]);\n\n    // Get total spent\n    const totalSpent = await Order.aggregate([\n      { \n        $match: { \n          customer: mongoose.Types.ObjectId(userId),\n          status: { $in: ['completed', 'ready'] }\n        } \n      },\n      { $group: { _id: null, total: { $sum: '$total' } } }\n    ]);\n\n    // Get recent orders count (last 30 days)\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    \n    const recentOrdersCount = await Order.countDocuments({\n      customer: userId,\n      createdAt: { $gte: thirtyDaysAgo }\n    });\n\n    // Get loyalty points\n    const loyaltyPoints = await Order.aggregate([\n      { $match: { customer: mongoose.Types.ObjectId(userId) } },\n      { \n        $group: { \n          _id: null, \n          earned: { $sum: '$loyaltyPointsEarned' },\n          used: { $sum: '$loyaltyPointsUsed' }\n        } \n      }\n    ]);\n\n    res.json({\n      success: true,\n      data: {\n        statusCounts: statusCounts.reduce((acc, item) => {\n          acc[item._id] = item.count;\n          return acc;\n        }, {}),\n        totalSpent: totalSpent[0]?.total || 0,\n        recentOrdersCount,\n        loyaltyPoints: {\n          earned: loyaltyPoints[0]?.earned || 0,\n          used: loyaltyPoints[0]?.used || 0,\n          available: (loyaltyPoints[0]?.earned || 0) - (loyaltyPoints[0]?.used || 0)\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching order statistics:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order statistics'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1756971338295},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\Order.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const mongoose = require('mongoose');\nconst orderItemSchema = new mongoose.Schema({\n  product: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Product',\n    required: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  price: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  quantity: {\n    type: Number,\n    required: true,\n    min: 1\n  },\n  size: {\n    type: String,\n    default: 'Regular'\n  },\n  customizations: [{\n    type: String,\n    trim: true\n  }]\n});\nconst orderSchema = new mongoose.Schema({\n  orderNumber: {\n    type: String,\n    unique: true,\n    required: true\n  },\n  customer: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  items: [orderItemSchema],\n  subtotal: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  tax: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  total: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  status: {\n    type: String,\n    enum: ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'],\n    default: 'pending'\n  },\n  orderType: {\n    type: String,\n    enum: ['pickup', 'delivery', 'dine-in'],\n    required: true\n  },\n  paymentMethod: {\n    type: String,\n    enum: ['cash', 'card', 'digital_wallet', 'momo', 'vnpay'],\n    required: true\n  },\n  paymentStatus: {\n    type: String,\n    enum: ['pending', 'paid', 'failed', 'refunded'],\n    default: 'pending'\n  },\n  // MoMo payment transaction details\n  momoTransaction: {\n    requestId: String,\n    transId: String,\n    payUrl: String,\n    deeplink: String,\n    qrCodeUrl: String,\n    resultCode: Number,\n    message: String,\n    responseTime: String,\n    payType: String\n  },\n  deliveryAddress: {\n    street: String,\n    city: String,\n    state: String,\n    zipCode: String,\n    instructions: String\n  },\n  estimatedTime: {\n    type: Date\n  },\n  actualCompletionTime: {\n    type: Date\n  },\n  notes: {\n    type: String,\n    maxlength: 500\n  },\n  loyaltyPointsEarned: {\n    type: Number,\n    default: 0,\n    min: 0\n  },\n  loyaltyPointsUsed: {\n    type: Number,\n    default: 0,\n    min: 0\n  },\n  // Promotional code information\n  promoCode: {\n    code: String,\n    type: String,\n    value: Number,\n    description: String\n  },\n  discount: {\n    type: Number,\n    default: 0,\n    min: 0\n  }\n}, {\n  timestamps: true\n});\n\n// Index for better performance\norderSchema.index({\n  customer: 1\n});\norderSchema.index({\n  orderNumber: 1\n});\norderSchema.index({\n  status: 1\n});\norderSchema.index({\n  createdAt: -1\n});\n\n// Generate order number before saving\norderSchema.pre('save', async function (next) {\n  if (this.isNew) {\n    const date = new Date();\n    const dateStr = date.toISOString().slice(0, 10).replace(/-/g, '');\n    const randomNum = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\n    this.orderNumber = `WC${dateStr}${randomNum}`;\n  }\n  next();\n});\n\n// Calculate estimated completion time\norderSchema.methods.calculateEstimatedTime = function () {\n  const baseTime = 15; // 15 minutes base time\n  const itemTime = this.items.reduce((total, item) => total + item.quantity * 2, 0);\n  const estimatedMinutes = baseTime + itemTime;\n  this.estimatedTime = new Date(Date.now() + estimatedMinutes * 60000);\n  return this.estimatedTime;\n};\nmodule.exports = mongoose.model('Order', orderSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["mongoose","require","orderItemSchema","Schema","product","type","Types","ObjectId","ref","required","name","String","price","Number","min","quantity","size","default","customizations","trim","orderSchema","orderNumber","unique","customer","items","subtotal","tax","total","status","enum","orderType","paymentMethod","paymentStatus","momoTransaction","requestId","transId","payUrl","deeplink","qrCodeUrl","resultCode","message","responseTime","payType","deliveryAddress","street","city","state","zipCode","instructions","estimatedTime","Date","actualCompletionTime","notes","maxlength","loyaltyPointsEarned","loyaltyPointsUsed","promoCode","code","value","description","discount","timestamps","index","createdAt","pre","next","isNew","date","dateStr","toISOString","slice","replace","randomNum","Math","floor","random","toString","padStart","methods","calculateEstimatedTime","baseTime","itemTime","reduce","item","estimatedMinutes","now","module","exports","model"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\models\\","sources":["Order.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst orderItemSchema = new mongoose.Schema({\n  product: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Product',\n    required: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  price: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  quantity: {\n    type: Number,\n    required: true,\n    min: 1\n  },\n  size: {\n    type: String,\n    default: 'Regular'\n  },\n  customizations: [{\n    type: String,\n    trim: true\n  }]\n});\n\nconst orderSchema = new mongoose.Schema({\n  orderNumber: {\n    type: String,\n    unique: true,\n    required: true\n  },\n  customer: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  items: [orderItemSchema],\n  subtotal: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  tax: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  total: {\n    type: Number,\n    required: true,\n    min: 0\n  },\n  status: {\n    type: String,\n    enum: ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'],\n    default: 'pending'\n  },\n  orderType: {\n    type: String,\n    enum: ['pickup', 'delivery', 'dine-in'],\n    required: true\n  },\n  paymentMethod: {\n    type: String,\n    enum: ['cash', 'card', 'digital_wallet', 'momo', 'vnpay'],\n    required: true\n  },\n  paymentStatus: {\n    type: String,\n    enum: ['pending', 'paid', 'failed', 'refunded'],\n    default: 'pending'\n  },\n  // MoMo payment transaction details\n  momoTransaction: {\n    requestId: String,\n    transId: String,\n    payUrl: String,\n    deeplink: String,\n    qrCodeUrl: String,\n    resultCode: Number,\n    message: String,\n    responseTime: String,\n    payType: String\n  },\n  deliveryAddress: {\n    street: String,\n    city: String,\n    state: String,\n    zipCode: String,\n    instructions: String\n  },\n  estimatedTime: {\n    type: Date\n  },\n  actualCompletionTime: {\n    type: Date\n  },\n  notes: {\n    type: String,\n    maxlength: 500\n  },\n  loyaltyPointsEarned: {\n    type: Number,\n    default: 0,\n    min: 0\n  },\n  loyaltyPointsUsed: {\n    type: Number,\n    default: 0,\n    min: 0\n  },\n  // Promotional code information\n  promoCode: {\n    code: String,\n    type: String,\n    value: Number,\n    description: String\n  },\n  discount: {\n    type: Number,\n    default: 0,\n    min: 0\n  }\n}, {\n  timestamps: true\n});\n\n// Index for better performance\norderSchema.index({ customer: 1 });\norderSchema.index({ orderNumber: 1 });\norderSchema.index({ status: 1 });\norderSchema.index({ createdAt: -1 });\n\n// Generate order number before saving\norderSchema.pre('save', async function(next) {\n  if (this.isNew) {\n    const date = new Date();\n    const dateStr = date.toISOString().slice(0, 10).replace(/-/g, '');\n    const randomNum = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\n    this.orderNumber = `WC${dateStr}${randomNum}`;\n  }\n  next();\n});\n\n// Calculate estimated completion time\norderSchema.methods.calculateEstimatedTime = function() {\n  const baseTime = 15; // 15 minutes base time\n  const itemTime = this.items.reduce((total, item) => total + (item.quantity * 2), 0);\n  const estimatedMinutes = baseTime + itemTime;\n  \n  this.estimatedTime = new Date(Date.now() + estimatedMinutes * 60000);\n  return this.estimatedTime;\n};\n\nmodule.exports = mongoose.model('Order', orderSchema);"],"mappings":"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","ignoreList":[]}},"mtime":1756971338293},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\payments.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst Order = require('../models/Order');\nconst momoService = require('../services/momoService');\nconst vnpayConfig = require('../config/vnpay');\nconst {\n  protect: auth\n} = require('../middleware/auth');\n\n// @route   POST /api/payments/momo/create\n// @desc    Create MoMo payment request\n// @access  Private\nrouter.post('/momo/create', auth, async (req, res) => {\n  try {\n    const {\n      orderId,\n      amount,\n      orderInfo\n    } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Validate amount\n    if (amount <= 0 || amount > 50000000) {\n      // MoMo limit is 50M VND\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid payment amount'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // Create MoMo payment request\n    const paymentResult = await momoService.createPayment({\n      orderId,\n      amount: Math.round(amount),\n      // Ensure amount is integer\n      orderInfo: orderInfo || `Payment for DREAM COFFEE order ${orderId}`,\n      extraData: JSON.stringify({\n        userId: req.user.id,\n        orderNumber: orderId\n      })\n    });\n    if (!paymentResult.success) {\n      return res.status(500).json({\n        success: false,\n        message: 'Failed to create MoMo payment',\n        error: paymentResult.error\n      });\n    }\n\n    // Update order with MoMo transaction details\n    order.momoTransaction = {\n      requestId: paymentResult.requestId,\n      payUrl: paymentResult.data.payUrl,\n      deeplink: paymentResult.data.deeplink,\n      qrCodeUrl: paymentResult.data.qrCodeUrl,\n      resultCode: paymentResult.data.resultCode,\n      message: paymentResult.data.message\n    };\n    await order.save();\n    res.json({\n      success: true,\n      data: {\n        payUrl: paymentResult.data.payUrl,\n        deeplink: paymentResult.data.deeplink,\n        qrCodeUrl: paymentResult.data.qrCodeUrl,\n        requestId: paymentResult.requestId,\n        orderId: orderId,\n        amount: amount\n      },\n      message: 'MoMo payment created successfully'\n    });\n  } catch (error) {\n    console.error('MoMo payment creation error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating MoMo payment'\n    });\n  }\n});\n\n// @route   POST /api/payments/momo/callback\n// @desc    Handle MoMo payment callback (IPN)\n// @access  Public\nrouter.post('/momo/callback', async (req, res) => {\n  try {\n    console.log('MoMo callback received:', req.body);\n    const {\n      partnerCode,\n      orderId,\n      requestId,\n      amount,\n      orderInfo,\n      orderType,\n      transId,\n      resultCode,\n      message,\n      payType,\n      responseTime,\n      extraData,\n      signature\n    } = req.body;\n\n    // Verify callback signature\n    const isValidSignature = momoService.verifyCallback(req.body);\n    if (!isValidSignature) {\n      console.error('Invalid MoMo callback signature');\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid signature'\n      });\n    }\n\n    // Find the order\n    const order = await Order.findOne({\n      orderNumber: orderId\n    });\n    if (!order) {\n      console.error(`Order not found for MoMo callback: ${orderId}`);\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Update order with transaction details\n    order.momoTransaction = {\n      ...order.momoTransaction,\n      transId,\n      resultCode: parseInt(resultCode),\n      message,\n      responseTime,\n      payType\n    };\n\n    // Update payment status based on result code\n    if (resultCode === '0') {\n      // Payment successful\n      order.paymentStatus = 'paid';\n      order.status = 'confirmed';\n      console.log(`MoMo payment successful for order: ${orderId}`);\n    } else {\n      // Payment failed\n      order.paymentStatus = 'failed';\n      console.log(`MoMo payment failed for order: ${orderId}, code: ${resultCode}`);\n    }\n    await order.save();\n\n    // Respond to MoMo\n    res.json({\n      success: true,\n      message: 'Callback processed successfully'\n    });\n  } catch (error) {\n    console.error('MoMo callback processing error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while processing callback'\n    });\n  }\n});\n\n// @route   GET /api/payments/momo/status/:orderId\n// @desc    Check MoMo payment status\n// @access  Private\nrouter.get('/momo/status/:orderId', auth, async (req, res) => {\n  try {\n    const {\n      orderId\n    } = req.params;\n\n    // Find the order\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Return payment status\n    res.json({\n      success: true,\n      data: {\n        orderId: order.orderNumber,\n        paymentStatus: order.paymentStatus,\n        orderStatus: order.status,\n        momoTransaction: order.momoTransaction,\n        amount: order.total\n      }\n    });\n  } catch (error) {\n    console.error('Payment status check error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while checking payment status'\n    });\n  }\n});\n\n// @route   POST /api/payments/momo/return\n// @desc    Handle MoMo payment return URL\n// @access  Public\nrouter.get('/momo/return', async (req, res) => {\n  try {\n    const {\n      partnerCode,\n      orderId,\n      requestId,\n      amount,\n      orderInfo,\n      orderType,\n      transId,\n      resultCode,\n      message,\n      payType,\n      responseTime,\n      extraData,\n      signature\n    } = req.query;\n    console.log('MoMo return URL accessed:', req.query);\n\n    // Verify signature\n    const isValidSignature = momoService.verifyCallback(req.query);\n    if (!isValidSignature) {\n      return res.redirect(`${process.env.FRONTEND_URL}/payment/error?message=Invalid signature`);\n    }\n\n    // Redirect based on payment result\n    if (resultCode === '0') {\n      // Payment successful\n      res.redirect(`${process.env.FRONTEND_URL}/payment/success?orderId=${orderId}&transId=${transId}`);\n    } else {\n      // Payment failed\n      res.redirect(`${process.env.FRONTEND_URL}/payment/error?orderId=${orderId}&message=${encodeURIComponent(message)}`);\n    }\n  } catch (error) {\n    console.error('MoMo return URL error:', error);\n    res.redirect(`${process.env.FRONTEND_URL}/payment/error?message=Processing error`);\n  }\n});\n\n// @route   POST /api/payments/vnpay/create\n// @desc    Create VNPay payment request\n// @access  Private\nrouter.post('/vnpay/create', auth, async (req, res) => {\n  try {\n    const {\n      orderId,\n      amount,\n      orderInfo,\n      bankCode\n    } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Validate amount\n    if (amount <= 0 || amount > 500000000) {\n      // VNPay limit is 500M VND\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid payment amount'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // Get client IP address\n    const ipAddr = req.headers['x-forwarded-for'] || req.connection.remoteAddress || req.socket.remoteAddress || (req.connection.socket ? req.connection.socket.remoteAddress : null) || '127.0.0.1';\n\n    // Debug: Log the parameters being sent to VNPay\n    console.log('VNPay Payment Parameters:', {\n      orderId,\n      amount,\n      orderInfo: orderInfo || `Thanh toan don hang ${orderId}`,\n      ipAddr,\n      bankCode\n    });\n\n    // Create payment URL\n    try {\n      const paymentUrl = vnpayConfig.createPaymentUrl(orderId, amount, orderInfo || `Thanh toan don hang ${orderId}`, ipAddr, bankCode);\n      console.log('Generated VNPay URL:', paymentUrl);\n\n      // Update order with payment method\n      await Order.findByIdAndUpdate(order._id, {\n        paymentMethod: 'vnpay',\n        paymentStatus: 'pending'\n      });\n      res.json({\n        success: true,\n        message: 'VNPay payment URL created successfully',\n        data: {\n          paymentUrl,\n          orderId,\n          amount\n        }\n      });\n    } catch (vnpayError) {\n      console.error('VNPay URL creation error:', vnpayError.message);\n      return res.status(400).json({\n        success: false,\n        message: 'Failed to create payment URL: ' + vnpayError.message\n      });\n    }\n  } catch (error) {\n    console.error('VNPay create payment error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error',\n      error: process.env.NODE_ENV === 'development' ? error.message : undefined\n    });\n  }\n});\n\n// @route   GET /api/payments/vnpay/return\n// @desc    Handle VNPay return URL\n// @access  Public\nrouter.get('/vnpay/return', async (req, res) => {\n  try {\n    const vnp_Params = req.query;\n    const orderId = vnp_Params.vnp_TxnRef;\n    const responseCode = vnp_Params.vnp_ResponseCode;\n    const transactionNo = vnp_Params.vnp_TransactionNo;\n    const amount = vnp_Params.vnp_Amount / 100; // Convert from VND cents\n\n    // Verify the return URL\n    const isValidSignature = vnpayConfig.verifyReturnUrl(vnp_Params);\n    if (!isValidSignature) {\n      return res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Invalid signature`);\n    }\n\n    // Find the order\n    const order = await Order.findOne({\n      orderNumber: orderId\n    });\n    if (!order) {\n      return res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Order not found`);\n    }\n    let paymentStatus = 'failed';\n    let message = vnpayConfig.getPaymentStatus(responseCode);\n    if (responseCode === '00') {\n      paymentStatus = 'paid';\n      // Update order status\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'paid',\n        status: 'confirmed',\n        paymentDetails: {\n          method: 'vnpay',\n          transactionId: transactionNo,\n          amount: amount,\n          responseCode: responseCode,\n          paidAt: new Date()\n        }\n      });\n    } else {\n      // Update order with failed payment\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'failed',\n        paymentDetails: {\n          method: 'vnpay',\n          responseCode: responseCode,\n          failedAt: new Date(),\n          failureReason: message\n        }\n      });\n    }\n\n    // Redirect to frontend with result\n    const redirectUrl = `${process.env.FRONTEND_URL}/checkout/result?status=${paymentStatus}&orderId=${orderId}&message=${encodeURIComponent(message)}`;\n    res.redirect(redirectUrl);\n  } catch (error) {\n    console.error('VNPay return URL error:', error);\n    res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Payment processing error`);\n  }\n});\n\n// @route   POST /api/payments/vnpay/ipn\n// @desc    Handle VNPay IPN (Instant Payment Notification)\n// @access  Public\nrouter.post('/vnpay/ipn', async (req, res) => {\n  try {\n    const vnp_Params = req.query;\n    const orderId = vnp_Params.vnp_TxnRef;\n    const responseCode = vnp_Params.vnp_ResponseCode;\n    const transactionNo = vnp_Params.vnp_TransactionNo;\n    const amount = vnp_Params.vnp_Amount / 100;\n\n    // Verify the IPN\n    const isValidSignature = vnpayConfig.verifyReturnUrl(vnp_Params);\n    if (!isValidSignature) {\n      return res.status(400).json({\n        RspCode: '97',\n        Message: 'Invalid signature'\n      });\n    }\n\n    // Find the order\n    const order = await Order.findOne({\n      orderNumber: orderId\n    });\n    if (!order) {\n      return res.status(400).json({\n        RspCode: '01',\n        Message: 'Order not found'\n      });\n    }\n\n    // Check if order amount matches\n    if (Math.abs(order.total - amount) > 1) {\n      // Allow 1 VND difference for rounding\n      return res.status(400).json({\n        RspCode: '04',\n        Message: 'Invalid amount'\n      });\n    }\n    if (responseCode === '00') {\n      // Payment successful\n      if (order.paymentStatus !== 'paid') {\n        await Order.findByIdAndUpdate(order._id, {\n          paymentStatus: 'paid',\n          status: 'confirmed',\n          paymentDetails: {\n            method: 'vnpay',\n            transactionId: transactionNo,\n            amount: amount,\n            responseCode: responseCode,\n            paidAt: new Date()\n          }\n        });\n      }\n      return res.status(200).json({\n        RspCode: '00',\n        Message: 'Success'\n      });\n    } else {\n      // Payment failed\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'failed',\n        paymentDetails: {\n          method: 'vnpay',\n          responseCode: responseCode,\n          failedAt: new Date(),\n          failureReason: vnpayConfig.getPaymentStatus(responseCode)\n        }\n      });\n      return res.status(200).json({\n        RspCode: '00',\n        Message: 'Success'\n      });\n    }\n  } catch (error) {\n    console.error('VNPay IPN error:', error);\n    res.status(500).json({\n      RspCode: '99',\n      Message: 'Internal server error'\n    });\n  }\n});\n\n// @route   GET /api/payments/vnpay/status/:orderId\n// @desc    Get VNPay payment status\n// @access  Private\nrouter.get('/vnpay/status/:orderId', auth, async (req, res) => {\n  try {\n    const {\n      orderId\n    } = req.params;\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: {\n        orderId: order.orderNumber,\n        paymentStatus: order.paymentStatus,\n        paymentMethod: order.paymentMethod,\n        paymentDetails: order.paymentDetails,\n        totalAmount: order.total\n      }\n    });\n  } catch (error) {\n    console.error('Get VNPay status error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error'\n    });\n  }\n});\n\n// @route   POST /api/payments/card/process\n// @desc    Process card payment\n// @access  Private\nrouter.post('/card/process', auth, async (req, res) => {\n  try {\n    const {\n      orderId,\n      amount,\n      cardData\n    } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // In a real implementation, you would:\n    // 1. Validate card details with a payment processor (Stripe, Square, etc.)\n    // 2. Process the actual payment\n    // 3. Handle payment success/failure\n\n    // For demo purposes, we'll simulate a successful payment\n    // In production, NEVER store full card details in your database\n\n    // Simulate payment processing delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Update order with payment details\n    order.paymentStatus = 'paid';\n    order.status = 'confirmed';\n    order.paymentDetails = {\n      method: 'card',\n      lastFour: cardData.lastFour,\n      cardholderName: cardData.cardholderName,\n      paidAt: new Date(),\n      transactionId: `card_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n    await order.save();\n    res.json({\n      success: true,\n      message: 'Card payment processed successfully',\n      data: {\n        orderId: order.orderNumber,\n        transactionId: order.paymentDetails.transactionId,\n        amount: amount\n      }\n    });\n  } catch (error) {\n    console.error('Card payment processing error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while processing card payment'\n    });\n  }\n});\n\n// @route   POST /api/payments/cash/confirm\n// @desc    Confirm cash payment order\n// @access  Private\nrouter.post('/cash/confirm', auth, async (req, res) => {\n  try {\n    const {\n      orderId,\n      amount\n    } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already confirmed\n    if (order.status === 'confirmed' || order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already confirmed'\n      });\n    }\n\n    // Update order status for cash payment\n    // Cash orders are confirmed but payment status remains pending until actual payment\n    order.status = 'confirmed';\n    order.paymentDetails = {\n      method: 'cash',\n      confirmedAt: new Date(),\n      orderType: order.orderType // delivery or pickup\n    };\n    await order.save();\n    res.json({\n      success: true,\n      message: 'Cash payment order confirmed successfully',\n      data: {\n        orderId: order.orderNumber,\n        status: order.status,\n        paymentMethod: 'cash',\n        orderType: order.orderType\n      }\n    });\n  } catch (error) {\n    console.error('Cash payment confirmation error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while confirming cash payment'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","Order","momoService","vnpayConfig","protect","auth","post","req","res","orderId","amount","orderInfo","body","status","json","success","message","order","findOne","orderNumber","customer","user","id","paymentStatus","paymentResult","createPayment","Math","round","extraData","JSON","stringify","userId","error","momoTransaction","requestId","payUrl","data","deeplink","qrCodeUrl","resultCode","save","console","log","partnerCode","orderType","transId","payType","responseTime","signature","isValidSignature","verifyCallback","parseInt","get","params","orderStatus","total","query","redirect","process","env","FRONTEND_URL","encodeURIComponent","bankCode","ipAddr","headers","connection","remoteAddress","socket","paymentUrl","createPaymentUrl","findByIdAndUpdate","_id","paymentMethod","vnpayError","NODE_ENV","undefined","vnp_Params","vnp_TxnRef","responseCode","vnp_ResponseCode","transactionNo","vnp_TransactionNo","vnp_Amount","verifyReturnUrl","getPaymentStatus","paymentDetails","method","transactionId","paidAt","Date","failedAt","failureReason","redirectUrl","RspCode","Message","abs","totalAmount","cardData","Promise","resolve","setTimeout","lastFour","cardholderName","now","random","toString","substr","confirmedAt","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["payments.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Order = require('../models/Order');\nconst momoService = require('../services/momoService');\nconst vnpayConfig = require('../config/vnpay');\nconst { protect: auth } = require('../middleware/auth');\n\n// @route   POST /api/payments/momo/create\n// @desc    Create MoMo payment request\n// @access  Private\nrouter.post('/momo/create', auth, async (req, res) => {\n  try {\n    const { orderId, amount, orderInfo } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Validate amount\n    if (amount <= 0 || amount > 50000000) { // MoMo limit is 50M VND\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid payment amount'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // Create MoMo payment request\n    const paymentResult = await momoService.createPayment({\n      orderId,\n      amount: Math.round(amount), // Ensure amount is integer\n      orderInfo: orderInfo || `Payment for DREAM COFFEE order ${orderId}`,\n      extraData: JSON.stringify({\n        userId: req.user.id,\n        orderNumber: orderId\n      })\n    });\n\n    if (!paymentResult.success) {\n      return res.status(500).json({\n        success: false,\n        message: 'Failed to create MoMo payment',\n        error: paymentResult.error\n      });\n    }\n\n    // Update order with MoMo transaction details\n    order.momoTransaction = {\n      requestId: paymentResult.requestId,\n      payUrl: paymentResult.data.payUrl,\n      deeplink: paymentResult.data.deeplink,\n      qrCodeUrl: paymentResult.data.qrCodeUrl,\n      resultCode: paymentResult.data.resultCode,\n      message: paymentResult.data.message\n    };\n    \n    await order.save();\n\n    res.json({\n      success: true,\n      data: {\n        payUrl: paymentResult.data.payUrl,\n        deeplink: paymentResult.data.deeplink,\n        qrCodeUrl: paymentResult.data.qrCodeUrl,\n        requestId: paymentResult.requestId,\n        orderId: orderId,\n        amount: amount\n      },\n      message: 'MoMo payment created successfully'\n    });\n  } catch (error) {\n    console.error('MoMo payment creation error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while creating MoMo payment'\n    });\n  }\n});\n\n// @route   POST /api/payments/momo/callback\n// @desc    Handle MoMo payment callback (IPN)\n// @access  Public\nrouter.post('/momo/callback', async (req, res) => {\n  try {\n    console.log('MoMo callback received:', req.body);\n\n    const {\n      partnerCode,\n      orderId,\n      requestId,\n      amount,\n      orderInfo,\n      orderType,\n      transId,\n      resultCode,\n      message,\n      payType,\n      responseTime,\n      extraData,\n      signature\n    } = req.body;\n\n    // Verify callback signature\n    const isValidSignature = momoService.verifyCallback(req.body);\n    \n    if (!isValidSignature) {\n      console.error('Invalid MoMo callback signature');\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid signature'\n      });\n    }\n\n    // Find the order\n    const order = await Order.findOne({ orderNumber: orderId });\n    \n    if (!order) {\n      console.error(`Order not found for MoMo callback: ${orderId}`);\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Update order with transaction details\n    order.momoTransaction = {\n      ...order.momoTransaction,\n      transId,\n      resultCode: parseInt(resultCode),\n      message,\n      responseTime,\n      payType\n    };\n\n    // Update payment status based on result code\n    if (resultCode === '0') {\n      // Payment successful\n      order.paymentStatus = 'paid';\n      order.status = 'confirmed';\n      console.log(`MoMo payment successful for order: ${orderId}`);\n    } else {\n      // Payment failed\n      order.paymentStatus = 'failed';\n      console.log(`MoMo payment failed for order: ${orderId}, code: ${resultCode}`);\n    }\n\n    await order.save();\n\n    // Respond to MoMo\n    res.json({\n      success: true,\n      message: 'Callback processed successfully'\n    });\n  } catch (error) {\n    console.error('MoMo callback processing error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while processing callback'\n    });\n  }\n});\n\n// @route   GET /api/payments/momo/status/:orderId\n// @desc    Check MoMo payment status\n// @access  Private\nrouter.get('/momo/status/:orderId', auth, async (req, res) => {\n  try {\n    const { orderId } = req.params;\n\n    // Find the order\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Return payment status\n    res.json({\n      success: true,\n      data: {\n        orderId: order.orderNumber,\n        paymentStatus: order.paymentStatus,\n        orderStatus: order.status,\n        momoTransaction: order.momoTransaction,\n        amount: order.total\n      }\n    });\n  } catch (error) {\n    console.error('Payment status check error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while checking payment status'\n    });\n  }\n});\n\n// @route   POST /api/payments/momo/return\n// @desc    Handle MoMo payment return URL\n// @access  Public\nrouter.get('/momo/return', async (req, res) => {\n  try {\n    const {\n      partnerCode,\n      orderId,\n      requestId,\n      amount,\n      orderInfo,\n      orderType,\n      transId,\n      resultCode,\n      message,\n      payType,\n      responseTime,\n      extraData,\n      signature\n    } = req.query;\n\n    console.log('MoMo return URL accessed:', req.query);\n\n    // Verify signature\n    const isValidSignature = momoService.verifyCallback(req.query);\n    \n    if (!isValidSignature) {\n      return res.redirect(`${process.env.FRONTEND_URL}/payment/error?message=Invalid signature`);\n    }\n\n    // Redirect based on payment result\n    if (resultCode === '0') {\n      // Payment successful\n      res.redirect(`${process.env.FRONTEND_URL}/payment/success?orderId=${orderId}&transId=${transId}`);\n    } else {\n      // Payment failed\n      res.redirect(`${process.env.FRONTEND_URL}/payment/error?orderId=${orderId}&message=${encodeURIComponent(message)}`);\n    }\n  } catch (error) {\n    console.error('MoMo return URL error:', error);\n    res.redirect(`${process.env.FRONTEND_URL}/payment/error?message=Processing error`);\n  }\n});\n\n// @route   POST /api/payments/vnpay/create\n// @desc    Create VNPay payment request\n// @access  Private\nrouter.post('/vnpay/create', auth, async (req, res) => {\n  try {\n    const { orderId, amount, orderInfo, bankCode } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Validate amount\n    if (amount <= 0 || amount > 500000000) { // VNPay limit is 500M VND\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid payment amount'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // Get client IP address\n    const ipAddr = req.headers['x-forwarded-for'] ||\n                   req.connection.remoteAddress ||\n                   req.socket.remoteAddress ||\n                   (req.connection.socket ? req.connection.socket.remoteAddress : null) ||\n                   '127.0.0.1';\n\n    // Debug: Log the parameters being sent to VNPay\n    console.log('VNPay Payment Parameters:', {\n      orderId,\n      amount,\n      orderInfo: orderInfo || `Thanh toan don hang ${orderId}`,\n      ipAddr,\n      bankCode\n    });\n\n    // Create payment URL\n    try {\n      const paymentUrl = vnpayConfig.createPaymentUrl(\n        orderId,\n        amount,\n        orderInfo || `Thanh toan don hang ${orderId}`,\n        ipAddr,\n        bankCode\n      );\n\n      console.log('Generated VNPay URL:', paymentUrl);\n\n      // Update order with payment method\n      await Order.findByIdAndUpdate(order._id, {\n        paymentMethod: 'vnpay',\n        paymentStatus: 'pending'\n      });\n\n      res.json({\n        success: true,\n        message: 'VNPay payment URL created successfully',\n        data: {\n          paymentUrl,\n          orderId,\n          amount\n        }\n      });\n    } catch (vnpayError) {\n      console.error('VNPay URL creation error:', vnpayError.message);\n      return res.status(400).json({\n        success: false,\n        message: 'Failed to create payment URL: ' + vnpayError.message\n      });\n    }\n\n  } catch (error) {\n    console.error('VNPay create payment error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error',\n      error: process.env.NODE_ENV === 'development' ? error.message : undefined\n    });\n  }\n});\n\n// @route   GET /api/payments/vnpay/return\n// @desc    Handle VNPay return URL\n// @access  Public\nrouter.get('/vnpay/return', async (req, res) => {\n  try {\n    const vnp_Params = req.query;\n    const orderId = vnp_Params.vnp_TxnRef;\n    const responseCode = vnp_Params.vnp_ResponseCode;\n    const transactionNo = vnp_Params.vnp_TransactionNo;\n    const amount = vnp_Params.vnp_Amount / 100; // Convert from VND cents\n\n    // Verify the return URL\n    const isValidSignature = vnpayConfig.verifyReturnUrl(vnp_Params);\n\n    if (!isValidSignature) {\n      return res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Invalid signature`);\n    }\n\n    // Find the order\n    const order = await Order.findOne({ orderNumber: orderId });\n    if (!order) {\n      return res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Order not found`);\n    }\n\n    let paymentStatus = 'failed';\n    let message = vnpayConfig.getPaymentStatus(responseCode);\n\n    if (responseCode === '00') {\n      paymentStatus = 'paid';\n      // Update order status\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'paid',\n        status: 'confirmed',\n        paymentDetails: {\n          method: 'vnpay',\n          transactionId: transactionNo,\n          amount: amount,\n          responseCode: responseCode,\n          paidAt: new Date()\n        }\n      });\n    } else {\n      // Update order with failed payment\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'failed',\n        paymentDetails: {\n          method: 'vnpay',\n          responseCode: responseCode,\n          failedAt: new Date(),\n          failureReason: message\n        }\n      });\n    }\n\n    // Redirect to frontend with result\n    const redirectUrl = `${process.env.FRONTEND_URL}/checkout/result?status=${paymentStatus}&orderId=${orderId}&message=${encodeURIComponent(message)}`;\n    res.redirect(redirectUrl);\n\n  } catch (error) {\n    console.error('VNPay return URL error:', error);\n    res.redirect(`${process.env.FRONTEND_URL}/checkout/result?status=error&message=Payment processing error`);\n  }\n});\n\n// @route   POST /api/payments/vnpay/ipn\n// @desc    Handle VNPay IPN (Instant Payment Notification)\n// @access  Public\nrouter.post('/vnpay/ipn', async (req, res) => {\n  try {\n    const vnp_Params = req.query;\n    const orderId = vnp_Params.vnp_TxnRef;\n    const responseCode = vnp_Params.vnp_ResponseCode;\n    const transactionNo = vnp_Params.vnp_TransactionNo;\n    const amount = vnp_Params.vnp_Amount / 100;\n\n    // Verify the IPN\n    const isValidSignature = vnpayConfig.verifyReturnUrl(vnp_Params);\n\n    if (!isValidSignature) {\n      return res.status(400).json({ RspCode: '97', Message: 'Invalid signature' });\n    }\n\n    // Find the order\n    const order = await Order.findOne({ orderNumber: orderId });\n    if (!order) {\n      return res.status(400).json({ RspCode: '01', Message: 'Order not found' });\n    }\n\n    // Check if order amount matches\n    if (Math.abs(order.total - amount) > 1) { // Allow 1 VND difference for rounding\n      return res.status(400).json({ RspCode: '04', Message: 'Invalid amount' });\n    }\n\n    if (responseCode === '00') {\n      // Payment successful\n      if (order.paymentStatus !== 'paid') {\n        await Order.findByIdAndUpdate(order._id, {\n          paymentStatus: 'paid',\n          status: 'confirmed',\n          paymentDetails: {\n            method: 'vnpay',\n            transactionId: transactionNo,\n            amount: amount,\n            responseCode: responseCode,\n            paidAt: new Date()\n          }\n        });\n      }\n      return res.status(200).json({ RspCode: '00', Message: 'Success' });\n    } else {\n      // Payment failed\n      await Order.findByIdAndUpdate(order._id, {\n        paymentStatus: 'failed',\n        paymentDetails: {\n          method: 'vnpay',\n          responseCode: responseCode,\n          failedAt: new Date(),\n          failureReason: vnpayConfig.getPaymentStatus(responseCode)\n        }\n      });\n      return res.status(200).json({ RspCode: '00', Message: 'Success' });\n    }\n\n  } catch (error) {\n    console.error('VNPay IPN error:', error);\n    res.status(500).json({ RspCode: '99', Message: 'Internal server error' });\n  }\n});\n\n// @route   GET /api/payments/vnpay/status/:orderId\n// @desc    Get VNPay payment status\n// @access  Private\nrouter.get('/vnpay/status/:orderId', auth, async (req, res) => {\n  try {\n    const { orderId } = req.params;\n\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: {\n        orderId: order.orderNumber,\n        paymentStatus: order.paymentStatus,\n        paymentMethod: order.paymentMethod,\n        paymentDetails: order.paymentDetails,\n        totalAmount: order.total\n      }\n    });\n\n  } catch (error) {\n    console.error('Get VNPay status error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error'\n    });\n  }\n});\n\n// @route   POST /api/payments/card/process\n// @desc    Process card payment\n// @access  Private\nrouter.post('/card/process', auth, async (req, res) => {\n  try {\n    const { orderId, amount, cardData } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already paid\n    if (order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already paid'\n      });\n    }\n\n    // In a real implementation, you would:\n    // 1. Validate card details with a payment processor (Stripe, Square, etc.)\n    // 2. Process the actual payment\n    // 3. Handle payment success/failure\n    \n    // For demo purposes, we'll simulate a successful payment\n    // In production, NEVER store full card details in your database\n    \n    // Simulate payment processing delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Update order with payment details\n    order.paymentStatus = 'paid';\n    order.status = 'confirmed';\n    order.paymentDetails = {\n      method: 'card',\n      lastFour: cardData.lastFour,\n      cardholderName: cardData.cardholderName,\n      paidAt: new Date(),\n      transactionId: `card_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n    \n    await order.save();\n\n    res.json({\n      success: true,\n      message: 'Card payment processed successfully',\n      data: {\n        orderId: order.orderNumber,\n        transactionId: order.paymentDetails.transactionId,\n        amount: amount\n      }\n    });\n  } catch (error) {\n    console.error('Card payment processing error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while processing card payment'\n    });\n  }\n});\n\n// @route   POST /api/payments/cash/confirm\n// @desc    Confirm cash payment order\n// @access  Private\nrouter.post('/cash/confirm', auth, async (req, res) => {\n  try {\n    const { orderId, amount } = req.body;\n\n    // Validate required fields\n    if (!orderId || !amount) {\n      return res.status(400).json({\n        success: false,\n        message: 'Order ID and amount are required'\n      });\n    }\n\n    // Find the order to verify it belongs to the user\n    const order = await Order.findOne({\n      orderNumber: orderId,\n      customer: req.user.id\n    });\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    // Check if order is already confirmed\n    if (order.status === 'confirmed' || order.paymentStatus === 'paid') {\n      return res.status(400).json({\n        success: false,\n        message: 'Order is already confirmed'\n      });\n    }\n\n    // Update order status for cash payment\n    // Cash orders are confirmed but payment status remains pending until actual payment\n    order.status = 'confirmed';\n    order.paymentDetails = {\n      method: 'cash',\n      confirmedAt: new Date(),\n      orderType: order.orderType // delivery or pickup\n    };\n    \n    await order.save();\n\n    res.json({\n      success: true,\n      message: 'Cash payment order confirmed successfully',\n      data: {\n        orderId: order.orderNumber,\n        status: order.status,\n        paymentMethod: 'cash',\n        orderType: order.orderType\n      }\n    });\n  } catch (error) {\n    console.error('Cash payment confirmation error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while confirming cash payment'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757007726437},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\services\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\services\\\\momoService.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const crypto = require('crypto');\nconst https = require('https');\nclass MoMoService {\n  constructor() {\n    // MoMo API configuration - these should be moved to environment variables in production\n    this.config = {\n      accessKey: process.env.MOMO_ACCESS_KEY || 'F8BBA842ECF85',\n      secretKey: process.env.MOMO_SECRET_KEY || 'K951B6PE1waDMi640xX08PD3vg6EkVlz',\n      partnerCode: process.env.MOMO_PARTNER_CODE || 'MOMO',\n      redirectUrl: process.env.MOMO_REDIRECT_URL || 'http://localhost:5173/momo/return',\n      ipnUrl: process.env.MOMO_IPN_URL || 'http://localhost:5003/api/payments/momo/callback',\n      requestType: 'payWithMethod',\n      autoCapture: true,\n      lang: 'vi',\n      endpoint: process.env.MOMO_ENDPOINT || 'https://test-payment.momo.vn/v2/gateway/api/create'\n    };\n  }\n\n  /**\n   * Generate HMAC SHA256 signature for MoMo API\n   * @param {string} rawSignature - Raw signature string\n   * @returns {string} - Generated signature\n   */\n  generateSignature(rawSignature) {\n    return crypto.createHmac('sha256', this.config.secretKey).update(rawSignature).digest('hex');\n  }\n\n  /**\n   * Create MoMo payment request\n   * @param {Object} paymentData - Payment information\n   * @param {string} paymentData.orderId - Order ID\n   * @param {number} paymentData.amount - Payment amount\n   * @param {string} paymentData.orderInfo - Order description\n   * @param {string} paymentData.extraData - Additional data (optional)\n   * @returns {Promise<Object>} - MoMo payment response\n   */\n  async createPayment(paymentData) {\n    try {\n      const {\n        orderId,\n        amount,\n        orderInfo = 'Payment for DREAM COFFEE order',\n        extraData = ''\n      } = paymentData;\n\n      // Generate unique request ID\n      const requestId = `${this.config.partnerCode}${Date.now()}`;\n\n      // Create raw signature string\n      const rawSignature = [`accessKey=${this.config.accessKey}`, `amount=${amount}`, `extraData=${extraData}`, `ipnUrl=${this.config.ipnUrl}`, `orderId=${orderId}`, `orderInfo=${orderInfo}`, `partnerCode=${this.config.partnerCode}`, `redirectUrl=${this.config.redirectUrl}`, `requestId=${requestId}`, `requestType=${this.config.requestType}`].join('&');\n\n      // Generate signature\n      const signature = this.generateSignature(rawSignature);\n\n      // Prepare request body\n      const requestBody = {\n        partnerCode: this.config.partnerCode,\n        partnerName: 'DREAM COFFEE',\n        storeId: 'DreamCoffeeStore',\n        requestId,\n        amount: amount.toString(),\n        orderId,\n        orderInfo,\n        redirectUrl: this.config.redirectUrl,\n        ipnUrl: this.config.ipnUrl,\n        lang: this.config.lang,\n        requestType: this.config.requestType,\n        autoCapture: this.config.autoCapture,\n        extraData,\n        signature\n      };\n      console.log('MoMo Payment Request:', {\n        orderId,\n        amount,\n        requestId,\n        rawSignature\n      });\n\n      // Make request to MoMo API\n      const response = await this.makeHttpsRequest(requestBody);\n      return {\n        success: true,\n        data: response,\n        requestId,\n        orderId\n      };\n    } catch (error) {\n      console.error('MoMo payment creation failed:', error);\n      return {\n        success: false,\n        error: error.message,\n        code: error.code || 'MOMO_ERROR'\n      };\n    }\n  }\n\n  /**\n   * Make HTTPS request to MoMo API\n   * @param {Object} requestBody - Request payload\n   * @returns {Promise<Object>} - API response\n   */\n  makeHttpsRequest(requestBody) {\n    return new Promise((resolve, reject) => {\n      const postData = JSON.stringify(requestBody);\n      const options = {\n        hostname: 'test-payment.momo.vn',\n        port: 443,\n        path: '/v2/gateway/api/create',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Content-Length': Buffer.byteLength(postData)\n        }\n      };\n      const req = https.request(options, res => {\n        let data = '';\n        res.on('data', chunk => {\n          data += chunk;\n        });\n        res.on('end', () => {\n          try {\n            const response = JSON.parse(data);\n            console.log('MoMo API Response:', {\n              status: res.statusCode,\n              resultCode: response.resultCode,\n              message: response.message\n            });\n            if (res.statusCode === 200) {\n              resolve(response);\n            } else {\n              reject(new Error(`HTTP ${res.statusCode}: ${response.message || 'Unknown error'}`));\n            }\n          } catch (parseError) {\n            reject(new Error(`Failed to parse MoMo response: ${parseError.message}`));\n          }\n        });\n      });\n      req.on('error', error => {\n        console.error('MoMo HTTPS request error:', error);\n        reject(new Error(`Network error: ${error.message}`));\n      });\n      req.on('timeout', () => {\n        req.destroy();\n        reject(new Error('Request timeout'));\n      });\n\n      // Set timeout\n      req.setTimeout(30000); // 30 seconds\n\n      // Send request\n      req.write(postData);\n      req.end();\n    });\n  }\n\n  /**\n   * Verify MoMo callback signature\n   * @param {Object} callbackData - Callback data from MoMo\n   * @returns {boolean} - Signature verification result\n   */\n  verifyCallback(callbackData) {\n    try {\n      const {\n        partnerCode,\n        orderId,\n        requestId,\n        amount,\n        orderInfo,\n        orderType,\n        transId,\n        resultCode,\n        message,\n        payType,\n        responseTime,\n        extraData,\n        signature\n      } = callbackData;\n\n      // Create raw signature for verification\n      const rawSignature = [`accessKey=${this.config.accessKey}`, `amount=${amount}`, `extraData=${extraData}`, `message=${message}`, `orderId=${orderId}`, `orderInfo=${orderInfo}`, `orderType=${orderType}`, `partnerCode=${partnerCode}`, `payType=${payType}`, `requestId=${requestId}`, `responseTime=${responseTime}`, `resultCode=${resultCode}`, `transId=${transId}`].join('&');\n      const expectedSignature = this.generateSignature(rawSignature);\n      return signature === expectedSignature;\n    } catch (error) {\n      console.error('MoMo callback verification failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check payment status\n   * @param {string} orderId - Order ID\n   * @param {string} requestId - Request ID\n   * @returns {Promise<Object>} - Payment status\n   */\n  async checkPaymentStatus(orderId, requestId) {\n    try {\n      // This would typically call MoMo's query API\n      // For now, we'll return a placeholder response\n      return {\n        success: true,\n        resultCode: 0,\n        message: 'Payment status check not implemented yet'\n      };\n    } catch (error) {\n      console.error('Payment status check failed:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n}\nmodule.exports = new MoMoService();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["crypto","require","https","MoMoService","constructor","config","accessKey","process","env","MOMO_ACCESS_KEY","secretKey","MOMO_SECRET_KEY","partnerCode","MOMO_PARTNER_CODE","redirectUrl","MOMO_REDIRECT_URL","ipnUrl","MOMO_IPN_URL","requestType","autoCapture","lang","endpoint","MOMO_ENDPOINT","generateSignature","rawSignature","createHmac","update","digest","createPayment","paymentData","orderId","amount","orderInfo","extraData","requestId","Date","now","join","signature","requestBody","partnerName","storeId","toString","console","log","response","makeHttpsRequest","success","data","error","message","code","Promise","resolve","reject","postData","JSON","stringify","options","hostname","port","path","method","headers","Buffer","byteLength","req","request","res","on","chunk","parse","status","statusCode","resultCode","Error","parseError","destroy","setTimeout","write","end","verifyCallback","callbackData","orderType","transId","payType","responseTime","expectedSignature","checkPaymentStatus","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\services\\","sources":["momoService.js"],"sourcesContent":["const crypto = require('crypto');\nconst https = require('https');\n\nclass MoMoService {\n  constructor() {\n    // MoMo API configuration - these should be moved to environment variables in production\n    this.config = {\n      accessKey: process.env.MOMO_ACCESS_KEY || 'F8BBA842ECF85',\n      secretKey: process.env.MOMO_SECRET_KEY || 'K951B6PE1waDMi640xX08PD3vg6EkVlz',\n      partnerCode: process.env.MOMO_PARTNER_CODE || 'MOMO',\n      redirectUrl: process.env.MOMO_REDIRECT_URL || 'http://localhost:5173/momo/return',\n      ipnUrl: process.env.MOMO_IPN_URL || 'http://localhost:5003/api/payments/momo/callback',\n      requestType: 'payWithMethod',\n      autoCapture: true,\n      lang: 'vi',\n      endpoint: process.env.MOMO_ENDPOINT || 'https://test-payment.momo.vn/v2/gateway/api/create'\n    };\n  }\n\n  /**\n   * Generate HMAC SHA256 signature for MoMo API\n   * @param {string} rawSignature - Raw signature string\n   * @returns {string} - Generated signature\n   */\n  generateSignature(rawSignature) {\n    return crypto\n      .createHmac('sha256', this.config.secretKey)\n      .update(rawSignature)\n      .digest('hex');\n  }\n\n  /**\n   * Create MoMo payment request\n   * @param {Object} paymentData - Payment information\n   * @param {string} paymentData.orderId - Order ID\n   * @param {number} paymentData.amount - Payment amount\n   * @param {string} paymentData.orderInfo - Order description\n   * @param {string} paymentData.extraData - Additional data (optional)\n   * @returns {Promise<Object>} - MoMo payment response\n   */\n  async createPayment(paymentData) {\n    try {\n      const {\n        orderId,\n        amount,\n        orderInfo = 'Payment for DREAM COFFEE order',\n        extraData = ''\n      } = paymentData;\n\n      // Generate unique request ID\n      const requestId = `${this.config.partnerCode}${Date.now()}`;\n      \n      // Create raw signature string\n      const rawSignature = [\n        `accessKey=${this.config.accessKey}`,\n        `amount=${amount}`,\n        `extraData=${extraData}`,\n        `ipnUrl=${this.config.ipnUrl}`,\n        `orderId=${orderId}`,\n        `orderInfo=${orderInfo}`,\n        `partnerCode=${this.config.partnerCode}`,\n        `redirectUrl=${this.config.redirectUrl}`,\n        `requestId=${requestId}`,\n        `requestType=${this.config.requestType}`\n      ].join('&');\n\n      // Generate signature\n      const signature = this.generateSignature(rawSignature);\n\n      // Prepare request body\n      const requestBody = {\n        partnerCode: this.config.partnerCode,\n        partnerName: 'DREAM COFFEE',\n        storeId: 'DreamCoffeeStore',\n        requestId,\n        amount: amount.toString(),\n        orderId,\n        orderInfo,\n        redirectUrl: this.config.redirectUrl,\n        ipnUrl: this.config.ipnUrl,\n        lang: this.config.lang,\n        requestType: this.config.requestType,\n        autoCapture: this.config.autoCapture,\n        extraData,\n        signature\n      };\n\n      console.log('MoMo Payment Request:', {\n        orderId,\n        amount,\n        requestId,\n        rawSignature\n      });\n\n      // Make request to MoMo API\n      const response = await this.makeHttpsRequest(requestBody);\n      \n      return {\n        success: true,\n        data: response,\n        requestId,\n        orderId\n      };\n    } catch (error) {\n      console.error('MoMo payment creation failed:', error);\n      return {\n        success: false,\n        error: error.message,\n        code: error.code || 'MOMO_ERROR'\n      };\n    }\n  }\n\n  /**\n   * Make HTTPS request to MoMo API\n   * @param {Object} requestBody - Request payload\n   * @returns {Promise<Object>} - API response\n   */\n  makeHttpsRequest(requestBody) {\n    return new Promise((resolve, reject) => {\n      const postData = JSON.stringify(requestBody);\n      \n      const options = {\n        hostname: 'test-payment.momo.vn',\n        port: 443,\n        path: '/v2/gateway/api/create',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Content-Length': Buffer.byteLength(postData)\n        }\n      };\n\n      const req = https.request(options, (res) => {\n        let data = '';\n        \n        res.on('data', (chunk) => {\n          data += chunk;\n        });\n        \n        res.on('end', () => {\n          try {\n            const response = JSON.parse(data);\n            console.log('MoMo API Response:', {\n              status: res.statusCode,\n              resultCode: response.resultCode,\n              message: response.message\n            });\n            \n            if (res.statusCode === 200) {\n              resolve(response);\n            } else {\n              reject(new Error(`HTTP ${res.statusCode}: ${response.message || 'Unknown error'}`));\n            }\n          } catch (parseError) {\n            reject(new Error(`Failed to parse MoMo response: ${parseError.message}`));\n          }\n        });\n      });\n\n      req.on('error', (error) => {\n        console.error('MoMo HTTPS request error:', error);\n        reject(new Error(`Network error: ${error.message}`));\n      });\n\n      req.on('timeout', () => {\n        req.destroy();\n        reject(new Error('Request timeout'));\n      });\n\n      // Set timeout\n      req.setTimeout(30000); // 30 seconds\n      \n      // Send request\n      req.write(postData);\n      req.end();\n    });\n  }\n\n  /**\n   * Verify MoMo callback signature\n   * @param {Object} callbackData - Callback data from MoMo\n   * @returns {boolean} - Signature verification result\n   */\n  verifyCallback(callbackData) {\n    try {\n      const {\n        partnerCode,\n        orderId,\n        requestId,\n        amount,\n        orderInfo,\n        orderType,\n        transId,\n        resultCode,\n        message,\n        payType,\n        responseTime,\n        extraData,\n        signature\n      } = callbackData;\n\n      // Create raw signature for verification\n      const rawSignature = [\n        `accessKey=${this.config.accessKey}`,\n        `amount=${amount}`,\n        `extraData=${extraData}`,\n        `message=${message}`,\n        `orderId=${orderId}`,\n        `orderInfo=${orderInfo}`,\n        `orderType=${orderType}`,\n        `partnerCode=${partnerCode}`,\n        `payType=${payType}`,\n        `requestId=${requestId}`,\n        `responseTime=${responseTime}`,\n        `resultCode=${resultCode}`,\n        `transId=${transId}`\n      ].join('&');\n\n      const expectedSignature = this.generateSignature(rawSignature);\n      \n      return signature === expectedSignature;\n    } catch (error) {\n      console.error('MoMo callback verification failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check payment status\n   * @param {string} orderId - Order ID\n   * @param {string} requestId - Request ID\n   * @returns {Promise<Object>} - Payment status\n   */\n  async checkPaymentStatus(orderId, requestId) {\n    try {\n      // This would typically call MoMo's query API\n      // For now, we'll return a placeholder response\n      return {\n        success: true,\n        resultCode: 0,\n        message: 'Payment status check not implemented yet'\n      };\n    } catch (error) {\n      console.error('Payment status check failed:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n}\n\nmodule.exports = new MoMoService();"],"mappings":"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","ignoreList":[]}},"mtime":1757007727186},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\config\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\config\\\\vnpay.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const crypto = require('crypto');\nclass VNPayConfig {\n  constructor() {\n    this.vnp_TmnCode = process.env.VNP_TMNCODE;\n    this.vnp_HashSecret = process.env.VNP_HASHSECRET;\n    this.vnp_Url = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html';\n    this.vnp_ReturnUrl = process.env.VNP_RETURN_URL;\n    this.vnp_IpnUrl = process.env.VNP_IPN_URL || `${process.env.VNP_RETURN_URL}/ipn`;\n    this.vnp_Version = '2.1.0';\n    this.vnp_Command = 'pay';\n    this.vnp_CurrCode = 'VND';\n    this.vnp_Locale = 'vn';\n  }\n\n  // Sort object by key\n  sortObject(obj) {\n    let sorted = {};\n    let str = [];\n    let key;\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        str.push(encodeURIComponent(key));\n      }\n    }\n    str.sort();\n    for (key = 0; key < str.length; key++) {\n      sorted[str[key]] = encodeURIComponent(obj[str[key]]).replace(/%20/g, \"+\");\n    }\n    return sorted;\n  }\n\n  // Create payment URL\n  createPaymentUrl(orderId, amount, orderInfo, ipAddr, bankCode = '') {\n    // Validate required parameters\n    if (!orderId || !amount || !orderInfo || !ipAddr) {\n      throw new Error('Missing required parameters for VNPay payment');\n    }\n\n    // Validate amount (must be positive integer)\n    const amountInt = parseInt(amount);\n    if (isNaN(amountInt) || amountInt <= 0) {\n      throw new Error('Invalid amount for VNPay payment');\n    }\n\n    // Validate orderId format (alphanumeric only, max 100 chars)\n    if (!/^[a-zA-Z0-9]+$/.test(orderId) || orderId.length > 100) {\n      throw new Error('Invalid orderId format for VNPay payment');\n    }\n    const date = new Date();\n    const createDate = this.formatDate(date);\n    const expireDate = this.formatDate(new Date(date.getTime() + 15 * 60 * 1000)); // 15 minutes\n\n    // Clean orderInfo to remove special characters and limit length\n    const cleanOrderInfo = orderInfo.replace(/[^a-zA-Z0-9\\s]/g, '').trim().substring(0, 255);\n    let vnp_Params = {\n      vnp_Version: this.vnp_Version,\n      vnp_Command: this.vnp_Command,\n      vnp_TmnCode: this.vnp_TmnCode,\n      vnp_Locale: this.vnp_Locale,\n      vnp_CurrCode: this.vnp_CurrCode,\n      vnp_TxnRef: orderId,\n      vnp_OrderInfo: cleanOrderInfo,\n      vnp_OrderType: 'other',\n      vnp_Amount: amountInt * 100,\n      // VNPay requires amount in VND cents\n      vnp_ReturnUrl: this.vnp_ReturnUrl,\n      vnp_IpAddr: ipAddr,\n      vnp_CreateDate: createDate,\n      vnp_ExpireDate: expireDate\n    };\n    if (bankCode) {\n      vnp_Params.vnp_BankCode = bankCode;\n    }\n    vnp_Params = this.sortObject(vnp_Params);\n    const qs = require('qs');\n    const signData = qs.stringify(vnp_Params, {\n      encode: false\n    });\n    const hmac = crypto.createHmac('sha512', this.vnp_HashSecret);\n    const signed = hmac.update(Buffer.from(signData, 'utf-8')).digest('hex');\n    vnp_Params.vnp_SecureHash = signed;\n    return this.vnp_Url + '?' + qs.stringify(vnp_Params, {\n      encode: false\n    });\n  }\n\n  // Verify return URL\n  verifyReturnUrl(vnp_Params) {\n    const secureHash = vnp_Params.vnp_SecureHash;\n    delete vnp_Params.vnp_SecureHash;\n    delete vnp_Params.vnp_SecureHashType;\n    const sortedParams = this.sortObject(vnp_Params);\n    const qs = require('qs');\n    const signData = qs.stringify(sortedParams, {\n      encode: false\n    });\n    const hmac = crypto.createHmac('sha512', this.vnp_HashSecret);\n    const signed = hmac.update(Buffer.from(signData, 'utf-8')).digest('hex');\n    return secureHash === signed;\n  }\n\n  // Format date for VNPay\n  formatDate(date) {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const seconds = String(date.getSeconds()).padStart(2, '0');\n    return `${year}${month}${day}${hours}${minutes}${seconds}`;\n  }\n\n  // Get payment status message\n  getPaymentStatus(responseCode) {\n    const statusMap = {\n      '00': 'Giao dịch thành công',\n      '07': 'Trừ tiền thành công. Giao dịch bị nghi ngờ (liên quan tới lừa đảo, giao dịch bất thường).',\n      '09': 'Giao dịch không thành công do: Thẻ/Tài khoản của khách hàng chưa đăng ký dịch vụ InternetBanking tại ngân hàng.',\n      '10': 'Giao dịch không thành công do: Khách hàng xác thực thông tin thẻ/tài khoản không đúng quá 3 lần',\n      '11': 'Giao dịch không thành công do: Đã hết hạn chờ thanh toán. Xin quý khách vui lòng thực hiện lại giao dịch.',\n      '12': 'Giao dịch không thành công do: Thẻ/Tài khoản của khách hàng bị khóa.',\n      '13': 'Giao dịch không thành công do Quý khách nhập sai mật khẩu xác thực giao dịch (OTP). Xin quý khách vui lòng thực hiện lại giao dịch.',\n      '24': 'Giao dịch không thành công do: Khách hàng hủy giao dịch',\n      '51': 'Giao dịch không thành công do: Tài khoản của quý khách không đủ số dư để thực hiện giao dịch.',\n      '65': 'Giao dịch không thành công do: Tài khoản của Quý khách đã vượt quá hạn mức giao dịch trong ngày.',\n      '75': 'Ngân hàng thanh toán đang bảo trì.',\n      '79': 'Giao dịch không thành công do: KH nhập sai mật khẩu thanh toán quá số lần quy định. Xin quý khách vui lòng thực hiện lại giao dịch',\n      '99': 'Các lỗi khác (lỗi còn lại, không có trong danh sách mã lỗi đã liệt kê)'\n    };\n    return statusMap[responseCode] || 'Lỗi không xác định';\n  }\n}\nmodule.exports = new VNPayConfig();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["crypto","require","VNPayConfig","constructor","vnp_TmnCode","process","env","VNP_TMNCODE","vnp_HashSecret","VNP_HASHSECRET","vnp_Url","vnp_ReturnUrl","VNP_RETURN_URL","vnp_IpnUrl","VNP_IPN_URL","vnp_Version","vnp_Command","vnp_CurrCode","vnp_Locale","sortObject","obj","sorted","str","key","hasOwnProperty","push","encodeURIComponent","sort","length","replace","createPaymentUrl","orderId","amount","orderInfo","ipAddr","bankCode","Error","amountInt","parseInt","isNaN","test","date","Date","createDate","formatDate","expireDate","getTime","cleanOrderInfo","trim","substring","vnp_Params","vnp_TxnRef","vnp_OrderInfo","vnp_OrderType","vnp_Amount","vnp_IpAddr","vnp_CreateDate","vnp_ExpireDate","vnp_BankCode","qs","signData","stringify","encode","hmac","createHmac","signed","update","Buffer","from","digest","vnp_SecureHash","verifyReturnUrl","secureHash","vnp_SecureHashType","sortedParams","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getPaymentStatus","responseCode","statusMap","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\config\\","sources":["vnpay.js"],"sourcesContent":["const crypto = require('crypto');\n\nclass VNPayConfig {\n  constructor() {\n    this.vnp_TmnCode = process.env.VNP_TMNCODE;\n    this.vnp_HashSecret = process.env.VNP_HASHSECRET;\n    this.vnp_Url = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html';\n    this.vnp_ReturnUrl = process.env.VNP_RETURN_URL;\n    this.vnp_IpnUrl = process.env.VNP_IPN_URL || `${process.env.VNP_RETURN_URL}/ipn`;\n    this.vnp_Version = '2.1.0';\n    this.vnp_Command = 'pay';\n    this.vnp_CurrCode = 'VND';\n    this.vnp_Locale = 'vn';\n  }\n\n  // Sort object by key\n  sortObject(obj) {\n    let sorted = {};\n    let str = [];\n    let key;\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        str.push(encodeURIComponent(key));\n      }\n    }\n    str.sort();\n    for (key = 0; key < str.length; key++) {\n      sorted[str[key]] = encodeURIComponent(obj[str[key]]).replace(/%20/g, \"+\");\n    }\n    return sorted;\n  }\n\n  // Create payment URL\n  createPaymentUrl(orderId, amount, orderInfo, ipAddr, bankCode = '') {\n    // Validate required parameters\n    if (!orderId || !amount || !orderInfo || !ipAddr) {\n      throw new Error('Missing required parameters for VNPay payment');\n    }\n\n    // Validate amount (must be positive integer)\n    const amountInt = parseInt(amount);\n    if (isNaN(amountInt) || amountInt <= 0) {\n      throw new Error('Invalid amount for VNPay payment');\n    }\n\n    // Validate orderId format (alphanumeric only, max 100 chars)\n    if (!/^[a-zA-Z0-9]+$/.test(orderId) || orderId.length > 100) {\n      throw new Error('Invalid orderId format for VNPay payment');\n    }\n\n    const date = new Date();\n    const createDate = this.formatDate(date);\n    const expireDate = this.formatDate(new Date(date.getTime() + 15 * 60 * 1000)); // 15 minutes\n\n    // Clean orderInfo to remove special characters and limit length\n    const cleanOrderInfo = orderInfo.replace(/[^a-zA-Z0-9\\s]/g, '').trim().substring(0, 255);\n\n    let vnp_Params = {\n      vnp_Version: this.vnp_Version,\n      vnp_Command: this.vnp_Command,\n      vnp_TmnCode: this.vnp_TmnCode,\n      vnp_Locale: this.vnp_Locale,\n      vnp_CurrCode: this.vnp_CurrCode,\n      vnp_TxnRef: orderId,\n      vnp_OrderInfo: cleanOrderInfo,\n      vnp_OrderType: 'other',\n      vnp_Amount: amountInt * 100, // VNPay requires amount in VND cents\n      vnp_ReturnUrl: this.vnp_ReturnUrl,\n      vnp_IpAddr: ipAddr,\n      vnp_CreateDate: createDate,\n      vnp_ExpireDate: expireDate\n    };\n\n    if (bankCode) {\n      vnp_Params.vnp_BankCode = bankCode;\n    }\n\n    vnp_Params = this.sortObject(vnp_Params);\n\n    const qs = require('qs');\n    const signData = qs.stringify(vnp_Params, { encode: false });\n    const hmac = crypto.createHmac('sha512', this.vnp_HashSecret);\n    const signed = hmac.update(Buffer.from(signData, 'utf-8')).digest('hex');\n    vnp_Params.vnp_SecureHash = signed;\n\n    return this.vnp_Url + '?' + qs.stringify(vnp_Params, { encode: false });\n  }\n\n  // Verify return URL\n  verifyReturnUrl(vnp_Params) {\n    const secureHash = vnp_Params.vnp_SecureHash;\n    delete vnp_Params.vnp_SecureHash;\n    delete vnp_Params.vnp_SecureHashType;\n\n    const sortedParams = this.sortObject(vnp_Params);\n    \n    const qs = require('qs');\n    const signData = qs.stringify(sortedParams, { encode: false });\n    const hmac = crypto.createHmac('sha512', this.vnp_HashSecret);\n    const signed = hmac.update(Buffer.from(signData, 'utf-8')).digest('hex');\n\n    return secureHash === signed;\n  }\n\n  // Format date for VNPay\n  formatDate(date) {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const seconds = String(date.getSeconds()).padStart(2, '0');\n    return `${year}${month}${day}${hours}${minutes}${seconds}`;\n  }\n\n  // Get payment status message\n  getPaymentStatus(responseCode) {\n    const statusMap = {\n      '00': 'Giao dịch thành công',\n      '07': 'Trừ tiền thành công. Giao dịch bị nghi ngờ (liên quan tới lừa đảo, giao dịch bất thường).',\n      '09': 'Giao dịch không thành công do: Thẻ/Tài khoản của khách hàng chưa đăng ký dịch vụ InternetBanking tại ngân hàng.',\n      '10': 'Giao dịch không thành công do: Khách hàng xác thực thông tin thẻ/tài khoản không đúng quá 3 lần',\n      '11': 'Giao dịch không thành công do: Đã hết hạn chờ thanh toán. Xin quý khách vui lòng thực hiện lại giao dịch.',\n      '12': 'Giao dịch không thành công do: Thẻ/Tài khoản của khách hàng bị khóa.',\n      '13': 'Giao dịch không thành công do Quý khách nhập sai mật khẩu xác thực giao dịch (OTP). Xin quý khách vui lòng thực hiện lại giao dịch.',\n      '24': 'Giao dịch không thành công do: Khách hàng hủy giao dịch',\n      '51': 'Giao dịch không thành công do: Tài khoản của quý khách không đủ số dư để thực hiện giao dịch.',\n      '65': 'Giao dịch không thành công do: Tài khoản của Quý khách đã vượt quá hạn mức giao dịch trong ngày.',\n      '75': 'Ngân hàng thanh toán đang bảo trì.',\n      '79': 'Giao dịch không thành công do: KH nhập sai mật khẩu thanh toán quá số lần quy định. Xin quý khách vui lòng thực hiện lại giao dịch',\n      '99': 'Các lỗi khác (lỗi còn lại, không có trong danh sách mã lỗi đã liệt kê)'\n    };\n    return statusMap[responseCode] || 'Lỗi không xác định';\n  }\n}\n\nmodule.exports = new VNPayConfig();"],"mappings":"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","ignoreList":[]}},"mtime":1757525399697},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\upload.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst multer = require('multer');\nconst {\n  uploadToCloudinary\n} = require('../config/cloudinary');\nconst router = express.Router();\n\n// Configure multer for memory storage\nconst storage = multer.memoryStorage();\n\n// File filter for images only\nconst fileFilter = (req, file, cb) => {\n  if (file.mimetype.startsWith('image/')) {\n    cb(null, true);\n  } else {\n    cb(new Error('Only image files are allowed!'), false);\n  }\n};\n\n// Configure multer\nconst upload = multer({\n  storage: storage,\n  fileFilter: fileFilter,\n  limits: {\n    fileSize: 5 * 1024 * 1024 // 5MB limit\n  }\n});\n\n// @route   POST /api/upload/image\n// @desc    Upload image to Cloudinary\n// @access  Public (can be made private later)\nrouter.post('/image', upload.single('image'), async (req, res) => {\n  try {\n    if (!req.file) {\n      return res.status(400).json({\n        success: false,\n        message: 'No image file provided'\n      });\n    }\n\n    // Upload to Cloudinary\n    const result = await uploadToCloudinary(req.file.buffer, {\n      folder: 'webcaffe/products',\n      transformation: [{\n        width: 800,\n        height: 600,\n        crop: 'fill',\n        quality: 'auto'\n      }, {\n        format: 'webp'\n      }]\n    });\n    res.json({\n      success: true,\n      data: {\n        imageUrl: result.url,\n        imagePublicId: result.publicId,\n        width: result.width,\n        height: result.height,\n        format: result.format\n      },\n      message: 'Image uploaded successfully'\n    });\n  } catch (error) {\n    console.error('Error uploading image:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Failed to upload image',\n      error: error.message\n    });\n  }\n});\n\n// @route   DELETE /api/upload/image/:publicId\n// @desc    Delete uploaded image from Cloudinary\n// @access  Private/Admin\nrouter.delete('/image/:publicId', async (req, res) => {\n  try {\n    const {\n      deleteFromCloudinary\n    } = require('../config/cloudinary');\n    const publicId = req.params.publicId;\n\n    // Delete from Cloudinary\n    const result = await deleteFromCloudinary(publicId);\n    if (result.result === 'ok') {\n      res.json({\n        success: true,\n        message: 'Image deleted successfully'\n      });\n    } else {\n      res.status(404).json({\n        success: false,\n        message: 'Image not found or already deleted'\n      });\n    }\n  } catch (error) {\n    console.error('Error deleting image:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while deleting image'\n    });\n  }\n});\n\n// Error handling middleware for multer\nrouter.use((error, req, res, next) => {\n  if (error instanceof multer.MulterError) {\n    if (error.code === 'LIMIT_FILE_SIZE') {\n      return res.status(400).json({\n        success: false,\n        message: 'File too large. Maximum size is 5MB.'\n      });\n    }\n  }\n  if (error.message) {\n    return res.status(400).json({\n      success: false,\n      message: error.message\n    });\n  }\n  next(error);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","multer","uploadToCloudinary","router","Router","storage","memoryStorage","fileFilter","req","file","cb","mimetype","startsWith","Error","upload","limits","fileSize","post","single","res","status","json","success","message","result","buffer","folder","transformation","width","height","crop","quality","format","data","imageUrl","url","imagePublicId","publicId","error","console","delete","deleteFromCloudinary","params","use","next","MulterError","code","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["upload.js"],"sourcesContent":["const express = require('express');\nconst multer = require('multer');\nconst { uploadToCloudinary } = require('../config/cloudinary');\nconst router = express.Router();\n\n// Configure multer for memory storage\nconst storage = multer.memoryStorage();\n\n// File filter for images only\nconst fileFilter = (req, file, cb) => {\n  if (file.mimetype.startsWith('image/')) {\n    cb(null, true);\n  } else {\n    cb(new Error('Only image files are allowed!'), false);\n  }\n};\n\n// Configure multer\nconst upload = multer({\n  storage: storage,\n  fileFilter: fileFilter,\n  limits: {\n    fileSize: 5 * 1024 * 1024, // 5MB limit\n  },\n});\n\n// @route   POST /api/upload/image\n// @desc    Upload image to Cloudinary\n// @access  Public (can be made private later)\nrouter.post('/image', upload.single('image'), async (req, res) => {\n  try {\n    if (!req.file) {\n      return res.status(400).json({\n        success: false,\n        message: 'No image file provided'\n      });\n    }\n\n    // Upload to Cloudinary\n    const result = await uploadToCloudinary(req.file.buffer, {\n      folder: 'webcaffe/products',\n      transformation: [\n        { width: 800, height: 600, crop: 'fill', quality: 'auto' },\n        { format: 'webp' }\n      ]\n    });\n\n    res.json({\n      success: true,\n      data: {\n        imageUrl: result.url,\n        imagePublicId: result.publicId,\n        width: result.width,\n        height: result.height,\n        format: result.format\n      },\n      message: 'Image uploaded successfully'\n    });\n  } catch (error) {\n    console.error('Error uploading image:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Failed to upload image',\n      error: error.message\n    });\n  }\n});\n\n// @route   DELETE /api/upload/image/:publicId\n// @desc    Delete uploaded image from Cloudinary\n// @access  Private/Admin\nrouter.delete('/image/:publicId', async (req, res) => {\n  try {\n    const { deleteFromCloudinary } = require('../config/cloudinary');\n    const publicId = req.params.publicId;\n\n    // Delete from Cloudinary\n    const result = await deleteFromCloudinary(publicId);\n\n    if (result.result === 'ok') {\n      res.json({\n        success: true,\n        message: 'Image deleted successfully'\n      });\n    } else {\n      res.status(404).json({\n        success: false,\n        message: 'Image not found or already deleted'\n      });\n    }\n  } catch (error) {\n    console.error('Error deleting image:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while deleting image'\n    });\n  }\n});\n\n// Error handling middleware for multer\nrouter.use((error, req, res, next) => {\n  if (error instanceof multer.MulterError) {\n    if (error.code === 'LIMIT_FILE_SIZE') {\n      return res.status(400).json({\n        success: false,\n        message: 'File too large. Maximum size is 5MB.'\n      });\n    }\n  }\n  \n  if (error.message) {\n    return res.status(400).json({\n      success: false,\n      message: error.message\n    });\n  }\n  \n  next(error);\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757433504901},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\config\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\config\\\\cloudinary.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const cloudinary = require('cloudinary').v2;\n\n// Configure Cloudinary\ncloudinary.config({\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET\n});\n\n// Upload image to Cloudinary\nconst uploadToCloudinary = (buffer, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const uploadOptions = {\n      resource_type: 'image',\n      folder: 'webcaffe/products',\n      transformation: [{\n        width: 800,\n        height: 600,\n        crop: 'fill',\n        quality: 'auto'\n      }, {\n        format: 'webp'\n      }],\n      ...options\n    };\n    cloudinary.uploader.upload_stream(uploadOptions, (error, result) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve({\n          url: result.secure_url,\n          publicId: result.public_id,\n          width: result.width,\n          height: result.height,\n          format: result.format\n        });\n      }\n    }).end(buffer);\n  });\n};\n\n// Delete image from Cloudinary\nconst deleteFromCloudinary = async publicId => {\n  try {\n    const result = await cloudinary.uploader.destroy(publicId);\n    return result;\n  } catch (error) {\n    console.error('Error deleting image from Cloudinary:', error);\n    throw error;\n  }\n};\nmodule.exports = {\n  cloudinary,\n  uploadToCloudinary,\n  deleteFromCloudinary\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjbG91ZGluYXJ5IiwicmVxdWlyZSIsInYyIiwiY29uZmlnIiwiY2xvdWRfbmFtZSIsInByb2Nlc3MiLCJlbnYiLCJDTE9VRElOQVJZX0NMT1VEX05BTUUiLCJhcGlfa2V5IiwiQ0xPVURJTkFSWV9BUElfS0VZIiwiYXBpX3NlY3JldCIsIkNMT1VESU5BUllfQVBJX1NFQ1JFVCIsInVwbG9hZFRvQ2xvdWRpbmFyeSIsImJ1ZmZlciIsIm9wdGlvbnMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInVwbG9hZE9wdGlvbnMiLCJyZXNvdXJjZV90eXBlIiwiZm9sZGVyIiwidHJhbnNmb3JtYXRpb24iLCJ3aWR0aCIsImhlaWdodCIsImNyb3AiLCJxdWFsaXR5IiwiZm9ybWF0IiwidXBsb2FkZXIiLCJ1cGxvYWRfc3RyZWFtIiwiZXJyb3IiLCJyZXN1bHQiLCJ1cmwiLCJzZWN1cmVfdXJsIiwicHVibGljSWQiLCJwdWJsaWNfaWQiLCJlbmQiLCJkZWxldGVGcm9tQ2xvdWRpbmFyeSIsImRlc3Ryb3kiLCJjb25zb2xlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRDpcXGNvZGVcXFdlYkNhZmZlXFxiYWNrZW5kXFxzcmNcXGNvbmZpZ1xcIiwic291cmNlcyI6WyJjbG91ZGluYXJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNsb3VkaW5hcnkgPSByZXF1aXJlKCdjbG91ZGluYXJ5JykudjI7XG5cbi8vIENvbmZpZ3VyZSBDbG91ZGluYXJ5XG5jbG91ZGluYXJ5LmNvbmZpZyh7XG4gIGNsb3VkX25hbWU6IHByb2Nlc3MuZW52LkNMT1VESU5BUllfQ0xPVURfTkFNRSxcbiAgYXBpX2tleTogcHJvY2Vzcy5lbnYuQ0xPVURJTkFSWV9BUElfS0VZLFxuICBhcGlfc2VjcmV0OiBwcm9jZXNzLmVudi5DTE9VRElOQVJZX0FQSV9TRUNSRVQsXG59KTtcblxuLy8gVXBsb2FkIGltYWdlIHRvIENsb3VkaW5hcnlcbmNvbnN0IHVwbG9hZFRvQ2xvdWRpbmFyeSA9IChidWZmZXIsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IHVwbG9hZE9wdGlvbnMgPSB7XG4gICAgICByZXNvdXJjZV90eXBlOiAnaW1hZ2UnLFxuICAgICAgZm9sZGVyOiAnd2ViY2FmZmUvcHJvZHVjdHMnLFxuICAgICAgdHJhbnNmb3JtYXRpb246IFtcbiAgICAgICAgeyB3aWR0aDogODAwLCBoZWlnaHQ6IDYwMCwgY3JvcDogJ2ZpbGwnLCBxdWFsaXR5OiAnYXV0bycgfSxcbiAgICAgICAgeyBmb3JtYXQ6ICd3ZWJwJyB9XG4gICAgICBdLFxuICAgICAgLi4ub3B0aW9uc1xuICAgIH07XG5cbiAgICBjbG91ZGluYXJ5LnVwbG9hZGVyLnVwbG9hZF9zdHJlYW0oXG4gICAgICB1cGxvYWRPcHRpb25zLFxuICAgICAgKGVycm9yLCByZXN1bHQpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICAgIHVybDogcmVzdWx0LnNlY3VyZV91cmwsXG4gICAgICAgICAgICBwdWJsaWNJZDogcmVzdWx0LnB1YmxpY19pZCxcbiAgICAgICAgICAgIHdpZHRoOiByZXN1bHQud2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IHJlc3VsdC5oZWlnaHQsXG4gICAgICAgICAgICBmb3JtYXQ6IHJlc3VsdC5mb3JtYXRcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICkuZW5kKGJ1ZmZlcik7XG4gIH0pO1xufTtcblxuLy8gRGVsZXRlIGltYWdlIGZyb20gQ2xvdWRpbmFyeVxuY29uc3QgZGVsZXRlRnJvbUNsb3VkaW5hcnkgPSBhc3luYyAocHVibGljSWQpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjbG91ZGluYXJ5LnVwbG9hZGVyLmRlc3Ryb3kocHVibGljSWQpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZGVsZXRpbmcgaW1hZ2UgZnJvbSBDbG91ZGluYXJ5OicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNsb3VkaW5hcnksXG4gIHVwbG9hZFRvQ2xvdWRpbmFyeSxcbiAgZGVsZXRlRnJvbUNsb3VkaW5hcnlcbn07Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQ0MsRUFBRTs7QUFFM0M7QUFDQUYsVUFBVSxDQUFDRyxNQUFNLENBQUM7RUFDaEJDLFVBQVUsRUFBRUMsT0FBTyxDQUFDQyxHQUFHLENBQUNDLHFCQUFxQjtFQUM3Q0MsT0FBTyxFQUFFSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csa0JBQWtCO0VBQ3ZDQyxVQUFVLEVBQUVMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSztBQUMxQixDQUFDLENBQUM7O0FBRUY7QUFDQSxNQUFNQyxrQkFBa0IsR0FBR0EsQ0FBQ0MsTUFBTSxFQUFFQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLEtBQUs7RUFDbkQsT0FBTyxJQUFJQyxPQUFPLENBQUMsQ0FBQ0MsT0FBTyxFQUFFQyxNQUFNLEtBQUs7SUFDdEMsTUFBTUMsYUFBYSxHQUFHO01BQ3BCQyxhQUFhLEVBQUUsT0FBTztNQUN0QkMsTUFBTSxFQUFFLG1CQUFtQjtNQUMzQkMsY0FBYyxFQUFFLENBQ2Q7UUFBRUMsS0FBSyxFQUFFLEdBQUc7UUFBRUMsTUFBTSxFQUFFLEdBQUc7UUFBRUMsSUFBSSxFQUFFLE1BQU07UUFBRUMsT0FBTyxFQUFFO01BQU8sQ0FBQyxFQUMxRDtRQUFFQyxNQUFNLEVBQUU7TUFBTyxDQUFDLENBQ25CO01BQ0QsR0FBR1o7SUFDTCxDQUFDO0lBRURkLFVBQVUsQ0FBQzJCLFFBQVEsQ0FBQ0MsYUFBYSxDQUMvQlYsYUFBYSxFQUNiLENBQUNXLEtBQUssRUFBRUMsTUFBTSxLQUFLO01BQ2pCLElBQUlELEtBQUssRUFBRTtRQUNUWixNQUFNLENBQUNZLEtBQUssQ0FBQztNQUNmLENBQUMsTUFBTTtRQUNMYixPQUFPLENBQUM7VUFDTmUsR0FBRyxFQUFFRCxNQUFNLENBQUNFLFVBQVU7VUFDdEJDLFFBQVEsRUFBRUgsTUFBTSxDQUFDSSxTQUFTO1VBQzFCWixLQUFLLEVBQUVRLE1BQU0sQ0FBQ1IsS0FBSztVQUNuQkMsTUFBTSxFQUFFTyxNQUFNLENBQUNQLE1BQU07VUFDckJHLE1BQU0sRUFBRUksTUFBTSxDQUFDSjtRQUNqQixDQUFDLENBQUM7TUFDSjtJQUNGLENBQ0YsQ0FBQyxDQUFDUyxHQUFHLENBQUN0QixNQUFNLENBQUM7RUFDZixDQUFDLENBQUM7QUFDSixDQUFDOztBQUVEO0FBQ0EsTUFBTXVCLG9CQUFvQixHQUFHLE1BQU9ILFFBQVEsSUFBSztFQUMvQyxJQUFJO0lBQ0YsTUFBTUgsTUFBTSxHQUFHLE1BQU05QixVQUFVLENBQUMyQixRQUFRLENBQUNVLE9BQU8sQ0FBQ0osUUFBUSxDQUFDO0lBQzFELE9BQU9ILE1BQU07RUFDZixDQUFDLENBQUMsT0FBT0QsS0FBSyxFQUFFO0lBQ2RTLE9BQU8sQ0FBQ1QsS0FBSyxDQUFDLHVDQUF1QyxFQUFFQSxLQUFLLENBQUM7SUFDN0QsTUFBTUEsS0FBSztFQUNiO0FBQ0YsQ0FBQztBQUVEVSxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNmeEMsVUFBVTtFQUNWWSxrQkFBa0I7RUFDbEJ3QjtBQUNGLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["cloudinary","require","v2","config","cloud_name","process","env","CLOUDINARY_CLOUD_NAME","api_key","CLOUDINARY_API_KEY","api_secret","CLOUDINARY_API_SECRET","uploadToCloudinary","buffer","options","Promise","resolve","reject","uploadOptions","resource_type","folder","transformation","width","height","crop","quality","format","uploader","upload_stream","error","result","url","secure_url","publicId","public_id","end","deleteFromCloudinary","destroy","console","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\config\\","sources":["cloudinary.js"],"sourcesContent":["const cloudinary = require('cloudinary').v2;\n\n// Configure Cloudinary\ncloudinary.config({\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET,\n});\n\n// Upload image to Cloudinary\nconst uploadToCloudinary = (buffer, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const uploadOptions = {\n      resource_type: 'image',\n      folder: 'webcaffe/products',\n      transformation: [\n        { width: 800, height: 600, crop: 'fill', quality: 'auto' },\n        { format: 'webp' }\n      ],\n      ...options\n    };\n\n    cloudinary.uploader.upload_stream(\n      uploadOptions,\n      (error, result) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve({\n            url: result.secure_url,\n            publicId: result.public_id,\n            width: result.width,\n            height: result.height,\n            format: result.format\n          });\n        }\n      }\n    ).end(buffer);\n  });\n};\n\n// Delete image from Cloudinary\nconst deleteFromCloudinary = async (publicId) => {\n  try {\n    const result = await cloudinary.uploader.destroy(publicId);\n    return result;\n  } catch (error) {\n    console.error('Error deleting image from Cloudinary:', error);\n    throw error;\n  }\n};\n\nmodule.exports = {\n  cloudinary,\n  uploadToCloudinary,\n  deleteFromCloudinary\n};"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACC,EAAE;;AAE3C;AACAF,UAAU,CAACG,MAAM,CAAC;EAChBC,UAAU,EAAEC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EAC7CC,OAAO,EAAEH,OAAO,CAACC,GAAG,CAACG,kBAAkB;EACvCC,UAAU,EAAEL,OAAO,CAACC,GAAG,CAACK;AAC1B,CAAC,CAAC;;AAEF;AACA,MAAMC,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACnD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,aAAa,GAAG;MACpBC,aAAa,EAAE,OAAO;MACtBC,MAAM,EAAE,mBAAmB;MAC3BC,cAAc,EAAE,CACd;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAO,CAAC,EAC1D;QAAEC,MAAM,EAAE;MAAO,CAAC,CACnB;MACD,GAAGZ;IACL,CAAC;IAEDd,UAAU,CAAC2B,QAAQ,CAACC,aAAa,CAC/BV,aAAa,EACb,CAACW,KAAK,EAAEC,MAAM,KAAK;MACjB,IAAID,KAAK,EAAE;QACTZ,MAAM,CAACY,KAAK,CAAC;MACf,CAAC,MAAM;QACLb,OAAO,CAAC;UACNe,GAAG,EAAED,MAAM,CAACE,UAAU;UACtBC,QAAQ,EAAEH,MAAM,CAACI,SAAS;UAC1BZ,KAAK,EAAEQ,MAAM,CAACR,KAAK;UACnBC,MAAM,EAAEO,MAAM,CAACP,MAAM;UACrBG,MAAM,EAAEI,MAAM,CAACJ;QACjB,CAAC,CAAC;MACJ;IACF,CACF,CAAC,CAACS,GAAG,CAACtB,MAAM,CAAC;EACf,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMuB,oBAAoB,GAAG,MAAOH,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAMH,MAAM,GAAG,MAAM9B,UAAU,CAAC2B,QAAQ,CAACU,OAAO,CAACJ,QAAQ,CAAC;IAC1D,OAAOH,MAAM;EACf,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdS,OAAO,CAACT,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,MAAMA,KAAK;EACb;AACF,CAAC;AAEDU,MAAM,CAACC,OAAO,GAAG;EACfxC,UAAU;EACVY,kBAAkB;EAClBwB;AACF,CAAC","ignoreList":[]}},"mtime":1757349245117},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\admin.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst {\n  protect,\n  authorize\n} = require('../middleware/auth');\nconst User = require('../models/User');\nconst Product = require('../models/Product');\nconst Order = require('../models/Order');\nconst mongoose = require('mongoose');\n\n// Dashboard statistics\n// @route   GET /api/admin/dashboard/stats\n// @desc    Get dashboard statistics for admin\n// @access  Private (Admin only)\nrouter.get('/dashboard/stats', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get total products count\n    const totalProducts = await Product.countDocuments();\n\n    // Get total orders count\n    const totalOrders = await Order.countDocuments();\n\n    // Get total customers count (users with customer role)\n    const totalCustomers = await User.countDocuments({\n      role: 'customer'\n    });\n\n    // Get total revenue from paid orders (including confirmed, ready, and completed)\n    const revenueResult = await Order.aggregate([{\n      $match: {\n        status: {\n          $in: ['confirmed', 'completed', 'ready']\n        },\n        paymentStatus: 'paid'\n      }\n    }, {\n      $group: {\n        _id: null,\n        totalRevenue: {\n          $sum: '$total'\n        }\n      }\n    }]);\n    const totalRevenue = revenueResult.length > 0 ? revenueResult[0].totalRevenue : 0;\n    res.json({\n      success: true,\n      data: {\n        totalProducts,\n        totalOrders,\n        totalCustomers,\n        totalRevenue\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching dashboard stats:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching dashboard statistics'\n    });\n  }\n});\n\n// @route   GET /api/admin/revenue/total\n// @desc    Get detailed total revenue calculation from completed orders\n// @access  Private (Admin only)\nrouter.get('/revenue/total', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get detailed revenue breakdown from paid orders (including confirmed, ready, and completed)\n    const revenueBreakdown = await Order.aggregate([{\n      $match: {\n        status: {\n          $in: ['confirmed', 'completed', 'ready']\n        },\n        paymentStatus: 'paid'\n      }\n    }, {\n      $group: {\n        _id: null,\n        totalRevenue: {\n          $sum: '$total'\n        },\n        totalSubtotal: {\n          $sum: '$subtotal'\n        },\n        totalTax: {\n          $sum: '$tax'\n        },\n        totalDiscount: {\n          $sum: '$discount'\n        },\n        orderCount: {\n          $sum: 1\n        },\n        averageOrderValue: {\n          $avg: '$total'\n        }\n      }\n    }]);\n\n    // Get revenue by payment method\n    const revenueByPaymentMethod = await Order.aggregate([{\n      $match: {\n        status: {\n          $in: ['confirmed', 'completed', 'ready']\n        },\n        paymentStatus: 'paid'\n      }\n    }, {\n      $group: {\n        _id: '$paymentMethod',\n        revenue: {\n          $sum: '$total'\n        },\n        orderCount: {\n          $sum: 1\n        }\n      }\n    }, {\n      $sort: {\n        revenue: -1\n      }\n    }]);\n\n    // Get revenue by order type\n    const revenueByOrderType = await Order.aggregate([{\n      $match: {\n        status: {\n          $in: ['confirmed', 'completed', 'ready']\n        },\n        paymentStatus: 'paid'\n      }\n    }, {\n      $group: {\n        _id: '$orderType',\n        revenue: {\n          $sum: '$total'\n        },\n        orderCount: {\n          $sum: 1\n        }\n      }\n    }, {\n      $sort: {\n        revenue: -1\n      }\n    }]);\n\n    // Get all paid orders for verification\n    const completedOrders = await Order.find({\n      status: {\n        $in: ['confirmed', 'completed', 'ready']\n      },\n      paymentStatus: 'paid'\n    }).select('orderNumber total status paymentStatus createdAt paymentMethod orderType');\n    const breakdown = revenueBreakdown[0] || {\n      totalRevenue: 0,\n      totalSubtotal: 0,\n      totalTax: 0,\n      totalDiscount: 0,\n      orderCount: 0,\n      averageOrderValue: 0\n    };\n    res.json({\n      success: true,\n      data: {\n        summary: {\n          totalRevenue: breakdown.totalRevenue,\n          totalSubtotal: breakdown.totalSubtotal,\n          totalTax: breakdown.totalTax,\n          totalDiscount: breakdown.totalDiscount,\n          completedOrderCount: breakdown.orderCount,\n          averageOrderValue: breakdown.averageOrderValue\n        },\n        breakdown: {\n          byPaymentMethod: revenueByPaymentMethod,\n          byOrderType: revenueByOrderType\n        },\n        completedOrders: completedOrders.map(order => ({\n          orderNumber: order.orderNumber,\n          total: order.total,\n          status: order.status,\n          paymentStatus: order.paymentStatus,\n          paymentMethod: order.paymentMethod,\n          orderType: order.orderType,\n          createdAt: order.createdAt\n        }))\n      },\n      message: `Total revenue calculated from ${breakdown.orderCount} completed orders`\n    });\n  } catch (error) {\n    console.error('Error calculating total revenue:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while calculating total revenue'\n    });\n  }\n});\n\n// @route   GET /api/admin/dashboard/recent-orders\n// @desc    Get recent orders for admin dashboard\n// @access  Private (Admin only)\nrouter.get('/dashboard/recent-orders', protect, authorize('admin'), async (req, res) => {\n  try {\n    const limit = parseInt(req.query.limit) || 5;\n    const recentOrders = await Order.find().populate('customer', 'firstName lastName email phone address').sort({\n      createdAt: -1\n    }).limit(limit).select('orderNumber customer total status createdAt');\n\n    // Format the response\n    const formattedOrders = recentOrders.map(order => ({\n      _id: order._id,\n      orderNumber: order.orderNumber,\n      customer: order.customer,\n      customerName: order.customer ? `${order.customer.firstName} ${order.customer.lastName}` : 'Unknown Customer',\n      customerEmail: order.customer ? order.customer.email : '',\n      total: order.total,\n      status: order.status,\n      createdAt: order.createdAt\n    }));\n    res.json({\n      success: true,\n      data: formattedOrders\n    });\n  } catch (error) {\n    console.error('Error fetching recent orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching recent orders'\n    });\n  }\n});\n\n// @route   GET /api/admin/dashboard/analytics\n// @desc    Get detailed analytics for admin dashboard\n// @access  Private (Admin only)\nrouter.get('/dashboard/analytics', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get orders by status\n    const ordersByStatus = await Order.aggregate([{\n      $group: {\n        _id: '$status',\n        count: {\n          $sum: 1\n        }\n      }\n    }]);\n\n    // Get revenue by month (last 6 months)\n    const sixMonthsAgo = new Date();\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n    const revenueByMonth = await Order.aggregate([{\n      $match: {\n        createdAt: {\n          $gte: sixMonthsAgo\n        },\n        status: {\n          $in: ['confirmed', 'completed', 'ready']\n        },\n        paymentStatus: 'paid'\n      }\n    }, {\n      $group: {\n        _id: {\n          year: {\n            $year: '$createdAt'\n          },\n          month: {\n            $month: '$createdAt'\n          }\n        },\n        revenue: {\n          $sum: '$total'\n        },\n        orderCount: {\n          $sum: 1\n        }\n      }\n    }, {\n      $sort: {\n        '_id.year': 1,\n        '_id.month': 1\n      }\n    }]);\n\n    // Get top selling products\n    const topProducts = await Order.aggregate([{\n      $unwind: '$items'\n    }, {\n      $group: {\n        _id: '$items.product',\n        name: {\n          $first: '$items.name'\n        },\n        totalSold: {\n          $sum: '$items.quantity'\n        },\n        totalRevenue: {\n          $sum: {\n            $multiply: ['$items.price', '$items.quantity']\n          }\n        }\n      }\n    }, {\n      $sort: {\n        totalSold: -1\n      }\n    }, {\n      $limit: 5\n    }]);\n\n    // Get customer growth (new customers per month)\n    const customerGrowth = await User.aggregate([{\n      $match: {\n        role: 'customer',\n        createdAt: {\n          $gte: sixMonthsAgo\n        }\n      }\n    }, {\n      $group: {\n        _id: {\n          year: {\n            $year: '$createdAt'\n          },\n          month: {\n            $month: '$createdAt'\n          }\n        },\n        newCustomers: {\n          $sum: 1\n        }\n      }\n    }, {\n      $sort: {\n        '_id.year': 1,\n        '_id.month': 1\n      }\n    }]);\n    res.json({\n      success: true,\n      data: {\n        ordersByStatus: ordersByStatus.reduce((acc, item) => {\n          acc[item._id] = item.count;\n          return acc;\n        }, {}),\n        revenueByMonth,\n        topProducts,\n        customerGrowth\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching analytics:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching analytics'\n    });\n  }\n});\nrouter.get('/orders', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = {};\n    if (status && status !== 'all') {\n      filter.status = status;\n    }\n    if (search) {\n      filter.$or = [{\n        orderNumber: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        'customer.firstName': {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        'customer.lastName': {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        'customer.email': {\n          $regex: search,\n          $options: 'i'\n        }\n      }];\n    }\n    const skip = (page - 1) * limit;\n    const orders = await Order.find(filter).populate('customer', 'firstName lastName email phone address').sort({\n      [sortBy]: sortOrder\n    }).skip(skip).limit(limit);\n    const totalOrders = await Order.countDocuments(filter);\n    const totalPages = Math.ceil(totalOrders / limit);\n    res.json({\n      success: true,\n      data: {\n        orders,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalOrders,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching orders'\n    });\n  }\n});\n\n// @route   GET /api/admin/orders/:id\n// @desc    Get single order details\n// @access  Private (Admin only)\nrouter.get('/orders/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const order = await Order.findById(req.params.id).populate('customer', 'firstName lastName email phone address');\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: order\n    });\n  } catch (error) {\n    console.error('Error fetching order details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order details'\n    });\n  }\n});\n\n// @route   PUT /api/admin/orders/:id/status\n// @desc    Update order status\n// @access  Private (Admin only)\nrouter.put('/orders/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const {\n      status\n    } = req.body;\n    const validStatuses = ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'];\n    if (!validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order status'\n      });\n    }\n    const order = await Order.findById(req.params.id);\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n    order.status = status;\n    order.updatedAt = new Date();\n    await order.save();\n    res.json({\n      success: true,\n      message: 'Order status updated successfully',\n      data: order\n    });\n  } catch (error) {\n    console.error('Error updating order status:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating order status'\n    });\n  }\n});\n\n// Customer Management Routes\n\n// @route   GET /api/admin/customers\n// @desc    Get all customers with filtering and pagination\n// @access  Private (Admin only)\nrouter.get('/customers', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = {\n      role: 'customer'\n    };\n    if (search) {\n      filter.$or = [{\n        firstName: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        lastName: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        email: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        phone: {\n          $regex: search,\n          $options: 'i'\n        }\n      }];\n    }\n    const skip = (page - 1) * limit;\n    const customers = await User.find(filter).select('-password').sort({\n      [sortBy]: sortOrder\n    }).skip(skip).limit(limit);\n\n    // Get order statistics for each customer\n    const customersWithStats = await Promise.all(customers.map(async customer => {\n      const orderStats = await Order.aggregate([{\n        $match: {\n          customer: customer._id\n        }\n      }, {\n        $group: {\n          _id: null,\n          totalOrders: {\n            $sum: 1\n          },\n          totalSpent: {\n            $sum: '$total'\n          },\n          lastOrderDate: {\n            $max: '$createdAt'\n          }\n        }\n      }]);\n      return {\n        ...customer.toObject(),\n        orderStats: orderStats[0] || {\n          totalOrders: 0,\n          totalSpent: 0,\n          lastOrderDate: null\n        }\n      };\n    }));\n    const totalCustomers = await User.countDocuments(filter);\n    const totalPages = Math.ceil(totalCustomers / limit);\n    res.json({\n      success: true,\n      data: {\n        customers: customersWithStats,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalCustomers,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching customers:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching customers'\n    });\n  }\n});\n\n// @route   GET /api/admin/customers/:id\n// @desc    Get single customer details with order history\n// @access  Private (Admin only)\nrouter.get('/customers/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const customer = await User.findById(req.params.id).select('-password');\n    if (!customer || customer.role !== 'customer') {\n      return res.status(404).json({\n        success: false,\n        message: 'Customer not found'\n      });\n    }\n\n    // Get customer's order history\n    const orders = await Order.find({\n      customer: req.params.id\n    }).sort({\n      createdAt: -1\n    }).limit(10);\n\n    // Get customer statistics\n    const stats = await Order.aggregate([{\n      $match: {\n        customer: mongoose.Types.ObjectId(req.params.id)\n      }\n    }, {\n      $group: {\n        _id: null,\n        totalOrders: {\n          $sum: 1\n        },\n        totalSpent: {\n          $sum: '$total'\n        },\n        averageOrderValue: {\n          $avg: '$total'\n        },\n        lastOrderDate: {\n          $max: '$createdAt'\n        },\n        firstOrderDate: {\n          $min: '$createdAt'\n        }\n      }\n    }]);\n    res.json({\n      success: true,\n      data: {\n        customer,\n        orders,\n        stats: stats[0] || {\n          totalOrders: 0,\n          totalSpent: 0,\n          averageOrderValue: 0,\n          lastOrderDate: null,\n          firstOrderDate: null\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching customer details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching customer details'\n    });\n  }\n});\n\n// Contact Management Routes\n\n// @route   GET /api/admin/contacts\n// @desc    Get all contact messages with filtering and pagination\n// @access  Private (Admin only)\nrouter.get('/contacts', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = {};\n    if (status && status !== 'all') {\n      filter.status = status;\n    }\n    if (search) {\n      filter.$or = [{\n        name: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        email: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        subject: {\n          $regex: search,\n          $options: 'i'\n        }\n      }, {\n        ticketId: {\n          $regex: search,\n          $options: 'i'\n        }\n      }];\n    }\n    const skip = (page - 1) * limit;\n    const contacts = await Contact.find(filter).sort({\n      [sortBy]: sortOrder\n    }).skip(skip).limit(limit);\n    const totalContacts = await Contact.countDocuments(filter);\n    const totalPages = Math.ceil(totalContacts / limit);\n    res.json({\n      success: true,\n      data: {\n        contacts,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalContacts,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching contacts:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching contacts'\n    });\n  }\n});\n\n// @route   GET /api/admin/contacts/:id\n// @desc    Get single contact message details\n// @access  Private (Admin only)\nrouter.get('/contacts/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const contact = await Contact.findById(req.params.id);\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Error fetching contact details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching contact details'\n    });\n  }\n});\n\n// @route   PUT /api/admin/contacts/:id/status\n// @desc    Update contact message status\n// @access  Private (Admin only)\nrouter.put('/contacts/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const {\n      status\n    } = req.body;\n\n    // Validate status\n    const validStatuses = ['new', 'read', 'replied', 'closed'];\n    if (!validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid status. Must be one of: new, read, replied, closed'\n      });\n    }\n    const contact = await Contact.findByIdAndUpdate(req.params.id, {\n      status,\n      updatedAt: new Date()\n    }, {\n      new: true,\n      runValidators: true\n    });\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n    res.json({\n      success: true,\n      data: contact,\n      message: 'Contact status updated successfully'\n    });\n  } catch (error) {\n    console.error('Error updating contact status:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating contact status'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","protect","authorize","User","Product","Order","mongoose","get","req","res","totalProducts","countDocuments","totalOrders","totalCustomers","role","revenueResult","aggregate","$match","status","$in","paymentStatus","$group","_id","totalRevenue","$sum","length","json","success","data","error","console","message","revenueBreakdown","totalSubtotal","totalTax","totalDiscount","orderCount","averageOrderValue","$avg","revenueByPaymentMethod","revenue","$sort","revenueByOrderType","completedOrders","find","select","breakdown","summary","completedOrderCount","byPaymentMethod","byOrderType","map","order","orderNumber","total","paymentMethod","orderType","createdAt","limit","parseInt","query","recentOrders","populate","sort","formattedOrders","customer","customerName","firstName","lastName","customerEmail","email","ordersByStatus","count","sixMonthsAgo","Date","setMonth","getMonth","revenueByMonth","$gte","year","$year","month","$month","topProducts","$unwind","name","$first","totalSold","$multiply","$limit","customerGrowth","newCustomers","reduce","acc","item","page","search","sortBy","sortOrder","filter","$or","$regex","$options","skip","orders","totalPages","Math","ceil","pagination","currentPage","hasNext","hasPrev","findById","params","id","put","body","validStatuses","includes","updatedAt","save","phone","customers","customersWithStats","Promise","all","orderStats","totalSpent","lastOrderDate","$max","toObject","stats","Types","ObjectId","firstOrderDate","$min","Contact","subject","ticketId","contacts","totalContacts","contact","findByIdAndUpdate","new","runValidators","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["admin.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst { protect, authorize } = require('../middleware/auth');\nconst User = require('../models/User');\nconst Product = require('../models/Product');\nconst Order = require('../models/Order');\nconst mongoose = require('mongoose');\n\n// Dashboard statistics\n// @route   GET /api/admin/dashboard/stats\n// @desc    Get dashboard statistics for admin\n// @access  Private (Admin only)\nrouter.get('/dashboard/stats', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get total products count\n    const totalProducts = await Product.countDocuments();\n\n    // Get total orders count\n    const totalOrders = await Order.countDocuments();\n\n    // Get total customers count (users with customer role)\n    const totalCustomers = await User.countDocuments({ role: 'customer' });\n\n    // Get total revenue from paid orders (including confirmed, ready, and completed)\n    const revenueResult = await Order.aggregate([\n      {\n        $match: {\n          status: { $in: ['confirmed', 'completed', 'ready'] },\n          paymentStatus: 'paid'\n        }\n      },\n      {\n        $group: {\n          _id: null,\n          totalRevenue: { $sum: '$total' }\n        }\n      }\n    ]);\n\n    const totalRevenue = revenueResult.length > 0 ? revenueResult[0].totalRevenue : 0;\n\n    res.json({\n      success: true,\n      data: {\n        totalProducts,\n        totalOrders,\n        totalCustomers,\n        totalRevenue\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching dashboard stats:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching dashboard statistics'\n    });\n  }\n});\n\n// @route   GET /api/admin/revenue/total\n// @desc    Get detailed total revenue calculation from completed orders\n// @access  Private (Admin only)\nrouter.get('/revenue/total', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get detailed revenue breakdown from paid orders (including confirmed, ready, and completed)\n    const revenueBreakdown = await Order.aggregate([\n      {\n        $match: {\n          status: { $in: ['confirmed', 'completed', 'ready'] },\n          paymentStatus: 'paid'\n        }\n      },\n      {\n        $group: {\n          _id: null,\n          totalRevenue: { $sum: '$total' },\n          totalSubtotal: { $sum: '$subtotal' },\n          totalTax: { $sum: '$tax' },\n          totalDiscount: { $sum: '$discount' },\n          orderCount: { $sum: 1 },\n          averageOrderValue: { $avg: '$total' }\n        }\n      }\n    ]);\n\n    // Get revenue by payment method\n    const revenueByPaymentMethod = await Order.aggregate([\n      {\n        $match: {\n          status: { $in: ['confirmed', 'completed', 'ready'] },\n          paymentStatus: 'paid'\n        }\n      },\n      {\n        $group: {\n          _id: '$paymentMethod',\n          revenue: { $sum: '$total' },\n          orderCount: { $sum: 1 }\n        }\n      },\n      {\n        $sort: { revenue: -1 }\n      }\n    ]);\n\n    // Get revenue by order type\n    const revenueByOrderType = await Order.aggregate([\n      {\n        $match: {\n          status: { $in: ['confirmed', 'completed', 'ready'] },\n          paymentStatus: 'paid'\n        }\n      },\n      {\n        $group: {\n          _id: '$orderType',\n          revenue: { $sum: '$total' },\n          orderCount: { $sum: 1 }\n        }\n      },\n      {\n        $sort: { revenue: -1 }\n      }\n    ]);\n\n    // Get all paid orders for verification\n    const completedOrders = await Order.find({\n      status: { $in: ['confirmed', 'completed', 'ready'] },\n      paymentStatus: 'paid'\n    }).select('orderNumber total status paymentStatus createdAt paymentMethod orderType');\n\n    const breakdown = revenueBreakdown[0] || {\n      totalRevenue: 0,\n      totalSubtotal: 0,\n      totalTax: 0,\n      totalDiscount: 0,\n      orderCount: 0,\n      averageOrderValue: 0\n    };\n\n    res.json({\n      success: true,\n      data: {\n        summary: {\n          totalRevenue: breakdown.totalRevenue,\n          totalSubtotal: breakdown.totalSubtotal,\n          totalTax: breakdown.totalTax,\n          totalDiscount: breakdown.totalDiscount,\n          completedOrderCount: breakdown.orderCount,\n          averageOrderValue: breakdown.averageOrderValue\n        },\n        breakdown: {\n          byPaymentMethod: revenueByPaymentMethod,\n          byOrderType: revenueByOrderType\n        },\n        completedOrders: completedOrders.map(order => ({\n          orderNumber: order.orderNumber,\n          total: order.total,\n          status: order.status,\n          paymentStatus: order.paymentStatus,\n          paymentMethod: order.paymentMethod,\n          orderType: order.orderType,\n          createdAt: order.createdAt\n        }))\n      },\n      message: `Total revenue calculated from ${breakdown.orderCount} completed orders`\n    });\n  } catch (error) {\n    console.error('Error calculating total revenue:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while calculating total revenue'\n    });\n  }\n});\n\n// @route   GET /api/admin/dashboard/recent-orders\n// @desc    Get recent orders for admin dashboard\n// @access  Private (Admin only)\nrouter.get('/dashboard/recent-orders', protect, authorize('admin'), async (req, res) => {\n  try {\n    const limit = parseInt(req.query.limit) || 5;\n\n    const recentOrders = await Order.find()\n      .populate('customer', 'firstName lastName email phone address')\n      .sort({ createdAt: -1 })\n      .limit(limit)\n      .select('orderNumber customer total status createdAt');\n\n    // Format the response\n    const formattedOrders = recentOrders.map(order => ({\n      _id: order._id,\n      orderNumber: order.orderNumber,\n      customer: order.customer,\n      customerName: order.customer ? `${order.customer.firstName} ${order.customer.lastName}` : 'Unknown Customer',\n      customerEmail: order.customer ? order.customer.email : '',\n      total: order.total,\n      status: order.status,\n      createdAt: order.createdAt\n    }));\n\n    res.json({\n      success: true,\n      data: formattedOrders\n    });\n  } catch (error) {\n    console.error('Error fetching recent orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching recent orders'\n    });\n  }\n});\n\n// @route   GET /api/admin/dashboard/analytics\n// @desc    Get detailed analytics for admin dashboard\n// @access  Private (Admin only)\nrouter.get('/dashboard/analytics', protect, authorize('admin'), async (req, res) => {\n  try {\n    // Get orders by status\n    const ordersByStatus = await Order.aggregate([\n      {\n        $group: {\n          _id: '$status',\n          count: { $sum: 1 }\n        }\n      }\n    ]);\n\n    // Get revenue by month (last 6 months)\n    const sixMonthsAgo = new Date();\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n\n    const revenueByMonth = await Order.aggregate([\n      {\n        $match: {\n          createdAt: { $gte: sixMonthsAgo },\n          status: { $in: ['confirmed', 'completed', 'ready'] },\n          paymentStatus: 'paid'\n        }\n      },\n      {\n        $group: {\n          _id: {\n            year: { $year: '$createdAt' },\n            month: { $month: '$createdAt' }\n          },\n          revenue: { $sum: '$total' },\n          orderCount: { $sum: 1 }\n        }\n      },\n      {\n        $sort: { '_id.year': 1, '_id.month': 1 }\n      }\n    ]);\n\n    // Get top selling products\n    const topProducts = await Order.aggregate([\n      { $unwind: '$items' },\n      {\n        $group: {\n          _id: '$items.product',\n          name: { $first: '$items.name' },\n          totalSold: { $sum: '$items.quantity' },\n          totalRevenue: { $sum: { $multiply: ['$items.price', '$items.quantity'] } }\n        }\n      },\n      { $sort: { totalSold: -1 } },\n      { $limit: 5 }\n    ]);\n\n    // Get customer growth (new customers per month)\n    const customerGrowth = await User.aggregate([\n      {\n        $match: {\n          role: 'customer',\n          createdAt: { $gte: sixMonthsAgo }\n        }\n      },\n      {\n        $group: {\n          _id: {\n            year: { $year: '$createdAt' },\n            month: { $month: '$createdAt' }\n          },\n          newCustomers: { $sum: 1 }\n        }\n      },\n      {\n        $sort: { '_id.year': 1, '_id.month': 1 }\n      }\n    ]);\n\n    res.json({\n      success: true,\n      data: {\n        ordersByStatus: ordersByStatus.reduce((acc, item) => {\n          acc[item._id] = item.count;\n          return acc;\n        }, {}),\n        revenueByMonth,\n        topProducts,\n        customerGrowth\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching analytics:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching analytics'\n    });\n  }\n});\n\n\n\nrouter.get('/orders', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = {};\n    if (status && status !== 'all') {\n      filter.status = status;\n    }\n    if (search) {\n      filter.$or = [\n        { orderNumber: { $regex: search, $options: 'i' } },\n        { 'customer.firstName': { $regex: search, $options: 'i' } },\n        { 'customer.lastName': { $regex: search, $options: 'i' } },\n        { 'customer.email': { $regex: search, $options: 'i' } }\n      ];\n    }\n\n    const skip = (page - 1) * limit;\n\n    const orders = await Order.find(filter)\n      .populate('customer', 'firstName lastName email phone address')\n      .sort({ [sortBy]: sortOrder })\n      .skip(skip)\n      .limit(limit);\n\n    const totalOrders = await Order.countDocuments(filter);\n    const totalPages = Math.ceil(totalOrders / limit);\n\n    res.json({\n      success: true,\n      data: {\n        orders,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalOrders,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching orders'\n    });\n  }\n});\n\n// @route   GET /api/admin/orders/:id\n// @desc    Get single order details\n// @access  Private (Admin only)\nrouter.get('/orders/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const order = await Order.findById(req.params.id)\n      .populate('customer', 'firstName lastName email phone address');\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: order\n    });\n  } catch (error) {\n    console.error('Error fetching order details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching order details'\n    });\n  }\n});\n\n// @route   PUT /api/admin/orders/:id/status\n// @desc    Update order status\n// @access  Private (Admin only)\nrouter.put('/orders/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const { status } = req.body;\n    const validStatuses = ['pending', 'confirmed', 'preparing', 'ready', 'completed', 'cancelled'];\n\n    if (!validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid order status'\n      });\n    }\n\n    const order = await Order.findById(req.params.id);\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        message: 'Order not found'\n      });\n    }\n\n    order.status = status;\n    order.updatedAt = new Date();\n\n    await order.save();\n\n    res.json({\n      success: true,\n      message: 'Order status updated successfully',\n      data: order\n    });\n  } catch (error) {\n    console.error('Error updating order status:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating order status'\n    });\n  }\n});\n\n// Customer Management Routes\n\n// @route   GET /api/admin/customers\n// @desc    Get all customers with filtering and pagination\n// @access  Private (Admin only)\nrouter.get('/customers', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = { role: 'customer' };\n    if (search) {\n      filter.$or = [\n        { firstName: { $regex: search, $options: 'i' } },\n        { lastName: { $regex: search, $options: 'i' } },\n        { email: { $regex: search, $options: 'i' } },\n        { phone: { $regex: search, $options: 'i' } }\n      ];\n    }\n\n    const skip = (page - 1) * limit;\n\n    const customers = await User.find(filter)\n      .select('-password')\n      .sort({ [sortBy]: sortOrder })\n      .skip(skip)\n      .limit(limit);\n\n    // Get order statistics for each customer\n    const customersWithStats = await Promise.all(\n      customers.map(async (customer) => {\n        const orderStats = await Order.aggregate([\n          { $match: { customer: customer._id } },\n          {\n            $group: {\n              _id: null,\n              totalOrders: { $sum: 1 },\n              totalSpent: { $sum: '$total' },\n              lastOrderDate: { $max: '$createdAt' }\n            }\n          }\n        ]);\n\n        return {\n          ...customer.toObject(),\n          orderStats: orderStats[0] || {\n            totalOrders: 0,\n            totalSpent: 0,\n            lastOrderDate: null\n          }\n        };\n      })\n    );\n\n    const totalCustomers = await User.countDocuments(filter);\n    const totalPages = Math.ceil(totalCustomers / limit);\n\n    res.json({\n      success: true,\n      data: {\n        customers: customersWithStats,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalCustomers,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching customers:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching customers'\n    });\n  }\n});\n\n// @route   GET /api/admin/customers/:id\n// @desc    Get single customer details with order history\n// @access  Private (Admin only)\nrouter.get('/customers/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const customer = await User.findById(req.params.id)\n      .select('-password');\n\n    if (!customer || customer.role !== 'customer') {\n      return res.status(404).json({\n        success: false,\n        message: 'Customer not found'\n      });\n    }\n\n    // Get customer's order history\n    const orders = await Order.find({ customer: req.params.id })\n      .sort({ createdAt: -1 })\n      .limit(10);\n\n    // Get customer statistics\n    const stats = await Order.aggregate([\n      { $match: { customer: mongoose.Types.ObjectId(req.params.id) } },\n      {\n        $group: {\n          _id: null,\n          totalOrders: { $sum: 1 },\n          totalSpent: { $sum: '$total' },\n          averageOrderValue: { $avg: '$total' },\n          lastOrderDate: { $max: '$createdAt' },\n          firstOrderDate: { $min: '$createdAt' }\n        }\n      }\n    ]);\n\n    res.json({\n      success: true,\n      data: {\n        customer,\n        orders,\n        stats: stats[0] || {\n          totalOrders: 0,\n          totalSpent: 0,\n          averageOrderValue: 0,\n          lastOrderDate: null,\n          firstOrderDate: null\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching customer details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching customer details'\n    });\n  }\n});\n\n// Contact Management Routes\n\n// @route   GET /api/admin/contacts\n// @desc    Get all contact messages with filtering and pagination\n// @access  Private (Admin only)\nrouter.get('/contacts', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const search = req.query.search;\n    const sortBy = req.query.sortBy || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n\n    // Build filter object\n    let filter = {};\n    if (status && status !== 'all') {\n      filter.status = status;\n    }\n    if (search) {\n      filter.$or = [\n        { name: { $regex: search, $options: 'i' } },\n        { email: { $regex: search, $options: 'i' } },\n        { subject: { $regex: search, $options: 'i' } },\n        { ticketId: { $regex: search, $options: 'i' } }\n      ];\n    }\n\n    const skip = (page - 1) * limit;\n\n    const contacts = await Contact.find(filter)\n      .sort({ [sortBy]: sortOrder })\n      .skip(skip)\n      .limit(limit);\n\n    const totalContacts = await Contact.countDocuments(filter);\n    const totalPages = Math.ceil(totalContacts / limit);\n\n    res.json({\n      success: true,\n      data: {\n        contacts,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalContacts,\n          hasNext: page < totalPages,\n          hasPrev: page > 1\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching contacts:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching contacts'\n    });\n  }\n});\n\n// @route   GET /api/admin/contacts/:id\n// @desc    Get single contact message details\n// @access  Private (Admin only)\nrouter.get('/contacts/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const contact = await Contact.findById(req.params.id);\n\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Error fetching contact details:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching contact details'\n    });\n  }\n});\n\n// @route   PUT /api/admin/contacts/:id/status\n// @desc    Update contact message status\n// @access  Private (Admin only)\nrouter.put('/contacts/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const Contact = require('../models/Contact');\n    const { status } = req.body;\n\n    // Validate status\n    const validStatuses = ['new', 'read', 'replied', 'closed'];\n    if (!validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid status. Must be one of: new, read, replied, closed'\n      });\n    }\n\n    const contact = await Contact.findByIdAndUpdate(\n      req.params.id,\n      { status, updatedAt: new Date() },\n      { new: true, runValidators: true }\n    );\n\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: contact,\n      message: 'Contact status updated successfully'\n    });\n  } catch (error) {\n    console.error('Error updating contact status:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating contact status'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757588893629},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\shop.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst ShopService = require('../services/shopService');\nconst {\n  protect,\n  authorize\n} = require('../middleware/auth');\n\n// @route   GET /api/shop/config\n// @desc    Get shop configuration\n// @access  Public\nrouter.get('/config', async (req, res) => {\n  try {\n    const result = await ShopService.getShopConfig();\n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in shop config route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching shop configuration'\n    });\n  }\n});\n\n// @route   GET /api/shop/complete\n// @desc    Get complete shop data including menu from database\n// @access  Public\nrouter.get('/complete', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in complete shop data route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching complete shop data'\n    });\n  }\n});\n\n// @route   GET /api/shop/status\n// @desc    Get shop status (open/closed)\n// @access  Public\nrouter.get('/status', async (req, res) => {\n  try {\n    const result = await ShopService.getShopStatus();\n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in shop status route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching shop status'\n    });\n  }\n});\n\n// @route   PUT /api/shop/config\n// @desc    Update shop configuration\n// @access  Private (Admin only)\nrouter.put('/config', protect, authorize('admin'), async (req, res) => {\n  try {\n    const result = await ShopService.updateShopConfig(req.body);\n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data,\n        message: result.message\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in update shop config route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating shop configuration'\n    });\n  }\n});\n\n// @route   POST /api/shop/initialize\n// @desc    Initialize default shop data\n// @access  Private (Admin only)\nrouter.post('/initialize', protect, authorize('admin'), async (req, res) => {\n  try {\n    const result = await ShopService.initializeShopData();\n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data,\n        message: result.message\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in initialize shop data route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while initializing shop data'\n    });\n  }\n});\n\n// @route   GET /api/shop/menu\n// @desc    Get menu data from products\n// @access  Public\nrouter.get('/menu', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    if (result.success) {\n      // Return only menu data\n      res.json({\n        success: true,\n        data: {\n          menu: result.data.menu,\n          businessName: result.data.businessName,\n          lastUpdated: result.data.lastUpdated\n        }\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in menu route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching menu data'\n    });\n  }\n});\n\n// @route   GET /api/shop/ai-context\n// @desc    Get shop data formatted for AI context\n// @access  Public\nrouter.get('/ai-context', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    if (result.success) {\n      // Format data specifically for AI context usage\n      const aiContext = {\n        business: result.data.business,\n        businessName: result.data.business.name,\n        storeName: result.data.business.name,\n        location: result.data.location,\n        contact: result.data.contact,\n        hours: result.data.hours,\n        menu: result.data.menu,\n        services: result.data.services,\n        amenities: result.data.amenities,\n        payment: result.data.payment,\n        policies: result.data.policies,\n        responseTemplates: result.data.responseTemplates,\n        lastUpdated: result.data.lastUpdated\n      };\n      res.json({\n        success: true,\n        data: aiContext\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in AI context route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching AI context data'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","ShopService","protect","authorize","get","req","res","result","getShopConfig","success","json","data","status","message","error","console","getCompleteShopData","getShopStatus","put","updateShopConfig","body","post","initializeShopData","menu","businessName","lastUpdated","aiContext","business","name","storeName","location","contact","hours","services","amenities","payment","policies","responseTemplates","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["shop.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst ShopService = require('../services/shopService');\nconst { protect, authorize } = require('../middleware/auth');\n\n// @route   GET /api/shop/config\n// @desc    Get shop configuration\n// @access  Public\nrouter.get('/config', async (req, res) => {\n  try {\n    const result = await ShopService.getShopConfig();\n    \n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in shop config route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching shop configuration'\n    });\n  }\n});\n\n// @route   GET /api/shop/complete\n// @desc    Get complete shop data including menu from database\n// @access  Public\nrouter.get('/complete', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    \n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in complete shop data route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching complete shop data'\n    });\n  }\n});\n\n// @route   GET /api/shop/status\n// @desc    Get shop status (open/closed)\n// @access  Public\nrouter.get('/status', async (req, res) => {\n  try {\n    const result = await ShopService.getShopStatus();\n    \n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in shop status route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching shop status'\n    });\n  }\n});\n\n// @route   PUT /api/shop/config\n// @desc    Update shop configuration\n// @access  Private (Admin only)\nrouter.put('/config', protect, authorize('admin'), async (req, res) => {\n  try {\n    const result = await ShopService.updateShopConfig(req.body);\n    \n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data,\n        message: result.message\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in update shop config route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while updating shop configuration'\n    });\n  }\n});\n\n// @route   POST /api/shop/initialize\n// @desc    Initialize default shop data\n// @access  Private (Admin only)\nrouter.post('/initialize', protect, authorize('admin'), async (req, res) => {\n  try {\n    const result = await ShopService.initializeShopData();\n    \n    if (result.success) {\n      res.json({\n        success: true,\n        data: result.data,\n        message: result.message\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in initialize shop data route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while initializing shop data'\n    });\n  }\n});\n\n// @route   GET /api/shop/menu\n// @desc    Get menu data from products\n// @access  Public\nrouter.get('/menu', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    \n    if (result.success) {\n      // Return only menu data\n      res.json({\n        success: true,\n        data: {\n          menu: result.data.menu,\n          businessName: result.data.businessName,\n          lastUpdated: result.data.lastUpdated\n        }\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in menu route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching menu data'\n    });\n  }\n});\n\n// @route   GET /api/shop/ai-context\n// @desc    Get shop data formatted for AI context\n// @access  Public\nrouter.get('/ai-context', async (req, res) => {\n  try {\n    const result = await ShopService.getCompleteShopData();\n    \n    if (result.success) {\n      // Format data specifically for AI context usage\n      const aiContext = {\n        business: result.data.business,\n        businessName: result.data.business.name,\n        storeName: result.data.business.name,\n        location: result.data.location,\n        contact: result.data.contact,\n        hours: result.data.hours,\n        menu: result.data.menu,\n        services: result.data.services,\n        amenities: result.data.amenities,\n        payment: result.data.payment,\n        policies: result.data.policies,\n        responseTemplates: result.data.responseTemplates,\n        lastUpdated: result.data.lastUpdated\n      };\n      \n      res.json({\n        success: true,\n        data: aiContext\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        message: result.message\n      });\n    }\n  } catch (error) {\n    console.error('Error in AI context route:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error while fetching AI context data'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757007726524},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\services\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\services\\\\shopService.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const Shop = require('../models/Shop');\nconst Product = require('../models/Product');\nclass ShopService {\n  /**\n   * Get the active shop configuration\n   * @returns {Promise<Object>} Shop configuration\n   */\n  static async getShopConfig() {\n    try {\n      const shop = await Shop.getActiveShop();\n      return {\n        success: true,\n        data: shop\n      };\n    } catch (error) {\n      console.error('Error fetching shop config:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch shop configuration',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get complete shop data including menu from products\n   * @returns {Promise<Object>} Complete shop data with menu\n   */\n  static async getCompleteShopData() {\n    try {\n      const shop = await Shop.getActiveShop();\n      const products = await Product.find({\n        inStock: true\n      }).sort({\n        category: 1,\n        name: 1\n      });\n\n      // Group products by category to create menu structure\n      const menuCategories = {};\n      products.forEach(product => {\n        if (!menuCategories[product.category]) {\n          menuCategories[product.category] = {\n            name: product.category,\n            vietnamese: this.getCategoryVietnameseName(product.category),\n            items: []\n          };\n        }\n\n        // Format product for menu\n        const menuItem = {\n          id: product._id,\n          name: product.name,\n          description: product.description,\n          price: this.formatPrice(product.price),\n          category: product.category,\n          image: product.image,\n          featured: product.featured,\n          ingredients: product.ingredients || [],\n          nutritionalInfo: product.nutritionalInfo || {},\n          sizes: product.sizes || []\n        };\n        menuCategories[product.category].items.push(menuItem);\n      });\n\n      // Convert to array format\n      const menu = {\n        categories: Object.values(menuCategories),\n        specialties: this.extractSpecialties(products)\n      };\n\n      // Combine shop data with dynamic menu\n      const completeData = {\n        ...shop.toObject(),\n        menu,\n        businessName: shop.business.name,\n        // For backward compatibility\n        storeName: shop.business.name,\n        // For backward compatibility\n        lastUpdated: new Date().toISOString()\n      };\n      return {\n        success: true,\n        data: completeData\n      };\n    } catch (error) {\n      console.error('Error fetching complete shop data:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch complete shop data',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Update shop configuration\n   * @param {Object} updateData - Data to update\n   * @returns {Promise<Object>} Updated shop configuration\n   */\n  static async updateShopConfig(updateData) {\n    try {\n      const shop = await Shop.getActiveShop();\n\n      // Update shop data\n      Object.keys(updateData).forEach(key => {\n        if (updateData[key] !== undefined) {\n          shop[key] = updateData[key];\n        }\n      });\n      await shop.save();\n      return {\n        success: true,\n        data: shop,\n        message: 'Shop configuration updated successfully'\n      };\n    } catch (error) {\n      console.error('Error updating shop config:', error);\n      return {\n        success: false,\n        message: 'Failed to update shop configuration',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get shop status (open/closed)\n   * @returns {Promise<Object>} Shop status information\n   */\n  static async getShopStatus() {\n    try {\n      const shop = await Shop.getActiveShop();\n      const isOpen = shop.isCurrentlyOpen();\n      const now = new Date();\n      const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n      const currentHours = isWeekend ? shop.hours.weekends : shop.hours.weekdays;\n      return {\n        success: true,\n        data: {\n          isOpen,\n          currentHours: currentHours.display,\n          nextChange: this.getNextStatusChange(shop, now),\n          timezone: shop.hours.timezone\n        }\n      };\n    } catch (error) {\n      console.error('Error fetching shop status:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch shop status',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get Vietnamese category name mapping\n   * @param {string} category - English category name\n   * @returns {string} Vietnamese category name\n   */\n  static getCategoryVietnameseName(category) {\n    const mapping = {\n      'Cà phê': 'Cà Phê',\n      'Coffee': 'Cà Phê',\n      'Thức uống đậm vị': 'Thức Uống Đậm Vị',\n      'Đồ uống tươi mát': 'Đồ Uống Tươi Mát',\n      'Bánh ngọt': 'Bánh Ngọt',\n      'Pastries': 'Bánh Ngọt',\n      'Light Meals': 'Món Ăn Nhẹ',\n      'Món ăn nhẹ': 'Món Ăn Nhẹ'\n    };\n    return mapping[category] || category;\n  }\n\n  /**\n   * Format price for display\n   * @param {number} price - Price in number format\n   * @returns {string} Formatted price string\n   */\n  static formatPrice(price) {\n    if (typeof price === 'number') {\n      return `${(price * 1000).toLocaleString('vi-VN')} VND`;\n    }\n    return price;\n  }\n\n  /**\n   * Extract specialties from products\n   * @param {Array} products - Array of products\n   * @returns {Array} Array of specialty items\n   */\n  static extractSpecialties(products) {\n    return products.filter(product => product.featured).map(product => product.name).slice(0, 4); // Limit to 4 specialties\n  }\n\n  /**\n   * Calculate next status change time\n   * @param {Object} shop - Shop configuration\n   * @param {Date} now - Current date\n   * @returns {string} Next status change description\n   */\n  static getNextStatusChange(shop, now) {\n    const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n    const currentHours = isWeekend ? shop.hours.weekends : shop.hours.weekdays;\n    const isOpen = shop.isCurrentlyOpen();\n    if (isOpen) {\n      return `Closes at ${currentHours.close}`;\n    } else {\n      return `Opens at ${currentHours.open}`;\n    }\n  }\n\n  /**\n   * Initialize default shop data if none exists\n   * @returns {Promise<Object>} Initialization result\n   */\n  static async initializeShopData() {\n    try {\n      const existingShop = await Shop.findOne({\n        isActive: true\n      });\n      if (!existingShop) {\n        const defaultShop = new Shop({});\n        await defaultShop.save();\n        return {\n          success: true,\n          message: 'Default shop data initialized',\n          data: defaultShop\n        };\n      }\n      return {\n        success: true,\n        message: 'Shop data already exists',\n        data: existingShop\n      };\n    } catch (error) {\n      console.error('Error initializing shop data:', error);\n      return {\n        success: false,\n        message: 'Failed to initialize shop data',\n        error: error.message\n      };\n    }\n  }\n}\nmodule.exports = ShopService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Shop","require","Product","ShopService","getShopConfig","shop","getActiveShop","success","data","error","console","message","getCompleteShopData","products","find","inStock","sort","category","name","menuCategories","forEach","product","vietnamese","getCategoryVietnameseName","items","menuItem","id","_id","description","price","formatPrice","image","featured","ingredients","nutritionalInfo","sizes","push","menu","categories","Object","values","specialties","extractSpecialties","completeData","toObject","businessName","business","storeName","lastUpdated","Date","toISOString","updateShopConfig","updateData","keys","key","undefined","save","getShopStatus","isOpen","isCurrentlyOpen","now","isWeekend","getDay","currentHours","hours","weekends","weekdays","display","nextChange","getNextStatusChange","timezone","mapping","toLocaleString","filter","map","slice","close","open","initializeShopData","existingShop","findOne","isActive","defaultShop","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\services\\","sources":["shopService.js"],"sourcesContent":["const Shop = require('../models/Shop');\nconst Product = require('../models/Product');\n\nclass ShopService {\n  /**\n   * Get the active shop configuration\n   * @returns {Promise<Object>} Shop configuration\n   */\n  static async getShopConfig() {\n    try {\n      const shop = await Shop.getActiveShop();\n      return {\n        success: true,\n        data: shop\n      };\n    } catch (error) {\n      console.error('Error fetching shop config:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch shop configuration',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get complete shop data including menu from products\n   * @returns {Promise<Object>} Complete shop data with menu\n   */\n  static async getCompleteShopData() {\n    try {\n      const shop = await Shop.getActiveShop();\n      const products = await Product.find({ inStock: true }).sort({ category: 1, name: 1 });\n      \n      // Group products by category to create menu structure\n      const menuCategories = {};\n      \n      products.forEach(product => {\n        if (!menuCategories[product.category]) {\n          menuCategories[product.category] = {\n            name: product.category,\n            vietnamese: this.getCategoryVietnameseName(product.category),\n            items: []\n          };\n        }\n        \n        // Format product for menu\n        const menuItem = {\n          id: product._id,\n          name: product.name,\n          description: product.description,\n          price: this.formatPrice(product.price),\n          category: product.category,\n          image: product.image,\n          featured: product.featured,\n          ingredients: product.ingredients || [],\n          nutritionalInfo: product.nutritionalInfo || {},\n          sizes: product.sizes || []\n        };\n        \n        menuCategories[product.category].items.push(menuItem);\n      });\n      \n      // Convert to array format\n      const menu = {\n        categories: Object.values(menuCategories),\n        specialties: this.extractSpecialties(products)\n      };\n      \n      // Combine shop data with dynamic menu\n      const completeData = {\n        ...shop.toObject(),\n        menu,\n        businessName: shop.business.name, // For backward compatibility\n        storeName: shop.business.name,    // For backward compatibility\n        lastUpdated: new Date().toISOString()\n      };\n      \n      return {\n        success: true,\n        data: completeData\n      };\n    } catch (error) {\n      console.error('Error fetching complete shop data:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch complete shop data',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Update shop configuration\n   * @param {Object} updateData - Data to update\n   * @returns {Promise<Object>} Updated shop configuration\n   */\n  static async updateShopConfig(updateData) {\n    try {\n      const shop = await Shop.getActiveShop();\n      \n      // Update shop data\n      Object.keys(updateData).forEach(key => {\n        if (updateData[key] !== undefined) {\n          shop[key] = updateData[key];\n        }\n      });\n      \n      await shop.save();\n      \n      return {\n        success: true,\n        data: shop,\n        message: 'Shop configuration updated successfully'\n      };\n    } catch (error) {\n      console.error('Error updating shop config:', error);\n      return {\n        success: false,\n        message: 'Failed to update shop configuration',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get shop status (open/closed)\n   * @returns {Promise<Object>} Shop status information\n   */\n  static async getShopStatus() {\n    try {\n      const shop = await Shop.getActiveShop();\n      const isOpen = shop.isCurrentlyOpen();\n      \n      const now = new Date();\n      const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n      const currentHours = isWeekend ? shop.hours.weekends : shop.hours.weekdays;\n      \n      return {\n        success: true,\n        data: {\n          isOpen,\n          currentHours: currentHours.display,\n          nextChange: this.getNextStatusChange(shop, now),\n          timezone: shop.hours.timezone\n        }\n      };\n    } catch (error) {\n      console.error('Error fetching shop status:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch shop status',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get Vietnamese category name mapping\n   * @param {string} category - English category name\n   * @returns {string} Vietnamese category name\n   */\n  static getCategoryVietnameseName(category) {\n    const mapping = {\n      'Cà phê': 'Cà Phê',\n      'Coffee': 'Cà Phê',\n      'Thức uống đậm vị': 'Thức Uống Đậm Vị',\n      'Đồ uống tươi mát': 'Đồ Uống Tươi Mát',\n      'Bánh ngọt': 'Bánh Ngọt',\n      'Pastries': 'Bánh Ngọt',\n      'Light Meals': 'Món Ăn Nhẹ',\n      'Món ăn nhẹ': 'Món Ăn Nhẹ'\n    };\n    \n    return mapping[category] || category;\n  }\n\n  /**\n   * Format price for display\n   * @param {number} price - Price in number format\n   * @returns {string} Formatted price string\n   */\n  static formatPrice(price) {\n    if (typeof price === 'number') {\n      return `${(price * 1000).toLocaleString('vi-VN')} VND`;\n    }\n    return price;\n  }\n\n  /**\n   * Extract specialties from products\n   * @param {Array} products - Array of products\n   * @returns {Array} Array of specialty items\n   */\n  static extractSpecialties(products) {\n    return products\n      .filter(product => product.featured)\n      .map(product => product.name)\n      .slice(0, 4); // Limit to 4 specialties\n  }\n\n  /**\n   * Calculate next status change time\n   * @param {Object} shop - Shop configuration\n   * @param {Date} now - Current date\n   * @returns {string} Next status change description\n   */\n  static getNextStatusChange(shop, now) {\n    const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n    const currentHours = isWeekend ? shop.hours.weekends : shop.hours.weekdays;\n    const isOpen = shop.isCurrentlyOpen();\n    \n    if (isOpen) {\n      return `Closes at ${currentHours.close}`;\n    } else {\n      return `Opens at ${currentHours.open}`;\n    }\n  }\n\n  /**\n   * Initialize default shop data if none exists\n   * @returns {Promise<Object>} Initialization result\n   */\n  static async initializeShopData() {\n    try {\n      const existingShop = await Shop.findOne({ isActive: true });\n      \n      if (!existingShop) {\n        const defaultShop = new Shop({});\n        await defaultShop.save();\n        \n        return {\n          success: true,\n          message: 'Default shop data initialized',\n          data: defaultShop\n        };\n      }\n      \n      return {\n        success: true,\n        message: 'Shop data already exists',\n        data: existingShop\n      };\n    } catch (error) {\n      console.error('Error initializing shop data:', error);\n      return {\n        success: false,\n        message: 'Failed to initialize shop data',\n        error: error.message\n      };\n    }\n  }\n}\n\nmodule.exports = ShopService;"],"mappings":"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","ignoreList":[]}},"mtime":1757007727401},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\Shop.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const mongoose = require('mongoose');\nconst shopSchema = new mongoose.Schema({\n  business: {\n    name: {\n      type: String,\n      required: [true, 'Business name is required'],\n      trim: true,\n      default: 'DREAM COFFEE'\n    },\n    type: {\n      type: String,\n      default: 'Premium Coffee Shop'\n    },\n    description: {\n      type: String,\n      default: 'A premium coffee shop in the heart of Ho Chi Minh City, offering exceptional coffee, pastries, and a welcoming atmosphere for work and relaxation.'\n    },\n    established: {\n      type: String,\n      default: '2020'\n    },\n    mission: {\n      type: String,\n      default: 'To provide the finest coffee experience while fostering community connections.'\n    }\n  },\n  location: {\n    address: {\n      type: String,\n      required: [true, 'Address is required'],\n      default: '123 Đường Cà Phê, Quận 1, Thành phố Hồ Chí Minh'\n    },\n    englishAddress: {\n      type: String,\n      default: '123 Coffee Street, District 1, Ho Chi Minh City'\n    },\n    city: {\n      type: String,\n      default: 'Ho Chi Minh City'\n    },\n    district: {\n      type: String,\n      default: 'District 1'\n    },\n    country: {\n      type: String,\n      default: 'Vietnam'\n    },\n    coordinates: {\n      lat: {\n        type: Number,\n        default: 10.7769\n      },\n      lng: {\n        type: Number,\n        default: 106.7009\n      }\n    },\n    landmarks: {\n      type: String,\n      default: 'Near Ben Thanh Market, walking distance from Nguyen Hue Walking Street'\n    }\n  },\n  contact: {\n    phone: {\n      type: String,\n      required: [true, 'Phone number is required'],\n      default: '+84 28 1234 5678'\n    },\n    hotline: {\n      type: String,\n      default: '+84 28 1234 5678'\n    },\n    email: {\n      type: String,\n      required: [true, 'Email is required'],\n      match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email'],\n      default: 'info@dreamcoffee.vn'\n    },\n    website: {\n      type: String,\n      default: 'https://dreamcoffee.vn'\n    },\n    socialMedia: {\n      facebook: {\n        type: String,\n        default: 'https://facebook.com/dreamcoffee'\n      },\n      instagram: {\n        type: String,\n        default: 'https://instagram.com/dreamcoffee'\n      },\n      twitter: {\n        type: String,\n        default: 'https://twitter.com/dreamcoffee'\n      }\n    }\n  },\n  hours: {\n    weekdays: {\n      open: {\n        type: String,\n        default: '06:00'\n      },\n      close: {\n        type: String,\n        default: '20:00'\n      },\n      display: {\n        type: String,\n        default: 'Thứ 2 - Thứ 6: 6:00 - 20:00 (GMT+7)'\n      }\n    },\n    weekends: {\n      open: {\n        type: String,\n        default: '07:00'\n      },\n      close: {\n        type: String,\n        default: '19:00'\n      },\n      display: {\n        type: String,\n        default: 'Thứ 7 - Chủ Nhật: 7:00 - 19:00 (GMT+7)'\n      }\n    },\n    timezone: {\n      type: String,\n      default: 'GMT+7 (ICT)'\n    },\n    notes: {\n      type: String,\n      default: 'Closed on major holidays'\n    },\n    kitchen: {\n      type: String,\n      default: 'Kitchen closes 30 minutes before closing time'\n    }\n  },\n  services: {\n    dineIn: {\n      type: Boolean,\n      default: true\n    },\n    takeaway: {\n      type: Boolean,\n      default: true\n    },\n    delivery: {\n      type: Boolean,\n      default: true\n    },\n    catering: {\n      type: Boolean,\n      default: true\n    },\n    events: {\n      available: {\n        type: Boolean,\n        default: true\n      },\n      notice: {\n        type: String,\n        default: 'Contact us at least 48 hours in advance for bookings'\n      },\n      types: [{\n        type: String,\n        default: ['Private events', 'Meetings', 'Celebrations']\n      }]\n    },\n    wholesale: {\n      available: {\n        type: Boolean,\n        default: true\n      },\n      contact: {\n        type: String,\n        default: 'wholesale@dreamcoffee.vn'\n      },\n      description: {\n        type: String,\n        default: 'Coffee beans and catering services for businesses'\n      }\n    }\n  },\n  amenities: [{\n    type: String,\n    default: ['Free WiFi', 'Air Conditioning', 'Outdoor Seating', 'Power Outlets', 'Free Parking (20 spots, including 2 accessible spaces)', 'Pet Friendly', 'Study Area', 'Meeting Rooms']\n  }],\n  payment: {\n    methods: [{\n      type: String,\n      default: ['Cash', 'Credit Card', 'Debit Card', 'Mobile Payment', 'Bank Transfer']\n    }],\n    currency: {\n      type: String,\n      default: 'VND (Vietnamese Dong)'\n    }\n  },\n  policies: {\n    wifi: {\n      type: String,\n      default: 'Free high-speed WiFi for all customers'\n    },\n    parking: {\n      type: String,\n      default: 'Free parking available - 20 spots including 2 accessible spaces'\n    },\n    pets: {\n      type: String,\n      default: 'Pet-friendly environment'\n    },\n    smoking: {\n      type: String,\n      default: 'Non-smoking establishment'\n    },\n    reservations: {\n      type: String,\n      default: 'Walk-ins welcome, reservations recommended for groups of 6+'\n    }\n  },\n  responseTemplates: {\n    greeting: {\n      type: String,\n      default: 'Xin chào! Tôi là trợ lý AI của DREAM COFFEE. Tôi có thể giúp bạn tìm hiểu về menu, giờ mở cửa, địa chỉ và các dịch vụ của chúng tôi. Bạn cần hỗ trợ gì?'\n    },\n    fallback: {\n      type: String,\n      default: 'Xin lỗi, tôi không hiểu câu hỏi của bạn. Bạn có thể hỏi về menu, giờ mở cửa, địa chỉ, hoặc các dịch vụ của DREAM COFFEE không?'\n    },\n    contact: {\n      type: String,\n      default: 'Bạn có thể liên hệ với chúng tôi qua:\\n📞 Điện thoại: +84 28 1234 5678\\n📧 Email: info@dreamcoffee.vn\\n📍 Địa chỉ: 123 Đường Cà Phê, Quận 1, TP.HCM'\n    }\n  },\n  // This will be true for the main shop configuration\n  isActive: {\n    type: Boolean,\n    default: true\n  }\n}, {\n  timestamps: true\n});\n\n// Index for better performance\nshopSchema.index({\n  isActive: 1\n});\n\n// Static method to get the active shop configuration\nshopSchema.statics.getActiveShop = async function () {\n  let shop = await this.findOne({\n    isActive: true\n  });\n\n  // If no shop exists, create default one\n  if (!shop) {\n    shop = new this({});\n    await shop.save();\n  }\n  return shop;\n};\n\n// Instance method to check if currently open\nshopSchema.methods.isCurrentlyOpen = function () {\n  const now = new Date();\n  const currentHour = now.getHours();\n  const currentMinute = now.getMinutes();\n  const currentTime = currentHour * 60 + currentMinute;\n  const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n  const hours = isWeekend ? this.hours.weekends : this.hours.weekdays;\n  const [openHour, openMinute] = hours.open.split(':').map(Number);\n  const [closeHour, closeMinute] = hours.close.split(':').map(Number);\n  const openTime = openHour * 60 + openMinute;\n  const closeTime = closeHour * 60 + closeMinute;\n  return currentTime >= openTime && currentTime <= closeTime;\n};\nmodule.exports = mongoose.model('Shop', shopSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["mongoose","require","shopSchema","Schema","business","name","type","String","required","trim","default","description","established","mission","location","address","englishAddress","city","district","country","coordinates","lat","Number","lng","landmarks","contact","phone","hotline","email","match","website","socialMedia","facebook","instagram","twitter","hours","weekdays","open","close","display","weekends","timezone","notes","kitchen","services","dineIn","Boolean","takeaway","delivery","catering","events","available","notice","types","wholesale","amenities","payment","methods","currency","policies","wifi","parking","pets","smoking","reservations","responseTemplates","greeting","fallback","isActive","timestamps","index","statics","getActiveShop","shop","findOne","save","isCurrentlyOpen","now","Date","currentHour","getHours","currentMinute","getMinutes","currentTime","isWeekend","getDay","openHour","openMinute","split","map","closeHour","closeMinute","openTime","closeTime","module","exports","model"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\models\\","sources":["Shop.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst shopSchema = new mongoose.Schema({\n  business: {\n    name: {\n      type: String,\n      required: [true, 'Business name is required'],\n      trim: true,\n      default: 'DREAM COFFEE'\n    },\n    type: {\n      type: String,\n      default: 'Premium Coffee Shop'\n    },\n    description: {\n      type: String,\n      default: 'A premium coffee shop in the heart of Ho Chi Minh City, offering exceptional coffee, pastries, and a welcoming atmosphere for work and relaxation.'\n    },\n    established: {\n      type: String,\n      default: '2020'\n    },\n    mission: {\n      type: String,\n      default: 'To provide the finest coffee experience while fostering community connections.'\n    }\n  },\n\n  location: {\n    address: {\n      type: String,\n      required: [true, 'Address is required'],\n      default: '123 Đường Cà Phê, Quận 1, Thành phố Hồ Chí Minh'\n    },\n    englishAddress: {\n      type: String,\n      default: '123 Coffee Street, District 1, Ho Chi Minh City'\n    },\n    city: {\n      type: String,\n      default: 'Ho Chi Minh City'\n    },\n    district: {\n      type: String,\n      default: 'District 1'\n    },\n    country: {\n      type: String,\n      default: 'Vietnam'\n    },\n    coordinates: {\n      lat: {\n        type: Number,\n        default: 10.7769\n      },\n      lng: {\n        type: Number,\n        default: 106.7009\n      }\n    },\n    landmarks: {\n      type: String,\n      default: 'Near Ben Thanh Market, walking distance from Nguyen Hue Walking Street'\n    }\n  },\n\n  contact: {\n    phone: {\n      type: String,\n      required: [true, 'Phone number is required'],\n      default: '+84 28 1234 5678'\n    },\n    hotline: {\n      type: String,\n      default: '+84 28 1234 5678'\n    },\n    email: {\n      type: String,\n      required: [true, 'Email is required'],\n      match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email'],\n      default: 'info@dreamcoffee.vn'\n    },\n    website: {\n      type: String,\n      default: 'https://dreamcoffee.vn'\n    },\n    socialMedia: {\n      facebook: {\n        type: String,\n        default: 'https://facebook.com/dreamcoffee'\n      },\n      instagram: {\n        type: String,\n        default: 'https://instagram.com/dreamcoffee'\n      },\n      twitter: {\n        type: String,\n        default: 'https://twitter.com/dreamcoffee'\n      }\n    }\n  },\n\n  hours: {\n    weekdays: {\n      open: {\n        type: String,\n        default: '06:00'\n      },\n      close: {\n        type: String,\n        default: '20:00'\n      },\n      display: {\n        type: String,\n        default: 'Thứ 2 - Thứ 6: 6:00 - 20:00 (GMT+7)'\n      }\n    },\n    weekends: {\n      open: {\n        type: String,\n        default: '07:00'\n      },\n      close: {\n        type: String,\n        default: '19:00'\n      },\n      display: {\n        type: String,\n        default: 'Thứ 7 - Chủ Nhật: 7:00 - 19:00 (GMT+7)'\n      }\n    },\n    timezone: {\n      type: String,\n      default: 'GMT+7 (ICT)'\n    },\n    notes: {\n      type: String,\n      default: 'Closed on major holidays'\n    },\n    kitchen: {\n      type: String,\n      default: 'Kitchen closes 30 minutes before closing time'\n    }\n  },\n\n  services: {\n    dineIn: {\n      type: Boolean,\n      default: true\n    },\n    takeaway: {\n      type: Boolean,\n      default: true\n    },\n    delivery: {\n      type: Boolean,\n      default: true\n    },\n    catering: {\n      type: Boolean,\n      default: true\n    },\n    events: {\n      available: {\n        type: Boolean,\n        default: true\n      },\n      notice: {\n        type: String,\n        default: 'Contact us at least 48 hours in advance for bookings'\n      },\n      types: [{\n        type: String,\n        default: ['Private events', 'Meetings', 'Celebrations']\n      }]\n    },\n    wholesale: {\n      available: {\n        type: Boolean,\n        default: true\n      },\n      contact: {\n        type: String,\n        default: 'wholesale@dreamcoffee.vn'\n      },\n      description: {\n        type: String,\n        default: 'Coffee beans and catering services for businesses'\n      }\n    }\n  },\n\n  amenities: [{\n    type: String,\n    default: [\n      'Free WiFi',\n      'Air Conditioning',\n      'Outdoor Seating',\n      'Power Outlets',\n      'Free Parking (20 spots, including 2 accessible spaces)',\n      'Pet Friendly',\n      'Study Area',\n      'Meeting Rooms'\n    ]\n  }],\n\n  payment: {\n    methods: [{\n      type: String,\n      default: ['Cash', 'Credit Card', 'Debit Card', 'Mobile Payment', 'Bank Transfer']\n    }],\n    currency: {\n      type: String,\n      default: 'VND (Vietnamese Dong)'\n    }\n  },\n\n  policies: {\n    wifi: {\n      type: String,\n      default: 'Free high-speed WiFi for all customers'\n    },\n    parking: {\n      type: String,\n      default: 'Free parking available - 20 spots including 2 accessible spaces'\n    },\n    pets: {\n      type: String,\n      default: 'Pet-friendly environment'\n    },\n    smoking: {\n      type: String,\n      default: 'Non-smoking establishment'\n    },\n    reservations: {\n      type: String,\n      default: 'Walk-ins welcome, reservations recommended for groups of 6+'\n    }\n  },\n\n  responseTemplates: {\n    greeting: {\n      type: String,\n      default: 'Xin chào! Tôi là trợ lý AI của DREAM COFFEE. Tôi có thể giúp bạn tìm hiểu về menu, giờ mở cửa, địa chỉ và các dịch vụ của chúng tôi. Bạn cần hỗ trợ gì?'\n    },\n    fallback: {\n      type: String,\n      default: 'Xin lỗi, tôi không hiểu câu hỏi của bạn. Bạn có thể hỏi về menu, giờ mở cửa, địa chỉ, hoặc các dịch vụ của DREAM COFFEE không?'\n    },\n    contact: {\n      type: String,\n      default: 'Bạn có thể liên hệ với chúng tôi qua:\\n📞 Điện thoại: +84 28 1234 5678\\n📧 Email: info@dreamcoffee.vn\\n📍 Địa chỉ: 123 Đường Cà Phê, Quận 1, TP.HCM'\n    }\n  },\n\n  // This will be true for the main shop configuration\n  isActive: {\n    type: Boolean,\n    default: true\n  }\n}, {\n  timestamps: true\n});\n\n// Index for better performance\nshopSchema.index({ isActive: 1 });\n\n// Static method to get the active shop configuration\nshopSchema.statics.getActiveShop = async function() {\n  let shop = await this.findOne({ isActive: true });\n  \n  // If no shop exists, create default one\n  if (!shop) {\n    shop = new this({});\n    await shop.save();\n  }\n  \n  return shop;\n};\n\n// Instance method to check if currently open\nshopSchema.methods.isCurrentlyOpen = function() {\n  const now = new Date();\n  const currentHour = now.getHours();\n  const currentMinute = now.getMinutes();\n  const currentTime = currentHour * 60 + currentMinute;\n  \n  const isWeekend = now.getDay() === 0 || now.getDay() === 6;\n  const hours = isWeekend ? this.hours.weekends : this.hours.weekdays;\n  \n  const [openHour, openMinute] = hours.open.split(':').map(Number);\n  const [closeHour, closeMinute] = hours.close.split(':').map(Number);\n  \n  const openTime = openHour * 60 + openMinute;\n  const closeTime = closeHour * 60 + closeMinute;\n  \n  return currentTime >= openTime && currentTime <= closeTime;\n};\n\nmodule.exports = mongoose.model('Shop', shopSchema);"],"mappings":"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","ignoreList":[]}},"mtime":1757007725785},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\routes\\\\contact.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst Contact = require('../models/Contact');\nconst {\n  protect,\n  authorize\n} = require('../middleware/auth');\n\n// @route   POST /api/contact\n// @desc    Submit contact form\n// @access  Public\nrouter.post('/', async (req, res) => {\n  try {\n    const {\n      name,\n      email,\n      subject,\n      message\n    } = req.body;\n\n    // Validate required fields\n    if (!name || !email || !subject || !message) {\n      return res.status(400).json({\n        success: false,\n        message: 'All fields are required'\n      });\n    }\n\n    // Create new contact message\n    const contact = new Contact({\n      name: name.trim(),\n      email: email.trim(),\n      subject: subject.trim(),\n      message: message.trim()\n    });\n    await contact.save();\n    res.status(201).json({\n      success: true,\n      message: 'Your message has been received',\n      data: {\n        ticketId: contact.ticketId,\n        expectedResponseTime: '24-48 hours'\n      }\n    });\n  } catch (error) {\n    console.error('Contact form submission error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error. Please try again later.'\n    });\n  }\n});\n\n// @route   GET /api/contact\n// @desc    Get all contact messages (Admin only)\n// @access  Private/Admin\nrouter.get('/', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const skip = (page - 1) * limit;\n\n    // Build query\n    let query = {};\n    if (status && ['new', 'read', 'replied', 'closed'].includes(status)) {\n      query.status = status;\n    }\n\n    // Get contacts with pagination\n    const contacts = await Contact.find(query).sort({\n      createdAt: -1\n    }).skip(skip).limit(limit);\n\n    // Get total count for pagination\n    const total = await Contact.countDocuments(query);\n    res.json({\n      success: true,\n      data: {\n        contacts,\n        pagination: {\n          current: page,\n          pages: Math.ceil(total / limit),\n          total,\n          limit\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Get contacts error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   GET /api/contact/:id\n// @desc    Get single contact message (Admin only)\n// @access  Private/Admin\nrouter.get('/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const contact = await Contact.findById(req.params.id);\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    // Mark as read if not already\n    if (!contact.isRead) {\n      contact.isRead = true;\n      contact.status = 'read';\n      await contact.save();\n    }\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Get contact error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   PUT /api/contact/:id/status\n// @desc    Update contact message status (Admin only)\n// @access  Private/Admin\nrouter.put('/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const {\n      status\n    } = req.body;\n    if (!['new', 'read', 'replied', 'closed'].includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid status'\n      });\n    }\n    const contact = await Contact.findById(req.params.id);\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n    contact.status = status;\n    if (status !== 'new') {\n      contact.isRead = true;\n    }\n    await contact.save();\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Update contact status error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   DELETE /api/contact/:id\n// @desc    Delete contact message (Admin only)\n// @access  Private/Admin\nrouter.delete('/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const contact = await Contact.findById(req.params.id);\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n    await Contact.findByIdAndDelete(req.params.id);\n    res.json({\n      success: true,\n      message: 'Contact message deleted successfully'\n    });\n  } catch (error) {\n    console.error('Delete contact error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","Contact","protect","authorize","post","req","res","name","email","subject","message","body","status","json","success","contact","trim","save","data","ticketId","expectedResponseTime","error","console","get","page","parseInt","query","limit","skip","includes","contacts","find","sort","createdAt","total","countDocuments","pagination","current","pages","Math","ceil","findById","params","id","isRead","put","delete","findByIdAndDelete","module","exports"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\routes\\","sources":["contact.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Contact = require('../models/Contact');\nconst { protect, authorize } = require('../middleware/auth');\n\n// @route   POST /api/contact\n// @desc    Submit contact form\n// @access  Public\nrouter.post('/', async (req, res) => {\n  try {\n    const { name, email, subject, message } = req.body;\n\n    // Validate required fields\n    if (!name || !email || !subject || !message) {\n      return res.status(400).json({\n        success: false,\n        message: 'All fields are required'\n      });\n    }\n\n    // Create new contact message\n    const contact = new Contact({\n      name: name.trim(),\n      email: email.trim(),\n      subject: subject.trim(),\n      message: message.trim()\n    });\n\n    await contact.save();\n\n    res.status(201).json({\n      success: true,\n      message: 'Your message has been received',\n      data: {\n        ticketId: contact.ticketId,\n        expectedResponseTime: '24-48 hours'\n      }\n    });\n  } catch (error) {\n    console.error('Contact form submission error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error. Please try again later.'\n    });\n  }\n});\n\n// @route   GET /api/contact\n// @desc    Get all contact messages (Admin only)\n// @access  Private/Admin\nrouter.get('/', protect, authorize('admin'), async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const status = req.query.status;\n    const skip = (page - 1) * limit;\n\n    // Build query\n    let query = {};\n    if (status && ['new', 'read', 'replied', 'closed'].includes(status)) {\n      query.status = status;\n    }\n\n    // Get contacts with pagination\n    const contacts = await Contact.find(query)\n      .sort({ createdAt: -1 })\n      .skip(skip)\n      .limit(limit);\n\n    // Get total count for pagination\n    const total = await Contact.countDocuments(query);\n\n    res.json({\n      success: true,\n      data: {\n        contacts,\n        pagination: {\n          current: page,\n          pages: Math.ceil(total / limit),\n          total,\n          limit\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Get contacts error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   GET /api/contact/:id\n// @desc    Get single contact message (Admin only)\n// @access  Private/Admin\nrouter.get('/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const contact = await Contact.findById(req.params.id);\n\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    // Mark as read if not already\n    if (!contact.isRead) {\n      contact.isRead = true;\n      contact.status = 'read';\n      await contact.save();\n    }\n\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Get contact error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   PUT /api/contact/:id/status\n// @desc    Update contact message status (Admin only)\n// @access  Private/Admin\nrouter.put('/:id/status', protect, authorize('admin'), async (req, res) => {\n  try {\n    const { status } = req.body;\n\n    if (!['new', 'read', 'replied', 'closed'].includes(status)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Invalid status'\n      });\n    }\n\n    const contact = await Contact.findById(req.params.id);\n\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    contact.status = status;\n    if (status !== 'new') {\n      contact.isRead = true;\n    }\n    await contact.save();\n\n    res.json({\n      success: true,\n      data: contact\n    });\n  } catch (error) {\n    console.error('Update contact status error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\n// @route   DELETE /api/contact/:id\n// @desc    Delete contact message (Admin only)\n// @access  Private/Admin\nrouter.delete('/:id', protect, authorize('admin'), async (req, res) => {\n  try {\n    const contact = await Contact.findById(req.params.id);\n\n    if (!contact) {\n      return res.status(404).json({\n        success: false,\n        message: 'Contact message not found'\n      });\n    }\n\n    await Contact.findByIdAndDelete(req.params.id);\n\n    res.json({\n      success: true,\n      message: 'Contact message deleted successfully'\n    });\n  } catch (error) {\n    console.error('Delete contact error:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Server error'\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}},"mtime":1757503867690},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"filename\":\"D:\\\\code\\\\WebCaffe\\\\backend\\\\src\\\\models\\\\Contact.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\code\\\\WebCaffe\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.28.4:development":{"value":{"code":"const mongoose = require('mongoose');\nconst contactSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Name is required'],\n    trim: true,\n    maxlength: [100, 'Name cannot exceed 100 characters']\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    lowercase: true,\n    trim: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email']\n  },\n  subject: {\n    type: String,\n    required: [true, 'Subject is required'],\n    trim: true,\n    maxlength: [200, 'Subject cannot exceed 200 characters']\n  },\n  message: {\n    type: String,\n    required: [true, 'Message is required'],\n    trim: true,\n    maxlength: [2000, 'Message cannot exceed 2000 characters']\n  },\n  ticketId: {\n    type: String,\n    unique: true,\n    required: false // Auto-generated in pre-save hook\n  },\n  status: {\n    type: String,\n    enum: ['new', 'read', 'replied', 'closed'],\n    default: 'new'\n  },\n  isRead: {\n    type: Boolean,\n    default: false\n  }\n}, {\n  timestamps: true // Adds createdAt and updatedAt automatically\n});\n\n// Generate ticket ID before saving\ncontactSchema.pre('save', function (next) {\n  if (!this.ticketId) {\n    this.ticketId = 'WC-' + Math.random().toString(36).substr(2, 6).toUpperCase();\n  }\n  next();\n});\n\n// Index for faster queries\ncontactSchema.index({\n  createdAt: -1\n});\ncontactSchema.index({\n  status: 1\n});\ncontactSchema.index({\n  ticketId: 1\n});\nmodule.exports = mongoose.model('Contact', contactSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjb250YWN0U2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInRyaW0iLCJtYXhsZW5ndGgiLCJlbWFpbCIsImxvd2VyY2FzZSIsIm1hdGNoIiwic3ViamVjdCIsIm1lc3NhZ2UiLCJ0aWNrZXRJZCIsInVuaXF1ZSIsInN0YXR1cyIsImVudW0iLCJkZWZhdWx0IiwiaXNSZWFkIiwiQm9vbGVhbiIsInRpbWVzdGFtcHMiLCJwcmUiLCJuZXh0IiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwidG9VcHBlckNhc2UiLCJpbmRleCIsImNyZWF0ZWRBdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJzb3VyY2VSb290IjoiRDpcXGNvZGVcXFdlYkNhZmZlXFxiYWNrZW5kXFxzcmNcXG1vZGVsc1xcIiwic291cmNlcyI6WyJDb250YWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcblxuY29uc3QgY29udGFjdFNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBuYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ05hbWUgaXMgcmVxdWlyZWQnXSxcbiAgICB0cmltOiB0cnVlLFxuICAgIG1heGxlbmd0aDogWzEwMCwgJ05hbWUgY2Fubm90IGV4Y2VlZCAxMDAgY2hhcmFjdGVycyddXG4gIH0sXG4gIGVtYWlsOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ0VtYWlsIGlzIHJlcXVpcmVkJ10sXG4gICAgbG93ZXJjYXNlOiB0cnVlLFxuICAgIHRyaW06IHRydWUsXG4gICAgbWF0Y2g6IFsvXlxcdysoW1xcLi1dP1xcdyspKkBcXHcrKFtcXC4tXT9cXHcrKSooXFwuXFx3ezIsM30pKyQvLCAnUGxlYXNlIGVudGVyIGEgdmFsaWQgZW1haWwnXVxuICB9LFxuICBzdWJqZWN0OiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ1N1YmplY3QgaXMgcmVxdWlyZWQnXSxcbiAgICB0cmltOiB0cnVlLFxuICAgIG1heGxlbmd0aDogWzIwMCwgJ1N1YmplY3QgY2Fubm90IGV4Y2VlZCAyMDAgY2hhcmFjdGVycyddXG4gIH0sXG4gIG1lc3NhZ2U6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IFt0cnVlLCAnTWVzc2FnZSBpcyByZXF1aXJlZCddLFxuICAgIHRyaW06IHRydWUsXG4gICAgbWF4bGVuZ3RoOiBbMjAwMCwgJ01lc3NhZ2UgY2Fubm90IGV4Y2VlZCAyMDAwIGNoYXJhY3RlcnMnXVxuICB9LFxuICB0aWNrZXRJZDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICB1bmlxdWU6IHRydWUsXG4gICAgcmVxdWlyZWQ6IGZhbHNlIC8vIEF1dG8tZ2VuZXJhdGVkIGluIHByZS1zYXZlIGhvb2tcbiAgfSxcbiAgc3RhdHVzOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIGVudW06IFsnbmV3JywgJ3JlYWQnLCAncmVwbGllZCcsICdjbG9zZWQnXSxcbiAgICBkZWZhdWx0OiAnbmV3J1xuICB9LFxuICBpc1JlYWQ6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH1cbn0sIHtcbiAgdGltZXN0YW1wczogdHJ1ZSAvLyBBZGRzIGNyZWF0ZWRBdCBhbmQgdXBkYXRlZEF0IGF1dG9tYXRpY2FsbHlcbn0pO1xuXG4vLyBHZW5lcmF0ZSB0aWNrZXQgSUQgYmVmb3JlIHNhdmluZ1xuY29udGFjdFNjaGVtYS5wcmUoJ3NhdmUnLCBmdW5jdGlvbihuZXh0KSB7XG4gIGlmICghdGhpcy50aWNrZXRJZCkge1xuICAgIHRoaXMudGlja2V0SWQgPSAnV0MtJyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA2KS50b1VwcGVyQ2FzZSgpO1xuICB9XG4gIG5leHQoKTtcbn0pO1xuXG4vLyBJbmRleCBmb3IgZmFzdGVyIHF1ZXJpZXNcbmNvbnRhY3RTY2hlbWEuaW5kZXgoeyBjcmVhdGVkQXQ6IC0xIH0pO1xuY29udGFjdFNjaGVtYS5pbmRleCh7IHN0YXR1czogMSB9KTtcbmNvbnRhY3RTY2hlbWEuaW5kZXgoeyB0aWNrZXRJZDogMSB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnQ29udGFjdCcsIGNvbnRhY3RTY2hlbWEpOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBRXBDLE1BQU1DLGFBQWEsR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQU0sQ0FBQztFQUN4Q0MsSUFBSSxFQUFFO0lBQ0pDLElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsa0JBQWtCLENBQUM7SUFDcENDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLFNBQVMsRUFBRSxDQUFDLEdBQUcsRUFBRSxtQ0FBbUM7RUFDdEQsQ0FBQztFQUNEQyxLQUFLLEVBQUU7SUFDTEwsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSxtQkFBbUIsQ0FBQztJQUNyQ0ksU0FBUyxFQUFFLElBQUk7SUFDZkgsSUFBSSxFQUFFLElBQUk7SUFDVkksS0FBSyxFQUFFLENBQUMsK0NBQStDLEVBQUUsNEJBQTRCO0VBQ3ZGLENBQUM7RUFDREMsT0FBTyxFQUFFO0lBQ1BSLElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUscUJBQXFCLENBQUM7SUFDdkNDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLFNBQVMsRUFBRSxDQUFDLEdBQUcsRUFBRSxzQ0FBc0M7RUFDekQsQ0FBQztFQUNESyxPQUFPLEVBQUU7SUFDUFQsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSxxQkFBcUIsQ0FBQztJQUN2Q0MsSUFBSSxFQUFFLElBQUk7SUFDVkMsU0FBUyxFQUFFLENBQUMsSUFBSSxFQUFFLHVDQUF1QztFQUMzRCxDQUFDO0VBQ0RNLFFBQVEsRUFBRTtJQUNSVixJQUFJLEVBQUVDLE1BQU07SUFDWlUsTUFBTSxFQUFFLElBQUk7SUFDWlQsUUFBUSxFQUFFLEtBQUssQ0FBQztFQUNsQixDQUFDO0VBQ0RVLE1BQU0sRUFBRTtJQUNOWixJQUFJLEVBQUVDLE1BQU07SUFDWlksSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsUUFBUSxDQUFDO0lBQzFDQyxPQUFPLEVBQUU7RUFDWCxDQUFDO0VBQ0RDLE1BQU0sRUFBRTtJQUNOZixJQUFJLEVBQUVnQixPQUFPO0lBQ2JGLE9BQU8sRUFBRTtFQUNYO0FBQ0YsQ0FBQyxFQUFFO0VBQ0RHLFVBQVUsRUFBRSxJQUFJLENBQUM7QUFDbkIsQ0FBQyxDQUFDOztBQUVGO0FBQ0FwQixhQUFhLENBQUNxQixHQUFHLENBQUMsTUFBTSxFQUFFLFVBQVNDLElBQUksRUFBRTtFQUN2QyxJQUFJLENBQUMsSUFBSSxDQUFDVCxRQUFRLEVBQUU7SUFDbEIsSUFBSSxDQUFDQSxRQUFRLEdBQUcsS0FBSyxHQUFHVSxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUM7RUFDL0U7RUFDQUwsSUFBSSxDQUFDLENBQUM7QUFDUixDQUFDLENBQUM7O0FBRUY7QUFDQXRCLGFBQWEsQ0FBQzRCLEtBQUssQ0FBQztFQUFFQyxTQUFTLEVBQUUsQ0FBQztBQUFFLENBQUMsQ0FBQztBQUN0QzdCLGFBQWEsQ0FBQzRCLEtBQUssQ0FBQztFQUFFYixNQUFNLEVBQUU7QUFBRSxDQUFDLENBQUM7QUFDbENmLGFBQWEsQ0FBQzRCLEtBQUssQ0FBQztFQUFFZixRQUFRLEVBQUU7QUFBRSxDQUFDLENBQUM7QUFFcENpQixNQUFNLENBQUNDLE9BQU8sR0FBR2pDLFFBQVEsQ0FBQ2tDLEtBQUssQ0FBQyxTQUFTLEVBQUVoQyxhQUFhLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["mongoose","require","contactSchema","Schema","name","type","String","required","trim","maxlength","email","lowercase","match","subject","message","ticketId","unique","status","enum","default","isRead","Boolean","timestamps","pre","next","Math","random","toString","substr","toUpperCase","index","createdAt","module","exports","model"],"sourceRoot":"D:\\code\\WebCaffe\\backend\\src\\models\\","sources":["Contact.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst contactSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Name is required'],\n    trim: true,\n    maxlength: [100, 'Name cannot exceed 100 characters']\n  },\n  email: {\n    type: String,\n    required: [true, 'Email is required'],\n    lowercase: true,\n    trim: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please enter a valid email']\n  },\n  subject: {\n    type: String,\n    required: [true, 'Subject is required'],\n    trim: true,\n    maxlength: [200, 'Subject cannot exceed 200 characters']\n  },\n  message: {\n    type: String,\n    required: [true, 'Message is required'],\n    trim: true,\n    maxlength: [2000, 'Message cannot exceed 2000 characters']\n  },\n  ticketId: {\n    type: String,\n    unique: true,\n    required: false // Auto-generated in pre-save hook\n  },\n  status: {\n    type: String,\n    enum: ['new', 'read', 'replied', 'closed'],\n    default: 'new'\n  },\n  isRead: {\n    type: Boolean,\n    default: false\n  }\n}, {\n  timestamps: true // Adds createdAt and updatedAt automatically\n});\n\n// Generate ticket ID before saving\ncontactSchema.pre('save', function(next) {\n  if (!this.ticketId) {\n    this.ticketId = 'WC-' + Math.random().toString(36).substr(2, 6).toUpperCase();\n  }\n  next();\n});\n\n// Index for faster queries\ncontactSchema.index({ createdAt: -1 });\ncontactSchema.index({ status: 1 });\ncontactSchema.index({ ticketId: 1 });\n\nmodule.exports = mongoose.model('Contact', contactSchema);"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,aAAa,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACxCC,IAAI,EAAE;IACJC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,CAAC,IAAI,EAAE,kBAAkB,CAAC;IACpCC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,CAAC,GAAG,EAAE,mCAAmC;EACtD,CAAC;EACDC,KAAK,EAAE;IACLL,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,CAAC,IAAI,EAAE,mBAAmB,CAAC;IACrCI,SAAS,EAAE,IAAI;IACfH,IAAI,EAAE,IAAI;IACVI,KAAK,EAAE,CAAC,+CAA+C,EAAE,4BAA4B;EACvF,CAAC;EACDC,OAAO,EAAE;IACPR,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,CAAC,IAAI,EAAE,qBAAqB,CAAC;IACvCC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,CAAC,GAAG,EAAE,sCAAsC;EACzD,CAAC;EACDK,OAAO,EAAE;IACPT,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,CAAC,IAAI,EAAE,qBAAqB,CAAC;IACvCC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,CAAC,IAAI,EAAE,uCAAuC;EAC3D,CAAC;EACDM,QAAQ,EAAE;IACRV,IAAI,EAAEC,MAAM;IACZU,MAAM,EAAE,IAAI;IACZT,QAAQ,EAAE,KAAK,CAAC;EAClB,CAAC;EACDU,MAAM,EAAE;IACNZ,IAAI,EAAEC,MAAM;IACZY,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC;IAC1CC,OAAO,EAAE;EACX,CAAC;EACDC,MAAM,EAAE;IACNf,IAAI,EAAEgB,OAAO;IACbF,OAAO,EAAE;EACX;AACF,CAAC,EAAE;EACDG,UAAU,EAAE,IAAI,CAAC;AACnB,CAAC,CAAC;;AAEF;AACApB,aAAa,CAACqB,GAAG,CAAC,MAAM,EAAE,UAASC,IAAI,EAAE;EACvC,IAAI,CAAC,IAAI,CAACT,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAG,KAAK,GAAGU,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC/E;EACAL,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACAtB,aAAa,CAAC4B,KAAK,CAAC;EAAEC,SAAS,EAAE,CAAC;AAAE,CAAC,CAAC;AACtC7B,aAAa,CAAC4B,KAAK,CAAC;EAAEb,MAAM,EAAE;AAAE,CAAC,CAAC;AAClCf,aAAa,CAAC4B,KAAK,CAAC;EAAEf,QAAQ,EAAE;AAAE,CAAC,CAAC;AAEpCiB,MAAM,CAACC,OAAO,GAAGjC,QAAQ,CAACkC,KAAK,CAAC,SAAS,EAAEhC,aAAa,CAAC","ignoreList":[]}},"mtime":1757504373425}}
>>>>>>> 6d4410d46a2eb43aa5901e5bf1a237da367043e4
